Index: my-app/src/main/java/model/Continent.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package model;\n\n\nimport java.util.HashMap;\n\n/**\n * Represents a continent in the game, storing information such as its name, control value,\n * color, and index values important for gameplay. It also contains a HashMap of territories\n * belonging to this continent.\n */\npublic class Continent {\n\n    public int d_ControlValue,d_InMapIndex;\n    public String d_ContinentColor, d_ContinentId;\n    public HashMap<String, TerritoryDetails> d_Countries;\n\n    /**\n     * Constructs a Continent object with the specified parameters.\n     * This constructor is used when loading .map files during gameplay.\n     * @param p_continentId The name of the continent.\n     * @param p_controlValue The control value for this continent.\n     * @param p_continentColor The color value of the continent.\n     */\n    Continent(String p_continentId, String p_controlValue,String p_continentColor) {        \n        d_InMapIndex = LoadMap.d_InMapIndex;\n        d_Countries = new HashMap<>();\n        d_ContinentColor = p_continentColor;\n        d_ControlValue = Integer.parseInt(p_controlValue);\n        d_ContinentId = p_continentId;\n    }\n\n    /**\n     * Constructs a Continent object with the specified continent ID and control value.\n     * @param p_continentId The ID of the continent.\n     * @param p_controlValue The control value for this continent.\n     */\n    Continent(String p_continentId, int p_controlValue) {\n        d_ContinentId = p_continentId;\n        d_ControlValue = p_controlValue;\n        d_ContinentColor = \"808080\";\n        d_Countries = new HashMap<>();\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/my-app/src/main/java/model/Continent.java b/my-app/src/main/java/model/Continent.java
--- a/my-app/src/main/java/model/Continent.java	(revision c69954fa9cef9a12d1a7db87280027b4939dce79)
+++ b/my-app/src/main/java/model/Continent.java	(date 1710454505000)
@@ -21,7 +21,7 @@
      * @param p_controlValue The control value for this continent.
      * @param p_continentColor The color value of the continent.
      */
-    Continent(String p_continentId, String p_controlValue,String p_continentColor) {        
+      Continent(String p_continentId, String p_controlValue, String p_continentColor) {
         d_InMapIndex = LoadMap.d_InMapIndex;
         d_Countries = new HashMap<>();
         d_ContinentColor = p_continentColor;
@@ -34,7 +34,7 @@
      * @param p_continentId The ID of the continent.
      * @param p_controlValue The control value for this continent.
      */
-    Continent(String p_continentId, int p_controlValue) {
+    public Continent(String p_continentId, int p_controlValue) {
         d_ContinentId = p_continentId;
         d_ControlValue = p_controlValue;
         d_ContinentColor = "808080";
Index: my-app/src/main/java/model/AllotArmies.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package model;\n\n/**\n * it basically assign the armies as per the rules\n */\npublic class AllotArmies {\n    /**\n     * @param p_player current player\n     */\n    public static void allotArmies(Player p_player){\n        int l_totalReinforcementArmies;\n        l_totalReinforcementArmies = 6;\n        p_player.setOwnedArmies(l_totalReinforcementArmies);\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/my-app/src/main/java/model/AllotArmies.java b/my-app/src/main/java/model/AllotArmies.java
--- a/my-app/src/main/java/model/AllotArmies.java	(revision c69954fa9cef9a12d1a7db87280027b4939dce79)
+++ b/my-app/src/main/java/model/AllotArmies.java	(date 1710456630000)
@@ -8,8 +8,22 @@
      * @param p_player current player
      */
     public static void allotArmies(Player p_player){
+        int l_totalControlValue = 0;
         int l_totalReinforcementArmies;
-        l_totalReinforcementArmies = 6;
+        if(p_player.getOwnedTerritories().size() >= 9){
+            if(p_player.getOwnedContinents().size()> 0){
+                for(Continent l_c:p_player.getOwnedContinents().values()){
+                    l_totalControlValue += l_c.d_ControlValue;
+                }
+                l_totalReinforcementArmies = (int)(p_player.getOwnedTerritories().size()/3) + l_totalControlValue;
+            }
+            else{
+                l_totalReinforcementArmies = (int)(p_player.getOwnedTerritories().size()/3);
+            }
+        }
+        else{
+            l_totalReinforcementArmies = 3;
+        }
         p_player.setOwnedArmies(l_totalReinforcementArmies);
     }
 }
\ No newline at end of file
Index: hello.map
===================================================================
diff --git a/hello.map b/hello.map
deleted file mode 100644
--- a/hello.map	(revision c69954fa9cef9a12d1a7db87280027b4939dce79)
+++ /dev/null	(revision c69954fa9cef9a12d1a7db87280027b4939dce79)
@@ -1,117 +0,0 @@
-[Continents]Ostdeutschland
-
-Mitteldeutschland
-Westdeutschland
-Norddeutschland
-adffdasfd
-Sueddeutschland
-[countries]1 Ostfriesland
-2 Schleswig
-3 Holstein
-4 Hamburg
-5 Mecklenburger-Bucht
-6 Vorpommern
-7 Mecklenburgische-Seenplatte
-8 Friesland
-9 Bremen
-10 Lueneburg-Cuxhaven
-11 Oldenburg
-12 Hannover
-13 Braunschweig
-14 Muenster
-15 Detmold
-16 Duesseldorf
-17 Dortmund
-18 Koeln
-19 Magdeburg
-20 Anhalt-Zerbst
-21 Halle
-22 Havelland
-23 Uckermark
-24 Mittelmark
-25 Berlin
-26 Oderland
-27 Elbe-Elster
-28 Niederlausitz
-29 Saarland
-30 Rheinland
-31 Pfalz
-32 Kassel
-33 Giessen
-34 Waldhessen
-35 Taunus
-36 Suedhessen
-37 Kyffhaeuser
-38 Eisenach
-39 Thueringer-Wald
-40 Suhl
-41 Leipzig
-42 Chemnitz
-43 Dresden
-44 Oberlausitz
-45 Mannheim
-46 Stuttgart
-47 Schwarzwald
-48 Ulm
-49 Unterfranken
-50 Oberfranken
-51 Mittelfranken
-52 Oberpfalz
-53 Schwaben
-54 Oberbayern
-55 Niederbayern
-[Border]1 2 3 
-2 1 3 5 
-3 1 2 4 5 7 10 
-4 3 10 
-5 2 3 6 7 
-6 5 7 23 
-7 3 5 6 10 22 23 
-8 9 11 
-9 8 10 11 12 
-10 3 4 7 9 12 19 22 
-11 8 9 12 14 15 
-12 9 10 11 13 15 19 
-13 12 15 19 32 37 
-14 11 15 16 17 
-15 11 12 13 14 17 32 
-16 14 17 18 
-17 14 15 16 18 30 32 33 35 
-18 16 17 30 
-19 10 12 13 20 21 22 24 
-20 19 21 24 27 41 43 
-21 19 20 37 39 41 
-22 7 10 19 23 24 25 
-23 6 7 22 25 26 
-24 19 20 22 25 26 27 28 
-25 22 23 24 26 
-26 23 24 25 28 
-27 20 24 28 44 
-28 24 26 27 44 
-29 30 31 
-30 17 18 29 31 35 
-31 29 30 35 36 45 
-32 13 15 17 33 34 37 38 
-33 17 32 34 35 36 49 
-34 32 33 38 49 
-35 17 30 31 33 36 
-36 31 33 35 45 49 
-37 13 21 32 38 39 
-38 32 34 37 39 40 49 
-39 21 37 38 40 41 42 
-40 38 39 49 50 
-41 20 21 39 42 43 
-42 39 41 43 50 
-43 20 41 42 44 
-44 27 28 43 
-45 31 36 46 47 48 49 
-46 45 48 49 51 53 
-47 45 48 
-48 45 46 47 53 
-49 33 34 36 38 40 45 46 50 51 
-50 40 49 51 52 42 
-51 46 49 50 52 53 54 
-52 50 51 54 55 
-53 46 48 51 54 
-54 51 52 53 55 
-55 52 54 
Index: my-app/src/main/java/controller/GamePhaseManagement.java
===================================================================
diff --git a/my-app/src/main/java/controller/GamePhaseManagement.java b/my-app/src/main/java/controller/GamePhaseManagement.java
deleted file mode 100644
--- a/my-app/src/main/java/controller/GamePhaseManagement.java	(revision c69954fa9cef9a12d1a7db87280027b4939dce79)
+++ /dev/null	(revision c69954fa9cef9a12d1a7db87280027b4939dce79)
@@ -1,62 +0,0 @@
-package controller;
-
-import enumClass.GamePhase;
-import model.GameMap;
-import model.GameRunnerEngine;
-
-public class GamePhaseManagement {
-    public static Communication gamePhaseNULL(String l_commandName, String[] l_data, String[] lData, String l_mapName, GameMap d_Map, GameRunnerEngine d_RunG, GamePhase d_GameGamePhase){
-
-        switch (l_commandName) {
-            case "editmap":
-                try {
-                    if (l_data[1] != "") {
-                        if (GameHelper.isValidMap(l_data[1])) {
-                            l_mapName = l_data[1];
-                            d_Map = d_RunG.editMap(l_mapName);
-                            System.out.println("Edit Map: " + l_mapName);
-                            d_GameGamePhase = GamePhase.EDITMAP;
-                        } else {
-                            System.out.println("----- Map is not valid !!!  -----");
-                        }
-                    }
-                } catch (ArrayIndexOutOfBoundsException e) {
-                    System.out.println("------ Incorrect command Try again with  \"editmap filename.map\" ------");
-                }
-                break;
-
-            case "loadmap":
-                try {
-                    if (l_data[1] != null) {
-                        if (GameHelper.isValidMap(l_data[1])) {
-                            l_mapName = l_data[1];
-                            d_Map = d_RunG.loadMap(l_mapName);
-                            if (d_Map != null) {
-                                if (!d_Map.d_Valid) {
-                                    System.out.println("----- Map is not valid !!! -----");
-                                    d_GameGamePhase = GamePhase.NULL;
-                                } else {
-                                    System.out.println("----- Map Validated !!!! -----");
-                                    System.out.println("----  You can start adding players :- !!!! ----");
-                                    d_GameGamePhase = GamePhase.STARTUP;
-                                }
-                            } else {
-                                d_GameGamePhase = GamePhase.NULL;
-                            }
-                        } else {
-                            System.out.println("----- Map is not valid !!! -----");
-                        }
-                    }
-                } catch (Exception e) {
-                    System.out.println("------ Incorrect command Try again with  \"loadmap filename.map\" ------");
-
-                }
-                break;
-            default:
-                System.out.println("----- Try LoadMap or EditMap first: loadmap filename.map or editmap filename.map ------");
-                break;
-        }
-        Communication communication = new Communication(d_Map,d_GameGamePhase);
-        return  communication;
-    }
-}
Index: Continent.java
===================================================================
diff --git a/Continent.java b/Continent.java
deleted file mode 100644
--- a/Continent.java	(revision c69954fa9cef9a12d1a7db87280027b4939dce79)
+++ /dev/null	(revision c69954fa9cef9a12d1a7db87280027b4939dce79)
@@ -1,98 +0,0 @@
-package model;
-
-
-import java.util.HashMap;
-
-/**
- * The Continent Class contains data about the continents, such as their name, control value, color, and index values. * 
- *Every territory that is a part of a continent is kept in a hash map, 
- *with the corresponding Territory Object serving as the key and the Territory String as the value.
- */
-public class Continent {
-
-    private int d_ControlValue;
-    private String d_ContinentColor;
-    private String d_ContinentId;
-    private int d_InMapIndex;
-    private HashMap<String, TerritoryDetails> d_Countries;
-
-    /**
-     * Creates a Continent object with the arguments passed
-     * This constructor will be used when loading .map files
-     * @param p_continentId  Name of the continent
-     * @param p_controlValue   Control value for this continent
-     * @param p_continentColor Color value of the continent
-     */
-    Continent(String p_continentId, String p_controlValue,String p_continentColor) {        
-        d_InMapIndex = LoadMap.d_InMapIndex;
-        d_Countries = new HashMap<>();
-        d_ContinentColor = p_continentColor;
-        d_ControlValue = Integer.parseInt(p_controlValue);
-        d_ContinentId = p_continentId;
-    }
-
-
-    /**
-     * Creates a Continent based on continentId and controlValue(used in editMap)
-     * Will be used when user defined continents are to be created.
-     * @param p_continentId  Id of the continent
-     * @param p_controlValue Control value for this continent
-     */
-    Continent(String p_continentId, int p_controlValue) {
-        d_ContinentId = p_continentId;
-        d_ControlValue = p_controlValue;
-        d_ContinentColor = "000";
-        d_Countries = new HashMap<>();
-    }
-
-    /**
-     * Returns the name of the continent.
-     *
-     * @return returns the name of the continent
-     */
-    public String getContinentId() {
-        return this.d_ContinentId;
-    }
-
-    /**
-     * Returns the Control Value of the continent.
-     * @return returns the Control Value of the continent
-     */
-    public int getControlValue() {
-        return this.d_ControlValue;
-    }
-
-
-    /**
-     * Returns the color of the continent.
-     * @return returns the color of the continent
-     */
-    public String getContinentColor() {
-        return this.d_ContinentColor;
-    }
-
-
-    /**
-     * Returns the territories as HashMap that belong to this Continent
-     * @return returns the HashMap containing territories for a continent
-     */
-    public HashMap<String, TerritoryDetails> getTerritories() {
-        return d_Countries;
-    }
-
-    /**
-     * Returns the Index value for this continent when saved  in ".map" file following domination's rules
-     * @return returns Index value of the continent
-     */
-    public int getInMapIndex() {
-        return this.d_InMapIndex;
-    }
-
-    /**
-     * Sets the Index value of this continent
-     * @param p_inMapIndex Index value of the continent
-     */
-    public void setInMapIndex(int p_inMapIndex) {
-        d_InMapIndex = p_inMapIndex;
-    }
-}
Index: Order.java
===================================================================
diff --git a/Order.java b/Order.java
deleted file mode 100644
--- a/Order.java	(revision c69954fa9cef9a12d1a7db87280027b4939dce79)
+++ /dev/null	(revision c69954fa9cef9a12d1a7db87280027b4939dce79)
@@ -1,48 +0,0 @@
-package model;
-
-/**
- * class performs execute orders functionality 
- */
-public class Order {
-	
-	/**
-	 * @param d_TerritoryId is for territory name
-	 * @param d_Player player issuing deploy order
-	 */
-    private int d_NumArmies;
-    private String d_TerritoryId;
-    private Player d_Player;
-
-  
-    /**
-     * This constructor will initialize the order object with deploy details.
-     * @param p_player current player issuing deploy order
-     * @param p_territoryId territory where armies will be deployed
-     * @param p_numArmies total armies which will be deployed
-     */
-    public Order(Player p_player,String p_territoryId,int p_numArmies) {
-        d_Player = p_player;
-        d_TerritoryId = p_territoryId;
-        d_NumArmies = p_numArmies;
-    }
-
-    /**
-     * method which enacts the order
-     * @return true if successful, else false
-     */
-    public boolean execute(){
-        TerritoryDetails l_c= d_Player.getOwnedTerritories().get(d_TerritoryId.toLowerCase());
-        int l_existingArmies = l_c.getNumberOfArmies();
-        l_existingArmies += d_NumArmies;
-        l_c.setNumberOfArmies(l_existingArmies);
-        return true;
-    }
-
-    /**
-     * Getter for current player
-     * @return d_player
-     */
-    public Player getD_player() {
-        return d_Player;
-    }
-}
\ No newline at end of file
Index: AllotArmies.java
===================================================================
diff --git a/AllotArmies.java b/AllotArmies.java
deleted file mode 100644
--- a/AllotArmies.java	(revision c69954fa9cef9a12d1a7db87280027b4939dce79)
+++ /dev/null	(revision c69954fa9cef9a12d1a7db87280027b4939dce79)
@@ -1,31 +0,0 @@
-package model;
-
-/**
- * This is the Phase where armies are assigned according to WarZone rules.
- *
- */
-public class AllotArmies {
-    /**
-     * The armies is assigned to player as per WarZone rules.
-     * @param p_player current player
-     */
-    public static void allotArmies(Player p_player){
-        int l_totalControlValue = 0;
-        int l_totalReinforcementArmies;
-        if(p_player.getOwnedTerritories().size() < 9){
-            l_totalReinforcementArmies = 3;
-        }
-        else{
-            if(p_player.getOwnedContinents().size()<=0){
-                l_totalReinforcementArmies = (int)(p_player.getOwnedTerritories().size()/3);
-            }
-            else{
-                for(Continent l_c:p_player.getOwnedContinents().values()){
-                    l_totalControlValue += l_c.getControlValue();
-                }
-                l_totalReinforcementArmies = (int)(p_player.getOwnedTerritories().size()/3) + l_totalControlValue;
-            }
-        }
-        p_player.setOwnedArmies(l_totalReinforcementArmies);
-    }
-}
Index: my-app/.idea/libraries/Maven__junit_junit_4_11.xml
===================================================================
diff --git a/my-app/.idea/libraries/Maven__junit_junit_4_11.xml b/my-app/.idea/libraries/Maven__junit_junit_4_11.xml
deleted file mode 100644
--- a/my-app/.idea/libraries/Maven__junit_junit_4_11.xml	(revision c69954fa9cef9a12d1a7db87280027b4939dce79)
+++ /dev/null	(revision c69954fa9cef9a12d1a7db87280027b4939dce79)
@@ -1,13 +0,0 @@
-<component name="libraryTable">
-  <library name="Maven: junit:junit:4.11">
-    <CLASSES>
-      <root url="jar://$MAVEN_REPOSITORY$/junit/junit/4.11/junit-4.11.jar!/" />
-    </CLASSES>
-    <JAVADOC>
-      <root url="jar://$MAVEN_REPOSITORY$/junit/junit/4.11/junit-4.11-javadoc.jar!/" />
-    </JAVADOC>
-    <SOURCES>
-      <root url="jar://$MAVEN_REPOSITORY$/junit/junit/4.11/junit-4.11-sources.jar!/" />
-    </SOURCES>
-  </library>
-</component>
\ No newline at end of file
Index: StartUpPhase.java
===================================================================
diff --git a/StartUpPhase.java b/StartUpPhase.java
deleted file mode 100644
--- a/StartUpPhase.java	(revision c69954fa9cef9a12d1a7db87280027b4939dce79)
+++ /dev/null	(revision c69954fa9cef9a12d1a7db87280027b4939dce79)
@@ -1,124 +0,0 @@
-package model;
-
-import java.util.ArrayList;
-import java.util.Iterator;
-
-/**
- * Implementation of startup phase of the game.
- *
- */
-public class StartUpPhase {
-	
-
-	/**
-	 * Addition of players to the game
-	 * The maximum no. of players thta are allowed to play are 5
-	 * 
-	 * @param p_players List of players 
-	 * @param p_playerName Names of players
-	 * @return true if the players are added successfully, else false
-	 */
-	public boolean addPlayer(ArrayList<Player> p_players, String p_playerName){
-		if(p_players.size()==5) {
-			System.out.println("No further players can be added. There can be a maximum of five players.\n");
-			return false;
-		}
-		p_players.add(new Player(p_playerName));
-		return true;
-	}
-
-	/**
-	 * Removing players from the game
-	 * 
-	 * @param p_players List of players
-	 * @param p_playerName Names of players
-	 * @return true if the players are removed successfully, else false
-	 */
-	public boolean removePlayer(ArrayList<Player> p_players, String p_playerName){
-		Iterator<Player> iterator = p_players.listIterator();
-		while(iterator.hasNext()) {
-			Player l_p = iterator.next();
-			if(l_p.getPlayerName().equals(p_playerName)) {
-				p_players.remove(l_p);
-				return true;
-			}
-		}
-		return false;
-	}
-
-	/**
-	 * Responsible for distributing territories amongst players.
-	 * @param p_map Game map
-	 * @param p_players List of players in the game
-	 * @return true if successful, else false
-	 */
-	public boolean assignTerritories(GameMap p_map, ArrayList<Player> p_players) {
-		int l_numberOfPlayers = p_players.size();
-		if(p_players.size()<2) {
-			System.out.println("Minimum two players are required to play the game.");
-			System.exit(0);
-		}
-		int l_counter = 0;
-		for(TerritoryDetails l_c : p_map.getTerritories().values()) {
-			Player l_p = p_players.get(l_counter);
-			l_p.getOwnedTerritories().put(l_c.getTerritoryID().toLowerCase(), l_c);
-			if(l_counter<l_numberOfPlayers-1)
-				l_counter++;
-			else
-				l_counter=0;
-		}
-		return true;
-	}
-
-	/**
-	 * Shows map with along with Owner and Army units.
-	 * @param p_players List of players in the game
-	 * @param p_map Game map
-	 */
-	public void showMap(ArrayList<Player> p_players, GameMap p_map) {
-		if(p_map==null)
-			return;
-		if(p_players.size()==0 || p_players.get(0).getOwnedTerritories().size()==0) {
-			GameRunnerEngine l_rc = new GameRunnerEngine();
-			l_rc.showMap(p_map);
-			return;
-		}
-		System.out.format("%25s%25s%35s%25s%10s\n", "Owner", "Territory", "Neighbours", "Continent", "Armies");
-		System.out.format("%85s\n", "_________________________________________________________________________________________________________________________");
-		boolean l_printPlayerName = true;
-		boolean l_printContinentId = true;
-		boolean l_printTerritoryId = true;
-		boolean l_printNumberOfArmies = true;
-
-		for(int i=0; i<p_players.size(); i++){
-			Player l_p = p_players.get(i);
-			for(TerritoryDetails l_territory : l_p.getOwnedTerritories().values()) {
-				for(TerritoryDetails l_neighbour : l_territory.getNeighbours().values()) {
-					if(l_printPlayerName && l_printContinentId && l_printTerritoryId) {
-						System.out.format("\n%25s%25s%35s%25s%10d\n", l_p.getPlayerName(), l_territory.getTerritoryID(), l_neighbour.getTerritoryID(), l_territory.getInContinent(), l_territory.getNumberOfArmies());
-						l_printPlayerName = false;
-						l_printContinentId = false;
-						l_printTerritoryId = false;
-						l_printNumberOfArmies = false;
-					}
-					else if(l_printContinentId && l_printTerritoryId && l_printNumberOfArmies) {
-						System.out.format("\n%25s%25s%35s%25s%10d\n", "", l_territory.getTerritoryID(), l_neighbour.getTerritoryID(), l_territory.getInContinent(), l_territory.getNumberOfArmies());
-						l_printPlayerName = false;
-						l_printTerritoryId = false;
-						l_printNumberOfArmies = false;
-					}
-					else {
-						System.out.format("\n%25s%25s%35s%25s%10s\n", "", "", l_neighbour.getTerritoryID(), "", "");
-					}
-				}
-				l_printContinentId = true;
-				l_printTerritoryId = true;
-				l_printNumberOfArmies = true;
-			}
-			l_printPlayerName = true;
-			l_printContinentId = true;
-			l_printTerritoryId = true;
-			l_printNumberOfArmies = true;
-		}
-	}
-}
Index: my-app/.idea/modules.xml
===================================================================
diff --git a/my-app/.idea/modules.xml b/my-app/.idea/modules.xml
deleted file mode 100644
--- a/my-app/.idea/modules.xml	(revision c69954fa9cef9a12d1a7db87280027b4939dce79)
+++ /dev/null	(revision c69954fa9cef9a12d1a7db87280027b4939dce79)
@@ -1,8 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="ProjectModuleManager">
-    <modules>
-      <module fileurl="file://$PROJECT_DIR$/my-app.iml" filepath="$PROJECT_DIR$/my-app.iml" />
-    </modules>
-  </component>
-</project>
\ No newline at end of file
Index: my-app/.idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/my-app/.idea/workspace.xml b/my-app/.idea/workspace.xml
deleted file mode 100644
--- a/my-app/.idea/workspace.xml	(revision c69954fa9cef9a12d1a7db87280027b4939dce79)
+++ /dev/null	(revision c69954fa9cef9a12d1a7db87280027b4939dce79)
@@ -1,105 +0,0 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<project version="4">
-  <component name="AutoImportSettings">
-    <option name="autoReloadType" value="SELECTIVE" />
-  </component>
-  <component name="ChangeListManager">
-    <list default="true" id="712d49f7-c230-48ea-96d1-91933bce1265" name="Changes" comment="" />
-    <option name="SHOW_DIALOG" value="false" />
-    <option name="HIGHLIGHT_CONFLICTS" value="true" />
-    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
-    <option name="LAST_RESOLUTION" value="IGNORE" />
-  </component>
-  <component name="FileTemplateManagerImpl">
-    <option name="RECENT_TEMPLATES">
-      <list>
-        <option value="Interface" />
-        <option value="Class" />
-      </list>
-    </option>
-  </component>
-  <component name="Git.Settings">
-    <option name="RECENT_BRANCH_BY_REPOSITORY">
-      <map>
-        <entry key="$PROJECT_DIR$/.." value="master" />
-      </map>
-    </option>
-    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
-  </component>
-  <component name="MarkdownSettingsMigration">
-    <option name="stateVersion" value="1" />
-  </component>
-  <component name="MavenImportPreferences">
-    <option name="generalSettings">
-      <MavenGeneralSettings>
-        <option name="useMavenConfig" value="true" />
-      </MavenGeneralSettings>
-    </option>
-  </component>
-  <component name="ProjectId" id="2dbmcXrUWyOGhSoPqmy3kueFGcD" />
-  <component name="ProjectViewState">
-    <option name="hideEmptyMiddlePackages" value="true" />
-    <option name="showLibraryContents" value="true" />
-  </component>
-  <component name="PropertiesComponent">{
-  &quot;keyToString&quot;: {
-    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,
-    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,
-    &quot;last_opened_file_path&quot;: &quot;/Users/harsimran/IdeaProjects/Team6-Soen6441-version2/my-app&quot;,
-    &quot;settings.editor.selected.configurable&quot;: &quot;reference.settingsdialog.project.grazie&quot;
-  }
-}</component>
-  <component name="RunManager">
-    <configuration name="App" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
-      <option name="MAIN_CLASS_NAME" value="view.App" />
-      <module name="my-app" />
-      <extension name="coverage">
-        <pattern>
-          <option name="PATTERN" value="view.*" />
-          <option name="ENABLED" value="true" />
-        </pattern>
-      </extension>
-      <method v="2">
-        <option name="Make" enabled="true" />
-      </method>
-    </configuration>
-    <configuration default="true" type="JetRunConfigurationType">
-      <method v="2">
-        <option name="Make" enabled="true" />
-      </method>
-    </configuration>
-    <configuration default="true" type="KotlinStandaloneScriptRunConfigurationType">
-      <option name="filePath" />
-      <method v="2">
-        <option name="Make" enabled="true" />
-      </method>
-    </configuration>
-    <recent_temporary>
-      <list>
-        <item itemvalue="Application.App" />
-      </list>
-    </recent_temporary>
-  </component>
-  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
-  <component name="TaskManager">
-    <task active="true" id="Default" summary="Default task">
-      <changelist id="712d49f7-c230-48ea-96d1-91933bce1265" name="Changes" comment="" />
-      <created>1710285231949</created>
-      <option name="number" value="Default" />
-      <option name="presentableId" value="Default" />
-      <updated>1710285231949</updated>
-    </task>
-    <servers />
-  </component>
-  <component name="XDebuggerManager">
-    <breakpoint-manager>
-      <breakpoints>
-        <line-breakpoint enabled="true" type="java-line">
-          <url>file://$PROJECT_DIR$/src/main/java/controller/Game.java</url>
-          <line>186</line>
-          <option name="timeStamp" value="1" />
-        </line-breakpoint>
-      </breakpoints>
-    </breakpoint-manager>
-  </component>
-</project>
\ No newline at end of file
Index: Player.java
===================================================================
diff --git a/Player.java b/Player.java
deleted file mode 100644
--- a/Player.java	(revision c69954fa9cef9a12d1a7db87280027b4939dce79)
+++ /dev/null	(revision c69954fa9cef9a12d1a7db87280027b4939dce79)
@@ -1,57 +0,0 @@
-package model;
-import java.util.ArrayDeque;
-import java.util.HashMap;
-import java.util.Queue;
-
-public class Player { /*It is bascially for player */
-
-    private String d_PlayerName;
-    private HashMap<String, Continent> d_OwnedContinents;
-    private HashMap<String, TerritoryDetails> d_OwnedCountries;
-    private int d_OwnedArmies;
-    private Order d_Order;
-    private Queue<Order> d_OrderList;
-
-    public Player(String p_playerName) {
-        d_PlayerName = p_playerName;
-        d_OwnedContinents = new HashMap<>();
-        d_OwnedCountries = new HashMap<>();
-        this.d_OwnedArmies = 0;
-        d_OrderList = new ArrayDeque<>();
-    }
-
-    public String getPlayerName() { /*It is bascially for getting the player name */
-        return d_PlayerName;
-    }
-    public HashMap<String, TerritoryDetails> getOwnedTerritories() {/*creating the hash map */
-        return d_OwnedCountries;
-    }
-
-    public HashMap<String, Continent> getOwnedContinents() {/*creating the hash map */
-        return d_OwnedContinents;
-    }
-
-    public int getOwnedArmies() {/*It is bascially for getting the armies */
-        return d_OwnedArmies;
-    }
-    public void setOwnedArmies(int p_ownedArmies) {
-        this.d_OwnedArmies = p_ownedArmies;
-    }
-
-    public void issue_order() {/*It is bascially for issuing the order */
-        this.d_OrderList.add(this.d_Order);
-        for (Order l_x : d_OrderList){
-            System.out.println(l_x.getD_player().getPlayerName());
-        }
-    }
-
-    public Queue<Order> getD_orderList() {/*It is bascially for queing */
-        return d_OrderList;
-    }
-    public void addOrder(Order p_order) {
-        this.d_Order = p_order;
-    }
-    public Order next_order() {
-        return d_OrderList.poll();
-    }
-}
\ No newline at end of file
Index: .idea/libraries/Maven__junit_junit_4_12.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/libraries/Maven__junit_junit_4_12.xml b/.idea/libraries/Maven__junit_junit_4_12.xml
new file mode 100644
--- /dev/null	(date 1710549113117)
+++ b/.idea/libraries/Maven__junit_junit_4_12.xml	(date 1710549113117)
@@ -0,0 +1,13 @@
+<component name="libraryTable">
+  <library name="Maven: junit:junit:4.12">
+    <CLASSES>
+      <root url="jar://$MAVEN_REPOSITORY$/junit/junit/4.12/junit-4.12.jar!/" />
+    </CLASSES>
+    <JAVADOC>
+      <root url="jar://$MAVEN_REPOSITORY$/junit/junit/4.12/junit-4.12-javadoc.jar!/" />
+    </JAVADOC>
+    <SOURCES>
+      <root url="jar://$MAVEN_REPOSITORY$/junit/junit/4.12/junit-4.12-sources.jar!/" />
+    </SOURCES>
+  </library>
+</component>
\ No newline at end of file
Index: .idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/compiler.xml b/.idea/compiler.xml
new file mode 100644
--- /dev/null	(date 1710549576943)
+++ b/.idea/compiler.xml	(date 1710549576943)
@@ -0,0 +1,18 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="CompilerConfiguration">
+    <annotationProcessing>
+      <profile name="Maven default annotation processors profile" enabled="true">
+        <sourceOutputDir name="target/generated-sources/annotations" />
+        <sourceTestOutputDir name="target/generated-test-sources/test-annotations" />
+        <outputRelativeToContentRoot value="true" />
+        <module name="Team6-Soen6441-v2-final" />
+        <module name="my-app" />
+      </profile>
+    </annotationProcessing>
+    <bytecodeTargetLevel>
+      <module name="my-app" target="1.8" />
+      <module name="Team6-Soen6441-v2-final" target="1.5" />
+    </bytecodeTargetLevel>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/jarRepositories.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/jarRepositories.xml b/.idea/jarRepositories.xml
new file mode 100644
--- /dev/null	(date 1710549113153)
+++ b/.idea/jarRepositories.xml	(date 1710549113153)
@@ -0,0 +1,20 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="RemoteRepositoriesConfiguration">
+    <remote-repository>
+      <option name="id" value="central" />
+      <option name="name" value="Central Repository" />
+      <option name="url" value="https://repo.maven.apache.org/maven2" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="central" />
+      <option name="name" value="Maven Central repository" />
+      <option name="url" value="https://repo1.maven.org/maven2" />
+    </remote-repository>
+    <remote-repository>
+      <option name="id" value="jboss.community" />
+      <option name="name" value="JBoss Community repository" />
+      <option name="url" value="https://repository.jboss.org/nexus/content/repositories/public/" />
+    </remote-repository>
+  </component>
+</project>
\ No newline at end of file
Index: my-app/src/main/Doc/Refactoring.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/my-app/src/main/Doc/Refactoring.txt b/my-app/src/main/Doc/Refactoring.txt
new file mode 100644
--- /dev/null	(date 1710454505000)
+++ b/my-app/src/main/Doc/Refactoring.txt	(date 1710454505000)
@@ -0,0 +1,11 @@
+1. Simplifying nested conditional statements for better readability
+2. Extracting the logic in a sub-method to make the code more readable and maintainable 
+3. Use of Enchanced for loop instead of iterator
+4. Using early returns to simplify the code and for better readability
+5. Adding consolidated error messages for better understanding
+6. Breaking complex method into smaller parts for better maintainability
+7. Make new method just for print statement for user design to make the structure proper
+8. Removed the never used variables
+9. Fixed the resource leak problem to prevent memory leaks
+10. Fixed the order of command exuction
+11. Changing the varible name proper to avoid confusion
\ No newline at end of file
Index: my-app/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/my-app/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst b/my-app/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst
new file mode 100644
--- /dev/null	(date 1710454505000)
+++ b/my-app/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst	(date 1710454505000)
@@ -0,0 +1,22 @@
+D:\Risk Game\Team6-Soen6441\my-app\src\main\java\model\ValidateMap.java
+D:\Risk Game\Team6-Soen6441\my-app\src\main\java\controller\GamePhaseManagement.java
+D:\Risk Game\Team6-Soen6441\my-app\src\main\java\model\LoadMap.java
+D:\Risk Game\Team6-Soen6441\my-app\src\main\java\model\AllotArmies.java
+D:\Risk Game\Team6-Soen6441\my-app\src\main\java\model\PlayPhase.java
+D:\Risk Game\Team6-Soen6441\my-app\src\main\java\view\CommandLine.java
+D:\Risk Game\Team6-Soen6441\my-app\src\main\java\model\ShowMap.java
+D:\Risk Game\Team6-Soen6441\my-app\src\main\java\controller\Game.java
+D:\Risk Game\Team6-Soen6441\my-app\src\main\java\enumClass\GamePhase.java
+D:\Risk Game\Team6-Soen6441\my-app\src\main\java\model\GamePhases.java
+D:\Risk Game\Team6-Soen6441\my-app\src\main\java\model\MainPlayPhase.java
+D:\Risk Game\Team6-Soen6441\my-app\src\main\java\model\GameRunnerEngine.java
+D:\Risk Game\Team6-Soen6441\my-app\src\main\java\model\Order.java
+D:\Risk Game\Team6-Soen6441\my-app\src\main\java\model\Continent.java
+D:\Risk Game\Team6-Soen6441\my-app\src\main\java\model\StartUpPhase.java
+D:\Risk Game\Team6-Soen6441\my-app\src\main\java\model\GameMap.java
+D:\Risk Game\Team6-Soen6441\my-app\src\main\java\controller\GameHelper.java
+D:\Risk Game\Team6-Soen6441\my-app\src\main\java\model\TerritoryDetails.java
+D:\Risk Game\Team6-Soen6441\my-app\src\main\java\view\App.java
+D:\Risk Game\Team6-Soen6441\my-app\src\main\java\model\EditGame.java
+D:\Risk Game\Team6-Soen6441\my-app\src\main\java\model\Player.java
+D:\Risk Game\Team6-Soen6441\my-app\src\main\java\controller\Communication.java
Index: my-app/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/my-app/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst b/my-app/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst
new file mode 100644
--- /dev/null	(date 1710454505000)
+++ b/my-app/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst	(date 1710454505000)
@@ -0,0 +1,22 @@
+model\PlayPhase.class
+view\CommandLine.class
+model\StartUpPhase.class
+model\GameRunnerEngine.class
+controller\Communication.class
+model\LoadMap.class
+model\GamePhases.class
+view\App.class
+controller\Game.class
+controller\GamePhaseManagement.class
+model\TerritoryDetails.class
+controller\GameHelper.class
+model\Continent.class
+model\EditGame.class
+model\AllotArmies.class
+model\ValidateMap.class
+model\ShowMap.class
+model\MainPlayPhase.class
+model\Order.class
+enumClass\GamePhase.class
+model\Player.class
+model\GameMap.class
Index: my-app/src/main/java/view/App.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package view;\n\n\nimport controller.Game;\nimport model.AllotArmies;\n\nimport java.io.File;\nimport java.util.Objects;\n\n\n/**\n * The person in charge of the game assumes the role of Game. covers everything from \"actual game play\" to \"map editing.\"\n * Only communicating with the user and invoking the proper methods for additional actions fall under this responsibility.\n *\n *\n */\npublic class App {\n    /**\n     * @param args Command line arguments\n     */\n    public static void main(String[] args) {\n        System.out.println(\"\\n ------- Greetings, adventurers! Welcome to the WarZone Risk Game!!! --------\");\n        System.out.println(\" ------- You can either load/edit the existing maps or create a map !!! --------\\\"\");\n        sampleMaps();\n        CommandLine.manageCommandLine();\n    }\n\n    /**\n     * Based on the countries owned, each player is assigned default reinforcements.\n     * @param p_cmd Game ref from main to get track of players\n     */\n    public static void eachPlayerReinforcements(Game p_cmd){\n        p_cmd.d_Players.forEach(l_player -> AllotArmies.allotArmies(l_player));\n    }\n\n    /**\n     * Shows names of existing map files from sample Resources.\n     *\n     */\n    private static void sampleMaps() {\n        File d_Folder = new File(\"src/main/resources/maps\");\n        File[] d_Files = d_Folder.listFiles();\n        System.out.println(\"------ To load a map file named filename.map, enter \\\"loadmap filename.map\\\". \\n----- For editing a file with the extension filename.map, use \\\"editmap filename.map\");\n        System.out.println(\"----- LET's START ----- \");\n        System.out.println();\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/my-app/src/main/java/view/App.java b/my-app/src/main/java/view/App.java
--- a/my-app/src/main/java/view/App.java	(revision c69954fa9cef9a12d1a7db87280027b4939dce79)
+++ b/my-app/src/main/java/view/App.java	(date 1710454505000)
@@ -1,15 +1,14 @@
 package view;
 
 
+import java.io.File;
+
 import controller.Game;
 import model.AllotArmies;
 
-import java.io.File;
-import java.util.Objects;
-
 
 /**
- * The person in charge of the game assumes the role of Game. covers everything from "actual game play" to "map editing."
+ * The person in charge of the game assumes the role of Game. It covers everything from "actual game play" to "map editing."
  * Only communicating with the user and invoking the proper methods for additional actions fall under this responsibility.
  *
  *
@@ -38,7 +37,7 @@
      *
      */
     private static void sampleMaps() {
-        File d_Folder = new File("src/main/resources/maps");
+        File d_Folder = new File("src/main/resources/maps/");
         File[] d_Files = d_Folder.listFiles();
         System.out.println("------ To load a map file named filename.map, enter \"loadmap filename.map\". \n----- For editing a file with the extension filename.map, use \"editmap filename.map");
         System.out.println("----- LET's START ----- ");
Index: my-app/target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/inputFiles.lst
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/my-app/target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/inputFiles.lst b/my-app/target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/inputFiles.lst
new file mode 100644
--- /dev/null	(date 1710454505000)
+++ b/my-app/target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/inputFiles.lst	(date 1710454505000)
@@ -0,0 +1,12 @@
+D:\Risk Game\Team6-Soen6441\my-app\src\test\java\ContinentTest.java
+D:\Risk Game\Team6-Soen6441\my-app\src\test\java\TerritoryDetailsTest.java
+D:\Risk Game\Team6-Soen6441\my-app\src\test\java\com\mycompany\app\AppTest.java
+D:\Risk Game\Team6-Soen6441\my-app\src\test\java\OrderTest.java
+D:\Risk Game\Team6-Soen6441\my-app\src\test\java\AddOrderTest.java
+D:\Risk Game\Team6-Soen6441\my-app\src\test\java\AllotArmiesTest.java
+D:\Risk Game\Team6-Soen6441\my-app\src\test\java\AssignTerritoryDetailsTest.java
+D:\Risk Game\Team6-Soen6441\my-app\src\test\java\ValidateMapTest.java
+D:\Risk Game\Team6-Soen6441\my-app\src\test\java\RemovePlayerTest.java
+D:\Risk Game\Team6-Soen6441\my-app\src\test\java\RemoveOrderTest.java
+D:\Risk Game\Team6-Soen6441\my-app\src\test\java\AddPlayerTest.java
+D:\Risk Game\Team6-Soen6441\my-app\src\test\java\LoadMapTest.java
Index: my-app/target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/createdFiles.lst
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/my-app/target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/createdFiles.lst b/my-app/target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/createdFiles.lst
new file mode 100644
--- /dev/null	(date 1710454505000)
+++ b/my-app/target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/createdFiles.lst	(date 1710454505000)
@@ -0,0 +1,12 @@
+AllotArmiesTest.class
+AddPlayerTest.class
+LoadMapTest.class
+AddOrderTest.class
+ValidateMapTest.class
+TerritoryDetailsTest.class
+OrderTest.class
+ContinentTest.class
+AssignTerritoryDetailsTest.class
+com\mycompany\app\AppTest.class
+RemovePlayerTest.class
+RemoveOrderTest.class
Index: my-app/src/main/java/model/Bomb.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/my-app/src/main/java/model/Bomb.java b/my-app/src/main/java/model/Bomb.java
new file mode 100644
--- /dev/null	(date 1710463825000)
+++ b/my-app/src/main/java/model/Bomb.java	(date 1710463825000)
@@ -0,0 +1,26 @@
+package model;
+
+public class Bomb implements order1{
+    private String d_CountryId;
+    private Player d_Player;
+    private Player d_CPlayer;
+
+    public Bomb(Player p_cplayer, Player p_player,String p_countryId) {
+        d_Player = p_player;
+        d_CPlayer = p_cplayer;
+        d_CountryId = p_countryId;
+    }
+
+    @Override
+    public boolean execute() {
+        if(d_CPlayer.d_NegotiateList.contains(d_Player)){
+            System.out.println(d_CPlayer.getPlayerName()+" has negotiated "+d_Player.getPlayerName());
+            return false;
+        }
+        TerritoryDetails l_c= d_Player.getOwnedTerritories().get(d_CountryId.toLowerCase());
+        int l_existingArmies = l_c.getNumberOfArmies();
+        double armies = Double.valueOf(l_existingArmies / 2);
+        l_c.setNumberOfArmies((int)armies);
+        return true;
+    }
+}
\ No newline at end of file
Index: my-app/src/main/java/model/Card.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/my-app/src/main/java/model/Card.java b/my-app/src/main/java/model/Card.java
new file mode 100644
--- /dev/null	(date 1710463908000)
+++ b/my-app/src/main/java/model/Card.java	(date 1710463908000)
@@ -0,0 +1,65 @@
+package model;
+
+import java.util.Random;
+/**
+ * Class handles implementation related to cards.
+ */
+public class Card {
+
+    /**
+     * Represents type of Card from Bomb, Airlift, Blockade and Diplomacy
+     */
+    String d_CardType;
+
+    /**
+     * This list contains the cards issued to players
+     */
+    String[] d_CardsList = {"Bomb","Airlift","Blockade","Diplomacy"};
+//"Airlift","Blockade","Diplomacy"
+    /**
+     *The method gives type of a card.
+     * @return string card type
+     */
+    String getCardType()
+    {
+        return d_CardType;
+    }
+
+    /**
+     * Default constructor of Card to access the methods of this class.
+     */
+    public Card(){
+    }
+
+    /**
+     * This constructor will assign type of cards
+     * @param p_cardType Card Type that is assigned
+     */
+    public Card(String p_cardType){
+        this.d_CardType=p_cardType;
+    }
+    /**
+     * Stores the random card picked in the CardType String
+     */
+    public void createCard()
+    {
+        d_CardType = randomCard();
+    }
+
+    /**
+     * Stores the temp card picked in the CardType String
+     * @param temp specific card
+     */
+    public void createCard(String temp) { d_CardType = temp; }
+    /**
+     * Picks a random card from the Cards List using random generator
+     * @return The index of the Cards List
+     */
+    public String randomCard()
+    {
+        Random randomGenerator = new Random();
+        int index = randomGenerator.nextInt(d_CardsList.length);
+        return d_CardsList[index];
+    }
+
+}
Index: my-app/log.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/my-app/log.txt b/my-app/log.txt
new file mode 100644
--- /dev/null	(date 1710548587000)
+++ b/my-app/log.txt	(date 1710548587000)
@@ -0,0 +1,21 @@
+
+------- Initial Phase --------
+------ In PreLoad Phase -------
+-------- loadmap Command is being executed!!! --------
+
+Command given by user:loadmap europe.map
+europe.map ----- Map Validated !!!! -----
+----  You can start adding players :- !!!! ---- 
+------ In StartUp Phase -------
+-------- showmap Command is being executed!!! --------
+
+-------- gameplayer Command is being executed!!! --------
+
+----- Player added !!!!! mir -----------
+----- Player added !!!!! hetul -----------
+----- Territories have been randomly allocated to the players  ----- 
+------ In MainPlay Phase -------
+-------- assigncountries Command is being executed!!! --------
+
+Assign reinforcement armies to player mir
+Assign reinforcement armies to player hetul
\ No newline at end of file
Index: my-app/src/main/java/model/order1.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/my-app/src/main/java/model/order1.java b/my-app/src/main/java/model/order1.java
new file mode 100644
--- /dev/null	(date 1710463687000)
+++ b/my-app/src/main/java/model/order1.java	(date 1710463687000)
@@ -0,0 +1,6 @@
+package model;
+
+public interface order1 {
+    public boolean execute();
+
+}
Index: my-app/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n\n<project xmlns=\"http://maven.apache.org/POM/4.0.0\" xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\n  xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd\">\n  <modelVersion>4.0.0</modelVersion>\n\n  <groupId>com.mycompany.app</groupId>\n  <artifactId>my-app</artifactId>\n  <version>1.0-SNAPSHOT</version>\n\n  <name>my-app</name>\n  <!-- FIXME change it to the project's website -->\n  <url>http://www.example.com</url>\n\n  <properties>\n    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\n    <maven.compiler.source>1.7</maven.compiler.source>\n    <maven.compiler.target>1.7</maven.compiler.target>\n  </properties>\n\n  <dependencies>\n    <dependency>\n      <groupId>junit</groupId>\n      <artifactId>junit</artifactId>\n      <version>4.11</version>\n      <scope>test</scope>\n    </dependency>\n      <dependency>\n          <groupId>org.jgrapht</groupId>\n          <artifactId>jgrapht-core</artifactId>\n          <version>1.3.1</version>\n      </dependency>\n  </dependencies>\n\n  <build>\n    <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->\n      <plugins>\n        <!-- clean lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle -->\n        <plugin>\n          <artifactId>maven-clean-plugin</artifactId>\n          <version>3.1.0</version>\n        </plugin>\n        <!-- default lifecycle, jar packaging: see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->\n        <plugin>\n          <artifactId>maven-resources-plugin</artifactId>\n          <version>3.0.2</version>\n        </plugin>\n        <plugin>\n          <artifactId>maven-compiler-plugin</artifactId>\n          <version>3.8.0</version>\n        </plugin>\n        <plugin>\n          <artifactId>maven-surefire-plugin</artifactId>\n          <version>2.22.1</version>\n        </plugin>\n        <plugin>\n          <artifactId>maven-jar-plugin</artifactId>\n          <version>3.0.2</version>\n        </plugin>\n        <plugin>\n          <artifactId>maven-install-plugin</artifactId>\n          <version>2.5.2</version>\n        </plugin>\n        <plugin>\n          <artifactId>maven-deploy-plugin</artifactId>\n          <version>2.8.2</version>\n        </plugin>\n        <!-- site lifecycle, see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle -->\n        <plugin>\n          <artifactId>maven-site-plugin</artifactId>\n          <version>3.7.1</version>\n        </plugin>\n        <plugin>\n          <artifactId>maven-project-info-reports-plugin</artifactId>\n          <version>3.0.0</version>\n        </plugin>\n      </plugins>\n    </pluginManagement>\n      <plugins>\n          <plugin>\n              <groupId>org.apache.maven.plugins</groupId>\n              <artifactId>maven-compiler-plugin</artifactId>\n              <configuration>\n                  <source>8</source>\n                  <target>8</target>\n              </configuration>\n          </plugin>\n      </plugins>\n  </build>\n</project>\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/my-app/pom.xml b/my-app/pom.xml
--- a/my-app/pom.xml	(revision c69954fa9cef9a12d1a7db87280027b4939dce79)
+++ b/my-app/pom.xml	(date 1710454505000)
@@ -30,8 +30,16 @@
           <artifactId>jgrapht-core</artifactId>
           <version>1.3.1</version>
       </dependency>
+    <dependency>
+        <groupId>org.junit.jupiter</groupId>
+        <artifactId>junit-jupiter-api</artifactId>
+        <version>5.8.2</version>
+        <scope>test</scope>
+    </dependency>
   </dependencies>
 
+
+
   <build>
     <pluginManagement><!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
       <plugins>
@@ -53,6 +61,15 @@
           <artifactId>maven-surefire-plugin</artifactId>
           <version>2.22.1</version>
         </plugin>
+        <plugin>
+          <groupId>org.apache.maven.plugins</groupId>
+          <artifactId>maven-javadoc-plugin</artifactId>
+          <version>3.6.2</version>
+          <configuration>
+              <source>1.8</source>
+              <target>1.8</target>
+          </configuration>
+      </plugin>
         <plugin>
           <artifactId>maven-jar-plugin</artifactId>
           <version>3.0.2</version>
@@ -86,5 +103,5 @@
               </configuration>
           </plugin>
       </plugins>
-  </build>
+      </build>
 </project>
Index: my-app/src/main/java/model/Order.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package model;\n\n/**\n * class handles the functionality of executing orders.\n */\npublic class Order {\n\t\n\t/**\n\t * @param d_TerritoryId is for territory name\n\t * @param d_Player player issuing deploy order\n\t */\n    private int d_NumArmies;\n    private String d_TerritoryId;\n    private Player d_Player;\n\n  \n    /**\n     * The order object will be initialized with deploy details by this constructor.\n     * @param p_player current player issuing deploy order\n     * @param p_territoryId territory where armies will be deployed\n     * @param p_numArmies total armies which will be deployed\n     */\n    public Order(Player p_player,String p_territoryId,int p_numArmies) {\n        d_Player = p_player;\n        d_TerritoryId = p_territoryId;\n        d_NumArmies = p_numArmies;\n    }\n\n    /**\n     * technique that implements the order\n     * @return true if successful, else false\n     */\n    public boolean execute(){\n        TerritoryDetails l_c= d_Player.getOwnedTerritories().get(d_TerritoryId.toLowerCase());\n        int l_existingArmies = l_c.d_NumberOfArmies;\n        l_existingArmies += d_NumArmies;\n        l_c.d_NumberOfArmies = l_existingArmies;\n        return true;\n    }\n\n    /**\n     * Getter for current player\n     * @return d_player\n     */\n    public Player getD_player() {\n        return d_Player;\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/my-app/src/main/java/model/Order.java b/my-app/src/main/java/model/Order.java
--- a/my-app/src/main/java/model/Order.java	(revision c69954fa9cef9a12d1a7db87280027b4939dce79)
+++ b/my-app/src/main/java/model/Order.java	(date 1710464195000)
@@ -3,7 +3,7 @@
 /**
  * class handles the functionality of executing orders.
  */
-public class Order {
+public class Order implements order1 {
 	
 	/**
 	 * @param d_TerritoryId is for territory name
Index: my-app/src/main/java/model/GameMap.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package model;\n\nimport java.util.HashMap;\n\n/**\n * GameMap hold the details of map in the game.\n * Consist of HashMaps to access territories and continents of the map with their names.\n * \n *\n */\npublic class GameMap {\n\tpublic String d_MapName;\n\tpublic boolean d_Valid;\n\tpublic HashMap<String,Continent> d_Continents;\n\tpublic HashMap<String,TerritoryDetails> d_Countries;\n\t\n\t/**\n\t * Create GameMap object without naming the map.\n\t */\n\tpublic GameMap() {\n\t\tthis.d_MapName= \"\";\n\t\tthis.d_Continents= new HashMap<>();\n\t\tthis.d_Countries= new HashMap<>();\n\t\tthis.d_Valid= false;\n\t}\n\t\n\t/**\n\t * Create GameMap object with naming the map.\n\t * Initialize HashMaps for maintaining continents and territories.\n\t * @param p_mapName Name of the map\n\t */\n\tpublic GameMap(String p_mapName){\n\t\tthis.d_MapName= p_mapName;\n\t\tthis.d_Continents= new HashMap<>();\n\t\tthis.d_Countries= new HashMap<>();\n\t\tthis.d_Valid= false;\n\t}\n\n\t/**\n\t * Setter method to set the d_Continents HashMap to the given HashMap parameter.\n\t * @param p_continents HashMap for d_Continents\n\t */\n\tpublic void setContinents(HashMap<String, Continent> p_continents) {\n\t\tthis.d_Continents = p_continents;\n\t}\n\n\t/**\n\t * Getter method to return HashMap maintaining the list of territories in the map.\n\t * @return return HashMap maintaining the list of territories in the map\n\t */\n\tpublic HashMap<String, TerritoryDetails> getTerritories() {\n\t\treturn this.d_Countries;\n\t}\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/my-app/src/main/java/model/GameMap.java b/my-app/src/main/java/model/GameMap.java
--- a/my-app/src/main/java/model/GameMap.java	(revision c69954fa9cef9a12d1a7db87280027b4939dce79)
+++ b/my-app/src/main/java/model/GameMap.java	(date 1710537949000)
@@ -44,6 +44,10 @@
 		this.d_Continents = p_continents;
 	}
 
+	public boolean getValid() {
+		return this.d_Valid;
+	}
+
 	/**
 	 * Getter method to return HashMap maintaining the list of territories in the map.
 	 * @return return HashMap maintaining the list of territories in the map
@@ -52,4 +56,26 @@
 		return this.d_Countries;
 	}
 
+	/**
+	 * 
+	 * Getter method for map name
+	 * 
+	 * @return name of the map
+	 */
+	public String getMapName(){
+		return this.d_MapName;
+	}
+
+/**
+ * 
+ * Getter method for continents
+ * 
+ * @return list of continents
+ */
+	public HashMap<String, Continent> getContinents(){
+		return this.d_Continents;
+	}
+
+
+
 }
Index: my-app/src/main/java/model/Advance.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/my-app/src/main/java/model/Advance.java b/my-app/src/main/java/model/Advance.java
new file mode 100644
--- /dev/null	(date 1710463756000)
+++ b/my-app/src/main/java/model/Advance.java	(date 1710463756000)
@@ -0,0 +1,76 @@
+package model;
+
+public class Advance implements order1 {
+
+    private int d_NumArmies;
+    private String d_SourceCountryId, d_TargetCountryId;
+    private Player d_Player, d_TargetPlayer;
+
+    public Advance(Player p_player, String p_sourceCountryId, String p_targetCountryId, int p_numArmies, Player p_targetPlayer) {
+        d_Player = p_player;
+        d_SourceCountryId = p_sourceCountryId;
+        d_TargetCountryId = p_targetCountryId;
+        d_NumArmies = p_numArmies;
+        d_TargetPlayer = p_targetPlayer;
+    }
+    @Override
+    public boolean execute() {
+
+        if (d_Player.getOwnedTerritories().containsKey(d_SourceCountryId.toLowerCase())) {
+            if (((d_Player.getOwnedTerritories().get(d_SourceCountryId.toLowerCase()).getNumberOfArmies())- d_NumArmies)>=1) {
+                if (d_Player.getOwnedTerritories().containsKey(d_TargetCountryId.toLowerCase())) {
+                    int fromArmies = d_Player.getOwnedTerritories().get(d_SourceCountryId.toLowerCase()).getNumberOfArmies();
+                    fromArmies -= d_NumArmies;
+                    d_Player.getOwnedTerritories().get(d_SourceCountryId.toLowerCase()).setNumberOfArmies(fromArmies);
+                    int toArmies = d_Player.getOwnedTerritories().get(d_TargetCountryId.toLowerCase()).getNumberOfArmies();
+                    toArmies += d_NumArmies;
+                    d_Player.getOwnedTerritories().get(d_TargetCountryId.toLowerCase()).setNumberOfArmies(toArmies);
+                    return true;
+
+                }else {
+                    System.out.println(d_TargetCountryId + " is not owned by the player");
+
+                    if(d_Player.d_NegotiateList.contains(d_TargetPlayer)) {
+                        return false;
+                    }else {
+                        System.out.println("Attack Occur between: " + d_TargetCountryId + " and " + d_SourceCountryId);
+
+                        TerritoryDetails attackingCountry = d_Player.getOwnedTerritories().get(d_SourceCountryId.toLowerCase());
+                        TerritoryDetails defendingCountry = attackingCountry.getNeighbours().get(d_TargetCountryId.toLowerCase());
+
+                        int defendArmy = defendingCountry.getNumberOfArmies();
+
+                        int armyToAttack = (d_NumArmies * 60) / 100;
+                        int armyForDefend = (defendArmy * 70 / 100);
+
+                        int defenderArmyLeft = defendArmy - armyToAttack;
+                        int attackerArmyLeft = d_NumArmies - armyForDefend;
+
+                        if (defenderArmyLeft <= 0) {
+                            d_Player.getOwnedTerritories().put(d_TargetCountryId, defendingCountry);
+                            d_TargetPlayer.getOwnedTerritories().remove(d_TargetCountryId);
+                            defendingCountry.setNumberOfArmies(attackerArmyLeft);
+                            attackingCountry.setNumberOfArmies(((d_Player.getOwnedTerritories().get(d_SourceCountryId.toLowerCase()).getNumberOfArmies())- d_NumArmies));
+                            d_Player.addCard();
+
+                        }
+                        else {
+                            defendingCountry.setNumberOfArmies(defenderArmyLeft);
+                            if(attackerArmyLeft<0)
+                                attackingCountry.setNumberOfArmies(((d_Player.getOwnedTerritories().get(d_SourceCountryId.toLowerCase()).getNumberOfArmies())- d_NumArmies));
+                            else
+                                attackingCountry.setNumberOfArmies(((d_Player.getOwnedTerritories().get(d_SourceCountryId.toLowerCase()).getNumberOfArmies())- d_NumArmies)+attackerArmyLeft);
+                        }
+                        return true;
+                    }
+                }
+            }else {
+                System.out.println("player don't have enough armies.");
+                return false;
+            }
+        }else {
+            System.out.println(d_SourceCountryId + " is not owned by the player");
+            return false;
+        }
+    }
+}
\ No newline at end of file
Index: my-app/src/main/java/model/Airlift.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/my-app/src/main/java/model/Airlift.java b/my-app/src/main/java/model/Airlift.java
new file mode 100644
--- /dev/null	(date 1710463785000)
+++ b/my-app/src/main/java/model/Airlift.java	(date 1710463785000)
@@ -0,0 +1,30 @@
+package model;
+
+public class Airlift implements order1 {
+    private int d_NumArmies;
+    private String d_SourceCountryId;
+    private String d_TargetCountryId;
+    private Player d_Player;
+    public Airlift(Player p_player,String p_sourceCountryId, String p_targetCountryId, int p_numArmies) {
+        d_Player = p_player;
+        d_SourceCountryId = p_sourceCountryId;
+        d_TargetCountryId = p_targetCountryId;
+        d_NumArmies = p_numArmies;
+    }
+    @Override
+    public boolean execute() {
+
+        TerritoryDetails l_cSource= d_Player.getOwnedTerritories().get(d_SourceCountryId.toLowerCase());
+        int l_existingSourceArmies = l_cSource.getNumberOfArmies();
+        l_existingSourceArmies -= d_NumArmies;
+        l_cSource.setNumberOfArmies(l_existingSourceArmies);
+
+        TerritoryDetails l_cTarget= d_Player.getOwnedTerritories().get(d_TargetCountryId.toLowerCase());
+        int l_existingTargetArmies = l_cTarget.getNumberOfArmies();
+        l_existingTargetArmies += d_NumArmies;
+        l_cTarget.setNumberOfArmies(l_existingTargetArmies);
+
+        return true;
+    }
+
+}
Index: my-app/src/main/java/model/EditGame.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/my-app/src/main/java/model/EditGame.java b/my-app/src/main/java/model/EditGame.java
new file mode 100644
--- /dev/null	(date 1710538201000)
+++ b/my-app/src/main/java/model/EditGame.java	(date 1710538201000)
@@ -0,0 +1,304 @@
+package model;
+import java.util.*;
+import view.App;
+import controller.*;
+import enumClass.GamePhase;
+
+
+public abstract class EditGame extends GamePhases
+{
+    public void reinforce()
+    {
+        printInvalidCommandMessage();
+        d_gameinstance.d_LogEntry.setMessage("Invalid command in phase " + d_gameinstance.d_GamePhases.getD_PhaseName());
+    }
+
+    public void gamePlayer(String[] p_data, ArrayList<Player> p_players, String p_playerName)
+    {
+        printInvalidCommandMessage();
+        d_gameinstance.d_LogEntry.setMessage("Invalid command in phase " + d_gameinstance.d_GamePhases.getD_PhaseName());
+    }
+
+    public boolean assignCountries(GameMap p_map, ArrayList<Player> p_players) {
+        printInvalidCommandMessage();
+        d_gameinstance.d_LogEntry.setMessage("Invalid command in phase " + d_gameinstance.d_GamePhases.getD_PhaseName());
+        return false;
+    }
+
+    public void showMap(ArrayList<Player> p_players, GameMap p_map) {
+        printInvalidCommandMessage();
+        d_gameinstance.d_LogEntry.setMessage("Invalid command in phase " + d_gameinstance.d_GamePhases.getD_PhaseName());
+    }
+}
+//    App view;
+//    ShowMap s;
+//
+//
+//
+//    public void reinforce() {
+//		printInvalidCommandMessage();
+//	}
+//    public boolean assignCountries(GameMap p_gamemap, ArrayList<Player> p_gameplayers){
+//        printInvalidCommandMessage();
+//        return false;
+//    }
+//
+//
+//    public void gamePlayer(String[] p_commanddata, ArrayList<Player> p_gameplayers, String p_playerName){
+//        printInvalidCommandMessage();
+//
+//    }
+//    public void editContinent(String[] p_commanddata, String p_continentId, int p_controlValue){
+//        try{
+//            for(int i=1;i<p_commanddata.length;i++){
+//                if(p_commanddata[i].equals("-add")){
+//                    if(p_commanddata[i+1].matches("^[a-zA-Z]+$")){
+//                        p_continentId=p_commanddata[i+1];
+//                    }
+//                    else{
+//                        System.out.println("Not a valid continent ID");
+//                    }
+//                    p_controlValue=Integer.parseInt(p_commanddata[i+2]);
+//
+//                    boolean l_continentadd=d_gameinstance.d_RunG.addContinent(d_gameinstance.d_Map, p_continentId, p_controlValue);
+//                    if(l_continentadd){
+//                        System.out.println(p_continentId+"is added to the map");
+//                        d_gameinstance.d_GameGamePhase=GamePhase.EDITMAP;
+//                        d_gameinstance.setGamePhase(d_gameinstance.d_GameGamePhase);
+//                    }
+//                    else{
+//                        System.out.println("Continent already exists");
+//                    }
+//
+//                }
+//                else if(p_commanddata[i].equals("-remove")){
+//                    if(p_commanddata[i+1].matches("^[a-zA-Z]+$")){
+//                        p_continentId=p_commanddata[i+1];
+//                    }
+//                    else{
+//                        System.out.println("Not a valid continent ID");
+//                    }
+//
+//
+//                    boolean l_continentremove=d_gameinstance.d_RunG.removeContinent(d_gameinstance.d_Map, p_continentId);
+//                    if(l_continentremove){
+//                        System.out.println(p_continentId+"is removed to the map");
+//                        d_gameinstance.d_GameGamePhase=GamePhase.EDITMAP;
+//                        d_gameinstance.setGamePhase(d_gameinstance.d_GameGamePhase);
+//                    }
+//                    else{
+//                        System.out.println("Continent does not exists");
+//                    }
+//                }
+//
+//
+//            }
+//        }
+//        catch(Exception e){
+//            System.out.println("Invalid command -Try again:  editcontinent -add continentID controlvalue -remove continentID");
+//        }
+//    }
+//    public void editCountry(String[] p_commanddata, String p_continentId, String p_countryId){
+//        try{
+//            for(int i=1;i<p_commanddata.length;i++){
+//                if(p_commanddata[i].equals("-add")){
+//                    if(p_commanddata[i+1].matches("^[a-zA-Z]+$") || p_commanddata[i+2].matches("^[a-zA-Z]+$")){
+//                        p_continentId=p_commanddata[i+1];
+//                        p_countryId=p_commanddata[i+2];
+//                    }
+//                    else{
+//                        System.out.println("Not a valid Country Name");
+//                    }
+//                    boolean l_countryadd=d_gameinstance.d_RunG.addTerritory(d_gameinstance.d_Map, p_countryId, p_continentId);
+//                    if(l_countryadd){
+//                        System.out.println(p_countryId+"country is added to the map"+p_continentId);
+//                        d_gameinstance.d_GameGamePhase=GamePhase.EDITMAP;
+//                        d_gameinstance.setGamePhase(d_gameinstance.d_GameGamePhase);
+//                    }
+//                    else{
+//                        System.out.println("Country already exists");
+//                    }
+//
+//                }
+//                else if(p_commanddata[i].equals("-remove")){
+//                    if(p_commanddata[i+1].matches("^[a-zA-Z]+$")){
+//                        p_countryId=p_commanddata[i+1];
+//                    }
+//                    else{
+//                        System.out.println("Not a valid country ID");
+//                    }
+//
+//
+//                    boolean l_countryremove=d_gameinstance.d_RunG.removeTerritory(d_gameinstance.d_Map, p_countryId);
+//                    if(l_countryremove){
+//                        System.out.println(p_countryId+"is removed to the map");
+//                        d_gameinstance.d_GameGamePhase=GamePhase.EDITMAP;
+//                        d_gameinstance.setGamePhase(d_gameinstance.d_GameGamePhase);
+//                    }
+//                    else{
+//                        System.out.println("Country does not exist");
+//                    }
+//                }
+//
+//
+//            }
+//        }
+//        catch(Exception e){
+//            System.out.println("Invalid command -Try again:  editcontinent -add continentID controlvalue -remove continentID");
+//        }
+//    }
+//
+//
+//    public void editNeighbour(String[] p_commanddata, String p_countryId, String p_neighborId){
+//        try{
+//            for(int i=1;i<p_commanddata.length;i++){
+//                if(p_commanddata[i].equals("-add")){
+//                    if(p_commanddata[i+1].matches("^[a-zA-Z]+$") || p_commanddata[i+2].matches("^[a-zA-Z]+$")){
+//                        p_countryId=p_commanddata[i+1];
+//                        p_neighborId=p_commanddata[i+2];
+//                    }
+//                    else{
+//                        System.out.println("Not a valid Country Name");
+//                    }
+//                    boolean l_neighboradd=d_gameinstance.d_RunG.addNeighbour(d_gameinstance.d_Map, p_countryId, p_neighborId);
+//                    if(l_neighboradd){
+//
+//                        d_gameinstance.d_GameGamePhase=GamePhase.EDITMAP;
+//                        d_gameinstance.setGamePhase(d_gameinstance.d_GameGamePhase);
+//                    }
+//                    else{
+//                        System.out.println("Country does not exists: Please enter valid country Id, neighbor ID");
+//                    }
+//
+//                }
+//                else if(p_commanddata[i].equals("-remove")){
+//                    if(p_commanddata[i+1].matches("^[a-zA-Z]+$")){
+//                        p_countryId=p_commanddata[i+1];
+//                    }
+//                    else{
+//                        System.out.println("Not a valid country ID");
+//                    }
+//
+//
+//                    boolean l_countryremove=d_gameinstance.d_RunG.removeTerritory(d_gameinstance.d_Map, p_countryId);
+//                    if(l_countryremove){
+//
+//                        d_gameinstance.d_GameGamePhase=GamePhase.EDITMAP;
+//                        d_gameinstance.setGamePhase(d_gameinstance.d_GameGamePhase);
+//                    }
+//                    else{
+//                        System.out.println("Country does not exist");
+//                    }
+//                }
+//
+//
+//            }
+//        }
+//        catch(Exception e){
+//            System.out.println("Invalid command -Try again:  editcontinent -add continentID controlvalue -remove continentID");
+//        }
+//    }
+//    public void savemap(String[] p_commanddata,String p_mapName ){
+//       try{
+//        if(p_commanddata[1]!=""){
+//            if(d_gameinstance.isMapNameValid(p_commanddata[1])){
+//                p_mapName=p_commanddata[1];
+//                boolean l_mapchecker=d_gameinstance.d_RunG.saveMap(d_gameinstance.d_Map,p_mapName);
+//                if(l_mapchecker){
+//                    System.out.println("Map file saved successfully");
+//                    d_gameinstance.d_GameGamePhase=GamePhase.NULL;
+//                    d_gameinstance.setGamePhase(d_gameinstance.d_GameGamePhase);
+//                }
+//                else{
+//                    System.out.println("Error is Saving: Invalid Map");
+//                }
+//            }
+//            else{
+//                System.out.println("Map Name is not valid");
+//            }
+//        }
+//       }
+//       catch(Exception e){
+//        System.out.println("Use correct format: savemap filename");
+//       }
+//    }
+//
+//    public void editMap(String[] p_commanddata,String p_mapName ){
+//        try{
+//         if(p_commanddata[1]!=null){
+//             if(d_gameinstance.isMapNameValid(p_commanddata[1])){
+//                 p_mapName=p_commanddata[1];
+//                 d_gameinstance.d_Map=d_gameinstance.d_RunG.editMap(p_mapName);
+//                 System.out.println("Editing Map: "+p_mapName);
+//                 d_gameinstance.d_GameGamePhase=GamePhase.EDITMAP;
+//                 d_gameinstance.setGamePhase(d_gameinstance.d_GameGamePhase);
+//             }
+//             else{
+//                System.out.println("Map is invalid");
+//             }
+//
+//         }
+//        }
+//        catch(Exception e){
+//         System.out.println("Use correct format: editmap sample.map");
+//        }
+//     }
+//     public void loadMap(String[] p_commanddata,String p_mapName ){
+//        try{
+//         if(p_commanddata[1]!=null){
+//             if(d_gameinstance.isMapNameValid(p_commanddata[1])){
+//                 p_mapName=p_commanddata[1];
+//                 d_gameinstance.d_Map=d_gameinstance.d_RunG.loadMap(p_mapName);
+//                 if(d_gameinstance.d_Map!=null){
+//                    if(!d_gameinstance.d_Map.d_Valid){
+//                        System.out.println("Map is not valid");
+//                        d_gameinstance.d_GameGamePhase=GamePhase.NULL;
+//                        d_gameinstance.setGamePhase(d_gameinstance.d_GameGamePhase);
+//                    }
+//                    else{
+//                        System.out.println("Valid Map");
+//                        d_gameinstance.d_GameGamePhase=GamePhase.STARTUP;
+//                        d_gameinstance.setGamePhase(d_gameinstance.d_GameGamePhase);
+//
+//                    }
+//
+//             }
+//             else{
+//                d_gameinstance.d_GameGamePhase=GamePhase.NULL;
+//                d_gameinstance.setGamePhase(d_gameinstance.d_GameGamePhase);
+//             }
+//            }
+//             else{
+//                System.out.println("Map is invalid");
+//             }
+//
+//         }
+//        }
+//        catch(Exception e){
+//         System.out.println("Use correct format: loadmap sample.map");
+//        }
+//     }
+//     public void showMap(GameMap p_mapname){
+//        s.showMap(p_mapname);
+//     }
+//
+//    public void showMapWithArmies(ArrayList<Player> p_players, GameMap p_map) {
+//        printInvalidCommandMessage();
+//        d_gameinstance.d_LogEntry.setMessage("Invalid command in phase "+d_gameinstance.d_GamePhases.getD_PhaseName());
+//    }
+//     public void validateMap(){
+//        if(d_gameinstance.d_RunG.validateMap(d_gameinstance.d_Map)){
+//            System.out.println("Map is valid");
+//        }
+//        else{
+//            System.out.println("map is not valid");
+//        }
+//     }
+
+     
+    
+
+
+
+	
+
Index: my-app/src/main/java/model/Blockade.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/my-app/src/main/java/model/Blockade.java b/my-app/src/main/java/model/Blockade.java
new file mode 100644
--- /dev/null	(date 1710463796000)
+++ b/my-app/src/main/java/model/Blockade.java	(date 1710463796000)
@@ -0,0 +1,25 @@
+package model;
+
+public class Blockade implements order1{
+    private String d_CountryId;
+    private Player d_Player;
+    public Blockade(Player p_player,String p_countryId) {
+        d_Player = p_player;
+        d_CountryId = p_countryId;
+    }
+
+    @Override
+    public boolean execute() {
+
+        TerritoryDetails l_c= d_Player.getOwnedTerritories().get(d_CountryId.toLowerCase());
+        int l_existingArmies = l_c.getNumberOfArmies();
+        l_existingArmies *= 3;
+        l_c.setNumberOfArmies(l_existingArmies);
+        System.out.println(l_existingArmies);
+
+        //Making territory neutral
+        d_Player.getOwnedTerritories().remove(l_c.getTerritoryID().toLowerCase());
+        return true;
+    }
+
+}
Index: my-app/target/surefire-reports/OrderTest.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/my-app/target/surefire-reports/OrderTest.txt b/my-app/target/surefire-reports/OrderTest.txt
new file mode 100644
--- /dev/null	(date 1710454505000)
+++ b/my-app/target/surefire-reports/OrderTest.txt	(date 1710454505000)
@@ -0,0 +1,4 @@
+-------------------------------------------------------------------------------
+Test set: OrderTest
+-------------------------------------------------------------------------------
+Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in OrderTest
Index: my-app/src/main/java/model/Diplomacy.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/my-app/src/main/java/model/Diplomacy.java b/my-app/src/main/java/model/Diplomacy.java
new file mode 100644
--- /dev/null	(date 1710463846000)
+++ b/my-app/src/main/java/model/Diplomacy.java	(date 1710463846000)
@@ -0,0 +1,16 @@
+package model;
+public class Diplomacy implements order1{
+
+    private Player d_currentPlayer, d_targetPlayer;
+    public Diplomacy(Player p_currentPlayer,Player p_targetPlayer){
+        this.d_currentPlayer = p_currentPlayer;
+        this.d_targetPlayer = p_targetPlayer;
+    }
+    @Override
+    public boolean execute() {
+        this.d_currentPlayer.addPlayerNegList(d_targetPlayer);
+        this.d_targetPlayer.addPlayerNegList(d_currentPlayer);
+
+        return true;
+    }
+}
\ No newline at end of file
Index: my-app/target/maven-archiver/pom.properties
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>ISO-8859-1
===================================================================
diff --git a/my-app/target/maven-archiver/pom.properties b/my-app/target/maven-archiver/pom.properties
new file mode 100644
--- /dev/null	(date 1710454505000)
+++ b/my-app/target/maven-archiver/pom.properties	(date 1710454505000)
@@ -0,0 +1,4 @@
+#Created by Apache Maven 3.9.6
+version=1.0-SNAPSHOT
+groupId=com.mycompany.app
+artifactId=my-app
Index: my-app/target/surefire-reports/AddPlayerTest.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/my-app/target/surefire-reports/AddPlayerTest.txt b/my-app/target/surefire-reports/AddPlayerTest.txt
new file mode 100644
--- /dev/null	(date 1710454505000)
+++ b/my-app/target/surefire-reports/AddPlayerTest.txt	(date 1710454505000)
@@ -0,0 +1,4 @@
+-------------------------------------------------------------------------------
+Test set: AddPlayerTest
+-------------------------------------------------------------------------------
+Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in AddPlayerTest
Index: my-app/target/surefire-reports/ContinentTest.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/my-app/target/surefire-reports/ContinentTest.txt b/my-app/target/surefire-reports/ContinentTest.txt
new file mode 100644
--- /dev/null	(date 1710454505000)
+++ b/my-app/target/surefire-reports/ContinentTest.txt	(date 1710454505000)
@@ -0,0 +1,4 @@
+-------------------------------------------------------------------------------
+Test set: ContinentTest
+-------------------------------------------------------------------------------
+Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in ContinentTest
Index: my-app/src/main/java/model/ValidateMap.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package model;\n\nimport org.jgrapht.Graph;\nimport org.jgrapht.alg.connectivity.ConnectivityInspector;\nimport org.jgrapht.graph.DefaultDirectedGraph;\nimport org.jgrapht.graph.DefaultEdge;\n\nimport java.util.HashMap;\n\n\n/**\n * In this class, the map is validated.\n */\npublic class ValidateMap {\n\n    private Graph<TerritoryDetails, DefaultEdge> d_MapGraph; //JGraphT type Graph representing the game map\n\n    /**\n     * Using JGraphT, this constructor creates an instance of the Directed Graph.\n     */\n    ValidateMap() {\n        d_MapGraph = new DefaultDirectedGraph<>(DefaultEdge.class);\n    }\n\n    /**\n     * Uses the jgrapht package to create a graph by adding edges between each territory and its neighbors, starting with the territories as vertices.\n     *\n     * @param p_map Game map representing territories ,continents and borders.\n     * @return returns graph representing the map\n     */\n    public Graph<TerritoryDetails, DefaultEdge> createGraph(GameMap p_map) {\n\n        //add TerritoryDetails to the Graph\n        for (TerritoryDetails l_territoryDetails : p_map.getTerritories().values()) {\n            d_MapGraph.addVertex(l_territoryDetails);\n        }\n\n        //add Edges between territory and its neighbours\n        for (TerritoryDetails l_territoryDetails : p_map.getTerritories().values()) {\n            for (TerritoryDetails l_neighbour : l_territoryDetails.getNeighbours().values()) {\n                d_MapGraph.addEdge(l_territoryDetails, l_neighbour);\n            }\n        }\n        return d_MapGraph;\n    }\n\n    /**\n     *A continent's subgraph is created using this function.\n     * @param p_subGraph subgraph for a continent\n     * @param p_territories territories of a continent\n     * @return p_subGraph\n     */\n    public Graph<TerritoryDetails, DefaultEdge> createSubGraph(Graph<TerritoryDetails, DefaultEdge> p_subGraph, HashMap<String, TerritoryDetails> p_territories) {\n\n        for (TerritoryDetails l_territory : p_territories.values()) {\n            p_subGraph.addVertex(l_territory);\n        }\n\n        for (TerritoryDetails l_territory : p_territories.values()) {\n            for (TerritoryDetails l_neighbour : l_territory.getNeighbours().values()) {\n                if (p_territories.containsKey(l_neighbour.getTerritoryID().toLowerCase())) {\n                    p_subGraph.addEdge(l_territory, l_neighbour);\n                }\n            }\n        }\n        return p_subGraph;\n    }\n\n    /**\n     * The graph's connectivity is examined by this function.\n     * @param p_graph The graph whose connectivity is checked\n     * @return returns true is graph is connected\n     */\n    public boolean isGraphConnected(Graph<TerritoryDetails, DefaultEdge> p_graph) {\n        ConnectivityInspector<TerritoryDetails, DefaultEdge> l_cInspector = new ConnectivityInspector<>(p_graph);\n        if (!l_cInspector.isConnected())\n            return false;\n        else\n            return true;\n    }\n    \n    /**\n\t * Determines whether or not every continent is connected to a subgraph\n\t * @param p_map GameMap object representing the game map\n\t * @return true if all continents are connected sub-graph, else false indicating incorrect map\n\t */\n\tpublic boolean continentConnectCheck(GameMap p_map) {\n\t\tfor(Continent l_continent : p_map.d_Continents.values()) {\n\t\t\tGraph<TerritoryDetails, DefaultEdge> subGraph = new DefaultDirectedGraph<>(DefaultEdge.class);\n\t\t\tsubGraph = createSubGraph(subGraph, l_continent.d_Countries);\n\t\t\tif(!isGraphConnected(subGraph)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\t\treturn true;\n\t}\n\t\n    \n        /**\n     * Verify whether the same territory already exists.\n     *\n     * @param p_map GameMap object holding record of all the existing continents and territories\n     * @param p_territoryId name of the territory to be checked\n     * @return true if territory already exists, else false\n     */\n    public static boolean isTerritoryExist(GameMap p_map, String p_territoryId) {\n        if (p_map.getTerritories().containsKey(p_territoryId.toLowerCase()))\n            return true;\n        else\n            return false;\n    }\n\n    /**\n     * Verify whether the continent is already occupied.\n     *\n     * @param p_map GameMap object holding record of all the existing continents and territories\n     * @param p_continentId name of the continent to be checked\n     * @return true if continent already exists, else false\n     */\n    public static boolean isContinentExists(GameMap p_map, String p_continentId) {\n        if (p_map.d_Continents.containsKey(p_continentId.toLowerCase()))\n            return true;\n        else\n            return false;\n    }\n\n    \n\t/**\n\t * Examine whether any continent is empty and does not hold any territory.\n\t * @param p_map GameMap object representing the game map\n\t * @return true if no continent is empty, else false indicating empty continent\n\t */\n\tpublic boolean notEmptyContinent(GameMap p_map) {\n\t\tfor(Continent l_continent : p_map.d_Continents.values()) {\n\t\t\tif(l_continent.d_Countries.size()==0)\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/my-app/src/main/java/model/ValidateMap.java b/my-app/src/main/java/model/ValidateMap.java
--- a/my-app/src/main/java/model/ValidateMap.java	(revision c69954fa9cef9a12d1a7db87280027b4939dce79)
+++ b/my-app/src/main/java/model/ValidateMap.java	(date 1710454505000)
@@ -1,12 +1,12 @@
 package model;
 
+import java.util.HashMap;
+
 import org.jgrapht.Graph;
 import org.jgrapht.alg.connectivity.ConnectivityInspector;
 import org.jgrapht.graph.DefaultDirectedGraph;
 import org.jgrapht.graph.DefaultEdge;
 
-import java.util.HashMap;
-
 
 /**
  * In this class, the map is validated.
@@ -18,7 +18,7 @@
     /**
      * Using JGraphT, this constructor creates an instance of the Directed Graph.
      */
-    ValidateMap() {
+    public ValidateMap() {
         d_MapGraph = new DefaultDirectedGraph<>(DefaultEdge.class);
     }
 
Index: my-app/target/surefire-reports/LoadMapTest.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/my-app/target/surefire-reports/LoadMapTest.txt b/my-app/target/surefire-reports/LoadMapTest.txt
new file mode 100644
--- /dev/null	(date 1710454505000)
+++ b/my-app/target/surefire-reports/LoadMapTest.txt	(date 1710454505000)
@@ -0,0 +1,4 @@
+-------------------------------------------------------------------------------
+Test set: LoadMapTest
+-------------------------------------------------------------------------------
+Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.044 s - in LoadMapTest
Index: my-app/target/surefire-reports/AddOrderTest.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/my-app/target/surefire-reports/AddOrderTest.txt b/my-app/target/surefire-reports/AddOrderTest.txt
new file mode 100644
--- /dev/null	(date 1710454505000)
+++ b/my-app/target/surefire-reports/AddOrderTest.txt	(date 1710454505000)
@@ -0,0 +1,4 @@
+-------------------------------------------------------------------------------
+Test set: AddOrderTest
+-------------------------------------------------------------------------------
+Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.032 s - in AddOrderTest
Index: my-app/target/surefire-reports/RemoveOrderTest.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/my-app/target/surefire-reports/RemoveOrderTest.txt b/my-app/target/surefire-reports/RemoveOrderTest.txt
new file mode 100644
--- /dev/null	(date 1710454505000)
+++ b/my-app/target/surefire-reports/RemoveOrderTest.txt	(date 1710454505000)
@@ -0,0 +1,4 @@
+-------------------------------------------------------------------------------
+Test set: RemoveOrderTest
+-------------------------------------------------------------------------------
+Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0 s - in RemoveOrderTest
Index: my-app/src/main/java/model/GameRunnerEngine.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package model;\n\nimport java.io.BufferedWriter;\nimport java.io.File;\nimport java.io.FileWriter;\nimport java.io.IOException;\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.Iterator;\n\npublic class GameRunnerEngine {\n\t\n\t/**\n\t *it loads the map and check basic error handling\n\t * @param p_mapName name of the map to be used for playing the game\n\t * @return l_gameMap is used to represent the current map\n\t */\n\tpublic GameMap loadMap(String p_mapName) {\n\t\t\n\t\tString l_filePath = \"src/main/resources/maps/\" + p_mapName;\n\t\tGameMap l_gameMap;\n\t\tFile l_file = new File(l_filePath);\n\t\tif(l_file.exists())\n\t\t{\n\t\t\tLoadMap l_loadMap = new LoadMap();\n\t\t\tl_gameMap = l_loadMap.readMap(l_filePath);\n\t\t\tl_gameMap.d_MapName = p_mapName;\n\t\t\tif(validateMap(l_gameMap)) {\n\t\t\t\tl_gameMap.d_Valid = true;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tSystem.out.println(\"The map is inappropriate for gameplay. To proceed, make necessary changes to the current map or select an alternative map from the collection.\\n\");\n\t\t\t\tl_gameMap.d_Valid = false;\n\t\t\t}\n\t\t}else {\n\t\t\tSystem.out.println(\"There is no such map named \" + p_mapName + \" . Try loading again, or make a map using 'editMap'.\\n\");\n\t\t\treturn null;\n\t\t}\n\t\treturn l_gameMap;\t\n\t}\n\t\n\t/**\n\t * loading the map for playing and also create the new map if it does not present\n\t * @param p_mapName Name of the map to be created\n\t * @return  l_gameMap represents the existing map\n\t */\n\tpublic GameMap editMap(String p_mapName) {\n\t\t\n\t\tString l_filePath = \"src/main/resources/maps/\" + p_mapName;\n\t\tGameMap l_gameMap;\n\t\tFile l_file = new File(l_filePath);\n\t\tif(l_file.exists()) {\n\t\t\tSystem.out.println(\" Map \" + p_mapName + \" exist and it can also be editted.\");\n\t\t\tLoadMap l_loadMap = new LoadMap();\n\t\t\tl_gameMap = l_loadMap.readMap(l_filePath);\n\t\t\tl_gameMap.d_MapName = p_mapName;\n\t\t}\n\t\telse {\n\t\t\tSystem.out.println(p_mapName + \" does not exist.\");\n\t\t\tSystem.out.println(\"New Map created named \" + p_mapName);\n\t\t\tl_gameMap = new GameMap(p_mapName);\n\t\t}\n\t\treturn l_gameMap;\n\t}\n\n\t/**\n\t *it is add the continent and if it there then says it is exist.\n\t * @param p_map  continent should be added\n\t * @param p_continentID ID of the continent should be added\n\t * @param p_continentValue Continent value of the continent to be added\n\t * @return true if run fine otherwise throw the error\n\t */\n\tpublic boolean addContinent(GameMap p_map, String p_continentID, int p_continentValue) {\n\t\t\n\t\tif(!(ValidateMap.isContinentExists(p_map,p_continentID))) {\n\t\t\tif(p_continentValue<0)\n\t\t\t\treturn false;\n\t\t\tContinent l_continent = new Continent(p_continentID, p_continentValue);\n\t\t\tString l_cName=p_continentID.toLowerCase();\n\t\t\tp_map.d_Continents.put(l_cName, l_continent);\n\t\t\treturn true;\n\t\t}\n\t\telse\n\t\t\treturn false;\t\n\t}\n\t\n\t/**\n\t * remove the continenet, territories and neighbour of territories\n\t * @param p_map represent the map that edit\n\t * @param p_continentID ID of the continent is going to removed\n\t * @return true if run fine otherwise throw the error\n\t */\n\tpublic boolean removeContinent(GameMap p_map, String p_continentID) {\n\t\t\n\t\tif(p_map.d_Continents.containsKey(p_continentID.toLowerCase())) {\n\t\t\tContinent l_continent = p_map.d_Continents.get(p_continentID.toLowerCase());\n\t\t\t\n\t\t\tArrayList<TerritoryDetails> l_tList = new ArrayList<TerritoryDetails>();\n\t\t\tfor(TerritoryDetails l_cd : l_continent.d_Countries.values()) {\n\t\t\t\tl_tList.add(l_cd);\n\t\t\t}\n\n\t\t\tboolean l_remTer= removeTerritoryContinent(p_map, l_tList);\n\t\t\tif(l_remTer){\n\t\t\t\tp_map.d_Continents.remove(p_continentID.toLowerCase());\n\t\t\t\treturn true;\n\t\t\t}\t\n\t\t\telse\n\t\t\t\treturn false;\n\t\t}\n\t\telse {\n\t\t\tSystem.out.println(p_continentID + \" does not exist.\");\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tprivate boolean removeTerritoryContinent(GameMap p_map, ArrayList<TerritoryDetails> p_tList){\n\t\tIterator<TerritoryDetails> l_iterator = p_tList.listIterator();\n\t\twhile(l_iterator.hasNext()) {\n\t\t\tTerritoryDetails l_c = l_iterator.next();\n\t\t\tif(!removeTerritory(p_map, l_c.getTerritoryID()))\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\t\n\t\n\t/**\n\t * it basically add the territory and check whethere it is present or not.\n\t * @param p_map map to which territory is going to add\n\t * @param p_territoryID ID of the territory that should be add\n\t * @param p_continentID ID of the continent to that helps to add new territory\n\t * @return true if run fine otherwise throw the error\n\t */\n\tpublic boolean addTerritory(GameMap p_map, String p_territoryID, String p_continentID) {\n\t\t\n\t\tif(ValidateMap.isTerritoryExist(p_map, p_territoryID)) \n\t\t\treturn false;\n\t\telse{\n\t\t\tif(!p_map.d_Continents.containsKey(p_continentID.toLowerCase())) {\n\t\t\t\tSystem.out.println(p_continentID + \" does not exist.\");\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\tTerritoryDetails l_territory = new TerritoryDetails(p_territoryID, p_continentID);\n\t\t\tContinent l_continent = p_map.d_Continents.get(p_continentID.toLowerCase());\n\t\t\tl_continent.d_Countries.put(p_territoryID.toLowerCase(), l_territory);\n\t\t\tp_map.getTerritories().put(p_territoryID.toLowerCase(), l_territory);\n\t\t\treturn true;\n\t\t}\n\t}\n\t\n\t/**\n\t * it removes the territory and remove all its neighbours\n\t * @param p_map represent the map that going to add\n\t * @param p_territoryID ID of the territory that is going to remove\n\t * @return true if run fine otherwise throw the error\n\t */\n\tpublic boolean removeTerritory(GameMap p_map, String p_territoryID) {\n\t\t\n\t\tif(p_map.getTerritories().containsKey(p_territoryID.toLowerCase())) {\n\t\t\tTerritoryDetails l_territory = p_map.getTerritories().get(p_territoryID.toLowerCase());\n\t\t\tArrayList<TerritoryDetails> l_tList = new ArrayList<TerritoryDetails>();\n\t\t\t\n\t\t\tfor(TerritoryDetails l_neighbour : l_territory.getNeighbours().values()) {\n\t\t\t\tl_tList.add(l_neighbour);\n\t\t\t}\n\t\t\tboolean remTer = removeNeighbourTerritory(p_map, l_tList, l_territory);\n\t\t\tif(remTer){\n\t\t\t\tp_map.getTerritories().remove(p_territoryID.toLowerCase());\n\t\t\t\tp_map.d_Continents.get(l_territory.d_InContinent.toLowerCase()).d_Countries.remove(p_territoryID.toLowerCase());\n\t\t\t\treturn true;\n\t\t\t}\n\t\t\telse\n\t\t\t\treturn false;\n\t\t\t\n\t\t}\n\t\telse {\n\t\t\tSystem.out.println(p_territoryID + \" does not exist.\");\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tprivate boolean removeNeighbourTerritory(GameMap p_map, ArrayList<TerritoryDetails> p_tList, TerritoryDetails p_territory){\n\t\tIterator<TerritoryDetails> l_iterator = p_tList.listIterator();\n\t\twhile(l_iterator.hasNext()) {\n\t\t\tTerritoryDetails l_neighbour = l_iterator.next();\n\t\t\tif(!removeNeighbour(p_map, p_territory.getTerritoryID(), l_neighbour.getTerritoryID()))\n\t\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n\t\n\t/**\n\t *it creates the link between the two argument territories and made the neighbour\n\t * @param p_map represent map that going to edit\n\t * @param p_territoryID ID of one argument territory\n\t * @param p_neighbourTerritoryID ID of other argument territory\n\t * @return true if run fine otherwise throw the error\n\t */\n\tpublic boolean addNeighbour(GameMap p_map, String p_territoryID, String p_neighbourTerritoryID) {\n\t\tif(p_map.getTerritories().containsKey(p_territoryID.toLowerCase()) && p_map.getTerritories().containsKey(p_neighbourTerritoryID.toLowerCase())) {\n\t\t\tTerritoryDetails l_c1 = p_map.getTerritories().get(p_territoryID.toLowerCase());\n\t\t\tTerritoryDetails l_c2 = p_map.getTerritories().get(p_neighbourTerritoryID.toLowerCase());\n\n\t\t\tif(!l_c1.getNeighbours().containsKey(l_c2.getTerritoryID().toLowerCase())){\n\t\t\t\tl_c1.getNeighbours().put(p_neighbourTerritoryID.toLowerCase(), l_c2);\n\t\t\t\tSystem.out.println(p_territoryID+\" added as neighbour to \"+p_neighbourTerritoryID);\n\t\t\t}\t\n\t\t\telse\n\t\t\t\tSystem.out.println(\"Already Neighbour\");\n\t\t\t\t\n\t\t\tif(!l_c2.getNeighbours().containsKey(l_c1.getTerritoryID().toLowerCase())){\t\t\t\t\n\t\t\t\tl_c2.getNeighbours().put(p_territoryID.toLowerCase(), l_c1);\n\t\t\t\tSystem.out.println(p_neighbourTerritoryID+\" added as neighbour to \"+p_territoryID);\n\t\t\t}\n\t\t\t\t\n\t\t\telse\n\t\t\t\tSystem.out.println(\"Already Neighbour\");\n\t\t\t\n\t\t\t\treturn true;\n\t\t}\n\t\telse {\n\t\t\tif(!p_map.getTerritories().containsKey(p_territoryID.toLowerCase()) && !p_map.getTerritories().containsKey(p_neighbourTerritoryID.toLowerCase()))\n\t\t\t\tSystem.out.println(p_territoryID + \" and \" + p_neighbourTerritoryID + \"  does not exist. Set their neighbors after creating their own territory.\\n\");\n\t\t\telse if(!p_map.getTerritories().containsKey(p_territoryID.toLowerCase()))\n\t\t\t\tSystem.out.println(p_territoryID + \" does not exist. Set their neighbors after creating their own territory.\\n\");\n\t\t\telse\n\t\t\t\tSystem.out.println(p_neighbourTerritoryID + \" does not exist. Set their neighbors after creating their own territory.\\n\");\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\t/**\n\t * it removes the link between the two neighbouring Territory\n\t * @param p_map represent map that going to edit\n\t * @param p_territoryID ID of one argument territory\n\t * @param p_neighbourTerritoryID ID of other argument territory\n\t * @return true if run fine otherwise throw the error\n\t */\n\tpublic boolean removeNeighbour(GameMap p_map, String p_territoryID, String p_neighbourTerritoryID) {\n\t\tif(p_map.getTerritories().containsKey(p_territoryID.toLowerCase()) && p_map.getTerritories().containsKey(p_neighbourTerritoryID.toLowerCase())) {\n\t\t\tTerritoryDetails l_c1 = p_map.getTerritories().get(p_territoryID.toLowerCase());\n\t\t\tTerritoryDetails l_c2 = p_map.getTerritories().get(p_neighbourTerritoryID.toLowerCase());\n\n\t\t\tif(l_c1.getNeighbours().containsKey(l_c2.getTerritoryID().toLowerCase())) {\n\t\t\t\tl_c1.getNeighbours().remove(p_neighbourTerritoryID.toLowerCase());\n\t\t\t\tSystem.out.println(p_territoryID+\" remove as neighbour to \"+p_neighbourTerritoryID);\n\t\t\t}\n\t\t\tif(l_c2.getNeighbours().containsKey(l_c1.getTerritoryID().toLowerCase())) {\n\t\t\t\tl_c2.getNeighbours().remove(p_territoryID.toLowerCase());\n\t\t\t\tSystem.out.println(p_neighbourTerritoryID+\" remove as neighbour to \"+p_territoryID);\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\telse {\n\t\t\tif(!p_map.getTerritories().containsKey(p_territoryID.toLowerCase()) && !p_map.getTerritories().containsKey(p_neighbourTerritoryID.toLowerCase()))\n\t\t\t\tSystem.out.println(p_territoryID + \" and \" + p_neighbourTerritoryID + \"  does not exist.\");\n\t\t\telse if(!p_map.getTerritories().containsKey(p_territoryID.toLowerCase()))\n\t\t\t\tSystem.out.println(p_territoryID + \" does not exist.\");\n\t\t\telse\n\t\t\t\tSystem.out.println(p_neighbourTerritoryID + \" does not exist.\");\n\t\t\treturn false;\n\t\t}\n\t}\n\n\t/**\n\t * it saves the save GameMap as \".map\" file using Domination game format\n\t * @param p_map The map is going to save\n\t * @param p_fileName name of the file \n\t * @return true if run fine otherwise throw the error\n\t */\n\tpublic boolean saveMap(GameMap p_map, String p_fileName) {\n\t\tif(validateMap(p_map)) {\n\t\t\ttry {\n\t\t\t\tBufferedWriter l_writer = new BufferedWriter(new FileWriter(\"src/main/resources/maps/\"+p_fileName+ \".map\"));\n\t\t\t\tint l_continentIndex = 1;\t \n\t\t\t\tint l_territoryIndex = 1;\t\t\n\t\t\t\tHashMap<Integer, String> l_indexToTerritory = new HashMap<Integer, String>(); \n\t\t\t\tHashMap<String, Integer> l_territoryToIndex = new HashMap<String, Integer>(); \n\t\t\t\t\n\t\t\t\tl_writer.write(\"name \" + p_fileName + \" Map\");\n\t\t\t\tl_writer.newLine();\n\t\t\t\tl_writer.newLine();\n\t\t\t\tl_writer.newLine();\n\t\t\t\tl_writer.write(\"[files]\");\n\t\t\t\tl_writer.newLine();\n\t\t\t\tl_writer.newLine();\n\t\t\t\tl_writer.newLine();\n\t\t\t\tl_writer.flush();\n\t\t\t\t\n\t\t\t\tl_writer.write(\"[continents]\");\n\t\t\t\tl_writer.newLine();\n\n\t\t\t\tfor(Continent l_continent : p_map.d_Continents.values()) {\n\t\t\t\t\tString l_cn=l_continent.d_ContinentId;\n\t\t\t\t\tint l_ccv=l_continent.d_ControlValue;\n\t\t\t\t\tString l_cc=l_continent.d_ContinentColor;\n\n\t\t\t\t\tl_writer.write(String.format(\"%s %d %s\", l_cn, l_ccv, l_cc));\n\t\t\t\t\tl_writer.newLine();\n\t\t\t\t\tl_writer.flush();\n\n\t\t\t\t\tl_continent.d_InMapIndex = l_continentIndex;\n\t\t\t\t\tl_continentIndex++;\n\t\t\t\t}\n\t\t\t\tl_writer.newLine();\n\n\n\t\t\t\t\n\t\t\t\tl_writer.write(\"[territories]\");\n\t\t\t\tl_writer.newLine();\n\n\t\t\t\tfor(TerritoryDetails l_territory : p_map.getTerritories().values()) {\n\t\t\t\t\tl_writer.write(Integer.toString(l_territoryIndex) + \" \" + l_territory.getTerritoryID() + \" \" + Integer.toString(p_map.d_Continents.get(l_territory.d_InContinent.toLowerCase()).d_InMapIndex) );\n\t\t\t\t\tl_writer.newLine();\n\t\t\t\t\tl_writer.flush();\n\t\t\t\t\tString l_terrName=l_territory.getTerritoryID().toLowerCase();\n\t\t\t\t\tl_indexToTerritory.put(l_territoryIndex, l_terrName);\n\t\t\t\t\tl_territoryToIndex.put(l_terrName, l_territoryIndex);\n\t\t\t\t\tl_territoryIndex++;\n\t\t\t\t}\n\t\t\t\tl_writer.newLine();\n\n\n\t\t\t\t\n\t\t\t\tl_writer.write(\"[borders]\");\n\t\t\t\tl_writer.newLine();\n\t\t\t\tl_writer.flush();\n\t\t\t\tfor(int i=1;i<l_territoryIndex;i++) {\n\t\t\t\t\tString l_territoryID = l_indexToTerritory.get(i);\n\t\t\t\t\tTerritoryDetails l_cd = p_map.getTerritories().get(l_territoryID.toLowerCase());\n\t\t\t\t\tl_writer.write(Integer.toString(i) + \" \");\n\t\t\t\t\tfor(TerritoryDetails l_neighbour : l_cd.getNeighbours().values()) {\n\t\t\t\t\t\tl_writer.write(Integer.toString(l_territoryToIndex.get(l_neighbour.getTerritoryID().toLowerCase())) + \" \");\n\t\t\t\t\t\tl_writer.flush();\n\t\t\t\t\t}\n\t\t\t\t\tl_writer.newLine();\n\t\t\t\t}\n\t\t\t}\n\t\t\tcatch(IOException e) {\n\t\t\t\te.printStackTrace();\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\treturn true;\n\t\t}\n\t\telse\n\t\t{\n\t\t\tSystem.out.println(\"Map unsuitable for using in a game. Adjust the map to proceed with the new one or import a map from the pre-existing maps.\\n\");\n\t\t\treturn false;\n\t\t}\n\t}\n\t\n\t/**\n\t * \tit checks any empty continent is present or not, i.e. continent without any territory\n\t * \twhether the map for the game is connected graph or not\n\t * \twhether each continent in map is a connected sub-graph or not\n\t * @param p_map GameMap is going to be check\n\t * @return  true if run fine otherwise throw the error\n\t */\n\tpublic boolean validateMap(GameMap p_map) {\n\t\tString l_mapName=p_map.d_MapName;\n\t\tValidateMap l_mv = new ValidateMap();\n\t\tif(!l_mv.isGraphConnected(l_mv.createGraph(p_map))){\n\t\t\tSystem.out.println(\"Invalid Map --- \"+l_mapName+\" is not a connected graph.\");\n\t\t\treturn false;\n\t\t}\n\t\telse if(!l_mv.continentConnectCheck(p_map)){\n\t\t\tSystem.out.println(\"Invalid Map --- \"+l_mapName+\" is not a connected sub-graph.\");\n\t\t\treturn false;\n\t\t}\n\t\telse if (!l_mv.notEmptyContinent(p_map)) {\n\t\t\tSystem.out.println(\"Invalid Map --- \"+l_mapName+\" contains empty continent.\");\n\t\t\treturn false;\n\t\t}\n\t\treturn true;\n\t}\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/my-app/src/main/java/model/GameRunnerEngine.java b/my-app/src/main/java/model/GameRunnerEngine.java
--- a/my-app/src/main/java/model/GameRunnerEngine.java	(revision c69954fa9cef9a12d1a7db87280027b4939dce79)
+++ b/my-app/src/main/java/model/GameRunnerEngine.java	(date 1710454505000)
@@ -16,29 +16,38 @@
 	 * @return l_gameMap is used to represent the current map
 	 */
 	public GameMap loadMap(String p_mapName) {
-		
 		String l_filePath = "src/main/resources/maps/" + p_mapName;
-		GameMap l_gameMap;
 		File l_file = new File(l_filePath);
-		if(l_file.exists())
-		{
-			LoadMap l_loadMap = new LoadMap();
-			l_gameMap = l_loadMap.readMap(l_filePath);
-			l_gameMap.d_MapName = p_mapName;
-			if(validateMap(l_gameMap)) {
-				l_gameMap.d_Valid = true;
-			}
-			else {
-				System.out.println("The map is inappropriate for gameplay. To proceed, make necessary changes to the current map or select an alternative map from the collection.\n");
-				l_gameMap.d_Valid = false;
-			}
-		}else {
-			System.out.println("There is no such map named " + p_mapName + " . Try loading again, or make a map using 'editMap'.\n");
-			return null;
+		if (!l_file.exists()) {
+			System.out.println("There is no such map named " + p_mapName + ". Try loading again, or make a map using 'editMap'.\n");
+			return null;
+		}
+		LoadMap l_loadMap = new LoadMap();
+		GameMap l_gameMap = l_loadMap.readMap(l_filePath);
+		l_gameMap.d_MapName = p_mapName;
+		if (validateMap(l_gameMap)) {
+			l_gameMap.d_Valid = true;
+		} else {
+			System.out.println("The map is inappropriate for gameplay. To proceed, make necessary changes to the current map or select an alternative map from the collection.\n");
+			l_gameMap.d_Valid = false;
+		}
+		return l_gameMap;
+	}
+	private GameMap loadExistingMap(String filePath, String mapName) {
+		LoadMap l_loadMap = new LoadMap();
+		GameMap l_gameMap = l_loadMap.readMap(filePath);
+		l_gameMap.d_MapName = mapName;
+		if (!validateMap(l_gameMap)) {
+			handleInvalidMap();
 		}
-		return l_gameMap;	
+		return l_gameMap;
 	}
 	
+	private void handleInvalidMap() {
+		System.out.println("The map is inappropriate for gameplay. To proceed, make necessary changes to the current map or select an alternative map from the collection.\n");
+	}
+	
+	
 	/**
 	 * loading the map for playing and also create the new map if it does not present
 	 * @param p_mapName Name of the map to be created
@@ -51,9 +60,8 @@
 		File l_file = new File(l_filePath);
 		if(l_file.exists()) {
 			System.out.println(" Map " + p_mapName + " exist and it can also be editted.");
-			LoadMap l_loadMap = new LoadMap();
-			l_gameMap = l_loadMap.readMap(l_filePath);
-			l_gameMap.d_MapName = p_mapName;
+			l_gameMap = loadExistingMap(l_filePath, p_mapName);
+			
 		}
 		else {
 			System.out.println(p_mapName + " does not exist.");
@@ -114,6 +122,15 @@
 		}
 	}
 
+	/**
+	 * 
+	 * It removes territory of the continents
+	 * 
+	 * @param p_map represent map 
+	 * @param p_tList represents list of territories
+	 * @return true if all territories are removed
+	 */
+
 	private boolean removeTerritoryContinent(GameMap p_map, ArrayList<TerritoryDetails> p_tList){
 		Iterator<TerritoryDetails> l_iterator = p_tList.listIterator();
 		while(l_iterator.hasNext()) {
@@ -148,6 +165,14 @@
 			return true;
 		}
 	}
+	private boolean removeNeighbourTerritory(GameMap p_map, TerritoryDetails p_territory) {
+		for (TerritoryDetails l_neighbour : p_territory.getNeighbours().values()) {
+			if (!removeNeighbour(p_map, p_territory.getTerritoryID(), l_neighbour.getTerritoryID())) {
+				return false;
+			}
+		}
+		return true;
+	}
 	
 	/**
 	 * it removes the territory and remove all its neighbours
@@ -156,40 +181,38 @@
 	 * @return true if run fine otherwise throw the error
 	 */
 	public boolean removeTerritory(GameMap p_map, String p_territoryID) {
-		
 		if(p_map.getTerritories().containsKey(p_territoryID.toLowerCase())) {
 			TerritoryDetails l_territory = p_map.getTerritories().get(p_territoryID.toLowerCase());
-			ArrayList<TerritoryDetails> l_tList = new ArrayList<TerritoryDetails>();
+			ArrayList<TerritoryDetails> l_tList = new ArrayList<TerritoryDetails>(l_territory.getNeighbours().values());
 			
-			for(TerritoryDetails l_neighbour : l_territory.getNeighbours().values()) {
-				l_tList.add(l_neighbour);
-			}
-			boolean remTer = removeNeighbourTerritory(p_map, l_tList, l_territory);
-			if(remTer){
+			boolean remTer = removeNeighbourTerritory(p_map, l_territory);
+			if(remTer) {
 				p_map.getTerritories().remove(p_territoryID.toLowerCase());
 				p_map.d_Continents.get(l_territory.d_InContinent.toLowerCase()).d_Countries.remove(p_territoryID.toLowerCase());
 				return true;
-			}
-			else
+			} else {
 				return false;
-			
-		}
-		else {
+			}
+		} else {
 			System.out.println(p_territoryID + " does not exist.");
 			return false;
 		}
 	}
+	
 
-	private boolean removeNeighbourTerritory(GameMap p_map, ArrayList<TerritoryDetails> p_tList, TerritoryDetails p_territory){
-		Iterator<TerritoryDetails> l_iterator = p_tList.listIterator();
-		while(l_iterator.hasNext()) {
-			TerritoryDetails l_neighbour = l_iterator.next();
-			if(!removeNeighbour(p_map, p_territory.getTerritoryID(), l_neighbour.getTerritoryID()))
-				return false;
-		}
-		return true;
-	}
+	/**
+	 * 
+	 * Remove neighbours of territory
+	 * 
+	 * @param p_map Map that is edited
+	 * @param p_tList list of neighbouring territories
+	 * @param p_territory territory that is to be deleted
+	 * @return true if all neighbours are deleted
+	 */
+
+	 
 	
+	
 	/**
 	 *it creates the link between the two argument territories and made the neighbour
 	 * @param p_map represent map that going to edit
@@ -198,37 +221,44 @@
 	 * @return true if run fine otherwise throw the error
 	 */
 	public boolean addNeighbour(GameMap p_map, String p_territoryID, String p_neighbourTerritoryID) {
-		if(p_map.getTerritories().containsKey(p_territoryID.toLowerCase()) && p_map.getTerritories().containsKey(p_neighbourTerritoryID.toLowerCase())) {
-			TerritoryDetails l_c1 = p_map.getTerritories().get(p_territoryID.toLowerCase());
-			TerritoryDetails l_c2 = p_map.getTerritories().get(p_neighbourTerritoryID.toLowerCase());
-
-			if(!l_c1.getNeighbours().containsKey(l_c2.getTerritoryID().toLowerCase())){
-				l_c1.getNeighbours().put(p_neighbourTerritoryID.toLowerCase(), l_c2);
-				System.out.println(p_territoryID+" added as neighbour to "+p_neighbourTerritoryID);
-			}	
-			else
-				System.out.println("Already Neighbour");
-				
-			if(!l_c2.getNeighbours().containsKey(l_c1.getTerritoryID().toLowerCase())){				
-				l_c2.getNeighbours().put(p_territoryID.toLowerCase(), l_c1);
-				System.out.println(p_neighbourTerritoryID+" added as neighbour to "+p_territoryID);
-			}
-				
-			else
-				System.out.println("Already Neighbour");
-			
-				return true;
-		}
-		else {
-			if(!p_map.getTerritories().containsKey(p_territoryID.toLowerCase()) && !p_map.getTerritories().containsKey(p_neighbourTerritoryID.toLowerCase()))
-				System.out.println(p_territoryID + " and " + p_neighbourTerritoryID + "  does not exist. Set their neighbors after creating their own territory.\n");
-			else if(!p_map.getTerritories().containsKey(p_territoryID.toLowerCase()))
-				System.out.println(p_territoryID + " does not exist. Set their neighbors after creating their own territory.\n");
-			else
-				System.out.println(p_neighbourTerritoryID + " does not exist. Set their neighbors after creating their own territory.\n");
+		if (!territoriesExist(p_map, p_territoryID, p_neighbourTerritoryID)) {
+			return false;
+		}
+		
+		TerritoryDetails l_c1 = p_map.getTerritories().get(p_territoryID.toLowerCase());
+		TerritoryDetails l_c2 = p_map.getTerritories().get(p_neighbourTerritoryID.toLowerCase());
+	
+		if (!l_c1.getNeighbours().containsKey(p_neighbourTerritoryID.toLowerCase())) {
+			l_c1.getNeighbours().put(p_neighbourTerritoryID.toLowerCase(), l_c2);
+			System.out.println(p_territoryID + " added as neighbour to " + p_neighbourTerritoryID);
+		} else {
+			System.out.println("Already Neighbour");
+		}
+		
+		if (!l_c2.getNeighbours().containsKey(p_territoryID.toLowerCase())) {
+			l_c2.getNeighbours().put(p_territoryID.toLowerCase(), l_c1);
+			System.out.println(p_neighbourTerritoryID + " added as neighbour to " + p_territoryID);
+		} else {
+			System.out.println("Already Neighbour");
+		}
+	
+		return true;
+	}
+	
+	private boolean territoriesExist(GameMap p_map, String p_territoryID, String p_neighbourTerritoryID) {
+		if (!p_map.getTerritories().containsKey(p_territoryID.toLowerCase()) && !p_map.getTerritories().containsKey(p_neighbourTerritoryID.toLowerCase())) {
+			System.out.println(p_territoryID + " and " + p_neighbourTerritoryID + " do not exist. Set their neighbors after creating their own territory.\n");
+			return false;
+		} else if (!p_map.getTerritories().containsKey(p_territoryID.toLowerCase())) {
+			System.out.println(p_territoryID + " does not exist. Set their neighbors after creating their own territory.\n");
+			return false;
+		} else if (!p_map.getTerritories().containsKey(p_neighbourTerritoryID.toLowerCase())) {
+			System.out.println(p_neighbourTerritoryID + " does not exist. Set their neighbors after creating their own territory.\n");
 			return false;
 		}
+		return true;
 	}
+	
 	
 	/**
 	 * it removes the link between the two neighbouring Territory
Index: my-app/target/surefire-reports/RemovePlayerTest.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/my-app/target/surefire-reports/RemovePlayerTest.txt b/my-app/target/surefire-reports/RemovePlayerTest.txt
new file mode 100644
--- /dev/null	(date 1710454505000)
+++ b/my-app/target/surefire-reports/RemovePlayerTest.txt	(date 1710454505000)
@@ -0,0 +1,4 @@
+-------------------------------------------------------------------------------
+Test set: RemovePlayerTest
+-------------------------------------------------------------------------------
+Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in RemovePlayerTest
Index: my-app/target/surefire-reports/TEST-OrderTest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/my-app/target/surefire-reports/TEST-OrderTest.xml b/my-app/target/surefire-reports/TEST-OrderTest.xml
new file mode 100644
--- /dev/null	(date 1710454505000)
+++ b/my-app/target/surefire-reports/TEST-OrderTest.xml	(date 1710454505000)
@@ -0,0 +1,64 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" name="OrderTest" time="0.001" tests="1" errors="0" skipped="0" failures="0">
+  <properties>
+    <property name="sun.desktop" value="windows"/>
+    <property name="awt.toolkit" value="sun.awt.windows.WToolkit"/>
+    <property name="file.encoding.pkg" value="sun.io"/>
+    <property name="java.specification.version" value="1.8"/>
+    <property name="sun.cpu.isalist" value="amd64"/>
+    <property name="sun.jnu.encoding" value="Cp1252"/>
+    <property name="java.class.path" value="D:\Risk Game\Team6-Soen6441\my-app\target\test-classes;D:\Risk Game\Team6-Soen6441\my-app\target\classes;C:\Users\simra\.m2\repository\junit\junit\4.11\junit-4.11.jar;C:\Users\simra\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\simra\.m2\repository\org\jgrapht\jgrapht-core\1.3.1\jgrapht-core-1.3.1.jar;C:\Users\simra\.m2\repository\org\jheaps\jheaps\0.10\jheaps-0.10.jar;C:\Users\simra\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.8.2\junit-jupiter-api-5.8.2.jar;C:\Users\simra\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\simra\.m2\repository\org\junit\platform\junit-platform-commons\1.8.2\junit-platform-commons-1.8.2.jar;C:\Users\simra\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;"/>
+    <property name="java.vm.vendor" value="Oracle Corporation"/>
+    <property name="sun.arch.data.model" value="64"/>
+    <property name="user.variant" value=""/>
+    <property name="java.vendor.url" value="http://java.oracle.com/"/>
+    <property name="user.timezone" value="America/New_York"/>
+    <property name="java.vm.specification.version" value="1.8"/>
+    <property name="os.name" value="Windows 10"/>
+    <property name="user.country" value="IN"/>
+    <property name="sun.java.launcher" value="SUN_STANDARD"/>
+    <property name="sun.boot.library.path" value="C:\Program Files\Java\jdk1.8.0_202\jre\bin"/>
+    <property name="sun.java.command" value="C:\Users\simra\AppData\Local\Temp\surefire7247970468567325550\surefirebooter8317882261762625564.jar C:\Users\simra\AppData\Local\Temp\surefire7247970468567325550 2024-03-14T18-09-25_039-jvmRun1 surefire2777325568413186561tmp surefire_07945429431840633916tmp"/>
+    <property name="surefire.test.class.path" value="D:\Risk Game\Team6-Soen6441\my-app\target\test-classes;D:\Risk Game\Team6-Soen6441\my-app\target\classes;C:\Users\simra\.m2\repository\junit\junit\4.11\junit-4.11.jar;C:\Users\simra\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\simra\.m2\repository\org\jgrapht\jgrapht-core\1.3.1\jgrapht-core-1.3.1.jar;C:\Users\simra\.m2\repository\org\jheaps\jheaps\0.10\jheaps-0.10.jar;C:\Users\simra\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.8.2\junit-jupiter-api-5.8.2.jar;C:\Users\simra\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\simra\.m2\repository\org\junit\platform\junit-platform-commons\1.8.2\junit-platform-commons-1.8.2.jar;C:\Users\simra\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;"/>
+    <property name="sun.cpu.endian" value="little"/>
+    <property name="user.home" value="C:\Users\simra"/>
+    <property name="user.language" value="en"/>
+    <property name="java.specification.vendor" value="Oracle Corporation"/>
+    <property name="java.home" value="C:\Program Files\Java\jdk1.8.0_202\jre"/>
+    <property name="basedir" value="D:\Risk Game\Team6-Soen6441\my-app"/>
+    <property name="file.separator" value="\"/>
+    <property name="line.separator" value="&#10;"/>
+    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
+    <property name="java.specification.name" value="Java Platform API Specification"/>
+    <property name="java.awt.graphicsenv" value="sun.awt.Win32GraphicsEnvironment"/>
+    <property name="surefire.real.class.path" value="C:\Users\simra\AppData\Local\Temp\surefire7247970468567325550\surefirebooter8317882261762625564.jar"/>
+    <property name="sun.boot.class.path" value="C:\Program Files\Java\jdk1.8.0_202\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_202\jre\classes"/>
+    <property name="user.script" value=""/>
+    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
+    <property name="java.runtime.version" value="1.8.0_202-b08"/>
+    <property name="user.name" value="simra"/>
+    <property name="path.separator" value=";"/>
+    <property name="os.version" value="10.0"/>
+    <property name="java.endorsed.dirs" value="C:\Program Files\Java\jdk1.8.0_202\jre\lib\endorsed"/>
+    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
+    <property name="file.encoding" value="Cp1252"/>
+    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
+    <property name="localRepository" value="C:\Users\simra\.m2\repository"/>
+    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
+    <property name="java.io.tmpdir" value="C:\Users\simra\AppData\Local\Temp\"/>
+    <property name="java.version" value="1.8.0_202"/>
+    <property name="user.dir" value="D:\Risk Game\Team6-Soen6441\my-app"/>
+    <property name="os.arch" value="amd64"/>
+    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
+    <property name="java.awt.printerjob" value="sun.awt.windows.WPrinterJob"/>
+    <property name="sun.os.patch.level" value=""/>
+    <property name="java.library.path" value="C:\Program Files\Java\jdk1.8.0_202\jre\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Python311\Scripts\;C:\Python311\;C:\Program Files\Microsoft MPI\Bin\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;D:\C++\.vscode;C:\MinGW\bin;C:\Program Files\Java\jdk-18.0.2.1\bin;C:\Program Files\Java\jdk-18.0.2.1\bin;C:\Users\simra\anaconda3\Scripts;C:\Users\simra\anaconda3;C:\Program Files\Java\jdk1.8.0_202\bin;C:\Users\simra\Downloads\spark-3.0.1-bin-hadoop2.7-20221129T050659Z-001\spark-3.0.1-bin-hadoop2.7\bin;C:\Program Files\Java\jdk1.8.0_202\bin;C:\Program Files\Docker\Docker\resources\bin;C:\Program Files\Erlang OTP\erts-14.0.1\bin;C:\Program Files\Erlang OTP\bin;C:\Program Files\Git\cmd;C:\ProgramData\chocolatey\bin;D:\Ineuron\pythonProject\COMP6461\dist;C:\Program Files\Go\bin;C:\Program Files\Go\bin;C:\Program Files\PuTTY\;C:\Program Files\apache-maven-3.9.6-bin\apache-maven-3.9.6\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\simra\anaconda3;C:\Users\simra\anaconda3\Library\mingw-w64\bin;C:\Users\simra\anaconda3\Library\usr\bin;C:\Users\simra\anaconda3\Library\bin;C:\Users\simra\anaconda3\Scripts;C:\Users\simra\AppData\Local\Microsoft\WindowsApps;C:\MinGW\bin;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2022.2.2\bin;;C:\Program Files\JetBrains\PyCharm Community Edition 2022.2.2\bin;;C:\Users\simra\Downloads\spark-3.0.1-bin-hadoop2.7-20221129T050659Z-001\spark-3.0.1-bin-hadoop2.7\bin;;C:\Users\simra\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\simra\go\bin;."/>
+    <property name="java.vm.info" value="mixed mode"/>
+    <property name="java.vendor" value="Oracle Corporation"/>
+    <property name="java.vm.version" value="25.202-b08"/>
+    <property name="java.ext.dirs" value="C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext;C:\Windows\Sun\Java\lib\ext"/>
+    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
+    <property name="java.class.version" value="52.0"/>
+  </properties>
+  <testcase name="testExecute" classname="OrderTest" time="0"/>
+</testsuite>
\ No newline at end of file
Index: my-app/target/surefire-reports/AllotArmiesTest.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/my-app/target/surefire-reports/AllotArmiesTest.txt b/my-app/target/surefire-reports/AllotArmiesTest.txt
new file mode 100644
--- /dev/null	(date 1710454505000)
+++ b/my-app/target/surefire-reports/AllotArmiesTest.txt	(date 1710454505000)
@@ -0,0 +1,4 @@
+-------------------------------------------------------------------------------
+Test set: AllotArmiesTest
+-------------------------------------------------------------------------------
+Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in AllotArmiesTest
Index: my-app/src/main/java/model/MainPlayPhase.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/my-app/src/main/java/model/MainPlayPhase.java b/my-app/src/main/java/model/MainPlayPhase.java
new file mode 100644
--- /dev/null	(date 1710543992000)
+++ b/my-app/src/main/java/model/MainPlayPhase.java	(date 1710543992000)
@@ -0,0 +1,49 @@
+package model;
+
+import controller.Game;
+import view.App;
+
+import java.util.ArrayList;
+import java.util.Iterator;
+
+
+public class MainPlayPhase extends PlayPhase {
+
+    App a;
+    ShowMap s;
+
+    public MainPlayPhase(Game p_g) {
+        d_gameinstance = p_g;
+        d_PhaseName = "MainPlay";
+        s=new ShowMap();
+    }
+
+    @Override
+    public void showMap(ArrayList<Player> players, GameMap map) {
+        ShowMap.showMap(players, map);
+    }
+
+    @Override
+    public void reinforce() {
+        Iterator<Player> itr = d_gameinstance.d_Players.listIterator();
+        while(itr.hasNext()) {
+            Player p = itr.next();
+            AllotArmies.allotArmies(p);
+            d_gameinstance.d_LogEntry.setMessage("Assign reinforcement armies to player "+p.getPlayerName());
+        }
+    }
+
+    @Override
+    public void gamePlayer(String[] data, ArrayList<Player> players, String playerName) {
+        printInvalidCommandMessage();
+        d_gameinstance.d_LogEntry.setMessage("------ Invalid command in phase "+d_gameinstance.d_GamePhases.getD_PhaseName()+" -------");
+
+    }
+
+    @Override
+    public boolean assignCountries(GameMap map, ArrayList<Player> players) {
+        printInvalidCommandMessage();
+        d_gameinstance.d_LogEntry.setMessage("------ Invalid command in phase "+d_gameinstance.d_GamePhases.getD_PhaseName()+" -------");
+        return false;
+    }
+}
Index: my-app/src/main/java/controller/Game.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package controller;\n\nimport enumClass.GamePhase;\nimport model.*;\nimport view.App;\n\nimport java.util.ArrayList;\nimport java.util.Iterator;\nimport java.util.Queue;\n\nimport static java.lang.System.exit;\n\n\npublic class Game {\n\n    public GameMap d_Map;\n    public GameRunnerEngine d_RunG;\n    public StartUpPhase d_StartUpPhase;\n    public AllotArmies d_Arfc;\n    public GamePhase d_GameGamePhase;\n    public ArrayList<Player> d_Players;\n    public App d_Play;\n\n    public Game() {\n        d_Map = new GameMap();\n        d_RunG = new GameRunnerEngine();\n        d_StartUpPhase = new StartUpPhase();\n        d_Arfc = new AllotArmies();\n        d_Players = new ArrayList<Player>();\n        d_GameGamePhase = GamePhase.NULL;\n        d_Play = new App();\n    }\n\n    public void setGamePhase(GamePhase p_gameGamePhase) {\n        this.d_GameGamePhase = p_gameGamePhase;\n    }\n\n    public GamePhase parseCommand(Player p_player, String p_newCommand) {\n        int l_controlValue = 0;\n        int l_numberOfArmies = 0;\n        String l_mapName = null;\n        String l_continentId = null;\n        String l_territoryId = null;\n        String l_neighbourTerritoryId = null;\n        String l_playerName = null;\n        String[] l_data = p_newCommand.split(\"\\\\s+\");\n        String l_commandName = l_data[0];\n\n        if (d_GameGamePhase.equals(GamePhase.NULL)) {\n            Communication communication = GamePhaseManagement.gamePhaseNULL(l_commandName,l_data,l_data,l_mapName,d_Map,d_RunG,d_GameGamePhase);\n            d_Map = communication.gameMap;\n            d_GameGamePhase= communication.gamePhase;\n        }\n        else if (d_GameGamePhase.equals(GamePhase.EDITMAP)) {\n            switch (l_commandName) {\n                case \"editcontinent\":\n                    try {\n                        for (int i = 1; i < l_data.length; i++) {\n                            if (l_data[i].equals(\"-add\")) {\n                                if (GameHelper.isAlphabetic(l_data[i + 1])) {\n                                    l_continentId = l_data[i + 1];\n                                }\n                                else {\n                                    System.out.println(\"----- Continent ID is not valid !!! --------\");\n                                }\n                                l_controlValue = Integer.parseInt(l_data[i + 2]);\n\n                                boolean l_check = d_RunG.addContinent(d_Map, l_continentId , l_controlValue);\n                                if (l_check) {\n                                    System.out.println( \"-------- Continent \" + l_continentId + \" added to the map !!! --------\");\n                                    d_GameGamePhase = GamePhase.EDITMAP;\n                                } else {\n                                    System.out.println(\"-------- Continent ID already exists. Please enter a valid continent ID !!! --------\\n\");\n                                }\n                            } else if (l_data[i].equals(\"-remove\")) {\n                                if (GameHelper.isAlphabetic(l_data[i + 1])) {\n                                    l_continentId = l_data[i + 1];\n                                }\n                                else\n                                    System.out.println(\"----- Continent ID is not valid !!! --------\");\n\n                                boolean l_check = d_RunG.removeContinent(d_Map, l_continentId);\n                                if (l_check) {\n                                    System.out.println(\"-------- Continent removed from the Map !!! --------\");\n                                    d_GameGamePhase = GamePhase.EDITMAP;\n                                } else\n                                    System.out.println(\"-------- Continent ID does not exists. Please enter a valid continent ID !!! --------\\n\");\n                            }\n                        }\n                    }\n                    catch(ArrayIndexOutOfBoundsException | NumberFormatException e) {\n                        System.out.println(\"---- Invalid command format. Should be: \\\"editcontinent -add continentID controlvalue , -remove continentID. \\\"----\\n\");\n                    } catch(Exception e) {\n                        System.out.println(\"---- Invalid command format. Should be: \\\"editcontinent -add continentID controlvalue , -remove continentID. \\\"----\\n\");\n                    }\n                    break;\n\n                case \"editcountry\":\n                    try {\n                        for (int i = 1; i < l_data.length; i++) {\n                            if (l_data[i].equals(\"-add\")) {\n                                if (GameHelper.isAlphabetic(l_data[i + 1]) || GameHelper.isAlphabetic(l_data[i + 2])) {\n                                    l_territoryId = l_data[i + 1];\n                                    l_continentId = l_data[i + 2];\n                                } else {\n                                    System.out.println(\"----- Territory ID is not valid !!! --------\");\n                                }\n                                boolean l_check = d_RunG.addTerritory(d_Map, l_territoryId, l_continentId);\n                                if (l_check) {\n                                    System.out.println(\"-------- Territory \" + l_territoryId + \" added to the map !!! --------\");\n                                    d_GameGamePhase = GamePhase.EDITMAP;\n                                } else {\n                                    System.out.println(\"-------- Territory ID already exists. Please enter a valid Territory !!! --------\\n\");\n                                }\n                            } else if (l_data[i].equals(\"-remove\")) {\n                                if (GameHelper.isAlphabetic(l_data[i + 1])) {\n                                    l_territoryId = l_data[i + 1];\n                                }\n                                else {\n                                    System.out.println(\"----- Territory ID is not valid !!! --------\");\n                                }\n                                boolean l_check = d_RunG.removeTerritory(d_Map, l_territoryId);\n                                if (l_check) {\n                                    System.out.println(\"-------- Territory removed from the Map !!! --------\");\n                                    d_GameGamePhase = GamePhase.EDITMAP;\n                                } else {\n                                    System.out.println(\"-------- Territory ID does not exists. Please enter a valid continent ID !!! --------\\n\");\n                                }\n                            }\n                        }\n                    }\n                    catch(ArrayIndexOutOfBoundsException e) {\n                        System.out.println(\"---- Invalid command format. Should be: \\\"editcountry -add countryId continentId , -remove countryId \\\"----\\n\");\n                    }\n                    catch(Exception e) {\n                        System.out.println(\"---- Invalid command format. Should be: \\\"editcountry -add countryId continentId , -remove countryId \\\"----\\n\");\n                    }\n                    break;\n\n                case \"editneighbour\":\n                    try {\n                        for (int i = 1; i < l_data.length; i++) {\n                            if (l_data[i].equals(\"-add\")) {\n                                if (GameHelper.isAlphabetic(l_data[i + 1]) || GameHelper.isAlphabetic(l_data[i + 2])) {\n                                    l_territoryId = l_data[i + 1];\n                                    l_neighbourTerritoryId = l_data[i + 2];\n                                } else {\n                                    System.out.println(\"----- Territory ID is not valid !!!  -----\");\n                                }\n\n                                boolean l_check = d_RunG.addNeighbour(d_Map, l_territoryId, l_neighbourTerritoryId);\n                                if (l_check) {\n                                    d_GameGamePhase = GamePhase.EDITMAP;\n                                } else {\n                                    System.out.println(\"----- Territory doesn't exist - Enter valid territoryID and neighbourTerritoryID -----\");\n                                }\n                            } else if (l_data[i].equals(\"-remove\")) {\n                                if (GameHelper.isAlphabetic(l_data[i + 1]) || GameHelper.isAlphabetic(l_data[i + 2])) {\n                                    l_territoryId = l_data[i + 1];\n                                    l_neighbourTerritoryId = l_data[i + 2];\n                                } else {\n                                    System.out.println(\"----- Territory ID is not valid !!!  -----\");\n                                }\n\n                                boolean l_check = d_RunG.removeNeighbour(d_Map, l_territoryId, l_neighbourTerritoryId);\n                                if (l_check) {\n                                    d_GameGamePhase = GamePhase.EDITMAP;\n                                } else\n                                    System.out.println(\"----- Territory doesn't exist - Enter valid territoryID and neighbourTerritoryID -----\\n\");\n                            }\n                        }\n                    }\n                    catch(ArrayIndexOutOfBoundsException e) {\n                        System.out.println(\"----- Invalid command format. Should be: editneighbor -add countryID neighborcountryID, -remove countryID neighborcountryID ----\");\n                    }\n                    catch(Exception e) {\n                        System.out.println(\"----- Invalid command format. Should be: editneighbor -add countryID neighborcountryID, -remove countryID neighborcountryID ----\");\n                    }\n                    break;\n                case \"savemap\":\n                    try {\n                        if (l_data[1] != \"\") {\n                            if (GameHelper.isValidMap(l_data[1])) {\n                                l_mapName = l_data[1];\n                                boolean l_check = d_RunG.saveMap(d_Map, l_mapName);\n                                if (l_check) {\n                                    System.out.println(\"----- Map file is saved successfully !!!! -----\");\n                                    d_GameGamePhase = GamePhase.EDITMAP;\n                                } else\n                                    System.out.println(\"---- Invalid Map !!! * Cannot be saved * -----\");\n                            } else\n                                System.out.println(\"----- Map name is not valid !!!! -----\");\n                        }\n                    }\n                    catch(ArrayIndexOutOfBoundsException e) {\n                        System.out.println(\"----- Invalid command format. Should be: savemap filename ----\");\n                    }\n                    catch(Exception e) {\n                        System.out.println(\"----- Invalid command format. Should be: savemap filename -----\");\n                    }\n                    break;\n\n                case \"showmap\":\n                    System.out.println(\"----- Displaying the Map Below ------ \\n\");\n                    ShowMap.showMap(d_Map);\n                    d_GameGamePhase = GamePhase.EDITMAP;\n                    break;\n\n                case \"editmap\":\n                    try {\n                        if (l_data[1] != null) {\n                            if (GameHelper.isValidMap(l_data[1])) {\n                                l_mapName = l_data[1];\n                                d_Map = d_RunG.editMap(l_mapName);\n                                System.out.println(\"----- Initiate the editing process   \" + l_mapName+\" -----\");\n                                d_GameGamePhase = GamePhase.EDITMAP;\n                            } else\n                                System.out.println(\"----- Map is not valid !!!! -----\");\n                        }\n                    }\n                    catch(ArrayIndexOutOfBoundsException e) {\n                        System.out.println(\"----- Invalid command format. Should be: editmap sample.map ----\");\n                    }\n                    catch(Exception e) {\n                        System.out.println(\"----- Invalid command format. Should be: editmap sample.map ----\");\n                    }\n                    break;\n\n                case \"loadmap\":\n                    try {\n                        if (l_data[1] != \"\") {\n                            if (GameHelper.isValidMap(l_data[1])) {\n                                l_mapName = l_data[1];\n                                d_Map = d_RunG.loadMap(l_mapName);\n                                if (d_Map != null) {\n                                    if (!d_Map.d_Valid) {\n                                        System.out.println(\"----- Map is not valid !!!! -----\");\n                                        d_GameGamePhase = GamePhase.NULL;\n                                    } else {\n                                        System.out.println(\"----- Map Validated !!!! -----\");\n                                        System.out.println(\"----  You can start adding players :- !!!! ----\");\n                                        d_GameGamePhase = GamePhase.STARTUP;\n                                    }\n                                } else {\n                                    d_GameGamePhase = GamePhase.NULL;\n                                }\n                            } else\n                                System.out.println(\"----- Map is not valid !!!! -----\");\n                        }\n                    }\n                    catch(ArrayIndexOutOfBoundsException e) {\n                        System.out.println(\"----- Invalid command format. Should be: loadmap sample.map ----\");\n                    }\n                    catch(Exception e) {\n                        System.out.println(\"----- Invalid command format. Should be: loadmap sample.map ----\");\n                    }\n                    break;\n\n                case \"validatemap\":\n                    if(d_RunG.validateMap(d_Map)) {\n                            System.out.println(\"----- Map Validated !!!! -----\");\n                    }\n                    else {\n                        System.out.println(\"----- Map is not valid !!!! -----\");\n                    }\n                    break;\n\n                default:\n                    System.out.println(\"----- Invalid command format. \\n Either use | edit commands :(editcontinent/editterritory/editneighbour)| or savemap| validatemap | editmap | loadmap | showmap command.\");\n                    break;\n            }\n        }\n        else if (d_GameGamePhase.equals(GamePhase.STARTUP)) {\n            switch (l_commandName) {\n                case \"gameplayer\":\n                    try {\n                        for (int i = 1; i < l_data.length; i++) {\n                            if (l_data[i].equals(\"-add\")) {\n                                if (GameHelper.isValidPlayer(l_data[i + 1])) {\n                                    l_playerName = l_data[i + 1];\n                                    boolean l_check = d_StartUpPhase.addPlayer(d_Players, l_playerName);\n                                    if (l_check) {\n                                        System.out.println(\"------- Player is added !!!! ---- \");\n                                        System.out.println(\"------- Maximum 5 can be added !!! ---- \");\n                                    } else {\n                                        System.out.println(\"------- The 5-player maximum has been met, and no further players can be accommodated !!!! ---- \");\n                                    }\n                                    d_GameGamePhase = GamePhase.STARTUP;\n                                } else {\n                                    System.out.println(\"-------Player Name is not valid !!!! ---- \");\n                                }\n                            } else if (l_data[i].equals(\"-remove\")) {\n                                if (GameHelper.isValidPlayer(l_data[i + 1])) {\n                                    l_playerName = l_data[i + 1];\n                                    boolean l_check = d_StartUpPhase.removePlayer(d_Players, l_playerName);\n                                    if (l_check)\n                                        System.out.println(\"------- Player is removed !!!! ---- \");\n                                    else\n                                        System.out.println(\"------- Player doesn't exist !!! ----\");\n                                    d_GameGamePhase = GamePhase.STARTUP;\n                                } else\n                                    System.out.println(\"-------Player Name is not valid !!!! ---- \");\n                            }\n                        }\n                    }\n                    catch(ArrayIndexOutOfBoundsException e) {\n                        System.out.println(\"----- Invalid command format. Should be:  gameplayer -add playername,  -remove playername ----- \");\n                    }\n                    catch(Exception e) {\n                        System.out.println(\"----- Invalid command format. Should be:  gameplayer -add playername,  -remove playername ----- \");\n                    }\n                    break;\n\n                case \"assigncountries\":\n                    boolean l_check = d_StartUpPhase.assignTerritories(d_Map, d_Players);\n                    if (l_check) {\n                        System.out.println(\"----- Territories have been randomly allocated to the players  ----- \");\n                        d_GameGamePhase = GamePhase.ISSUE_ORDERS;\n                    }\n                    d_GameGamePhase = GamePhase.ISSUE_ORDERS;\n                    break;\n\n                case \"showmap\":\n                    ShowMap.showMapWithArmies(d_Players, d_Map);\n                    break;\n\n                default:\n                    System.out.println(\"----- Invalid command format. Should be:| gameplayer command | assignterritories command | showmap command | in the STARTUP Phase -----\");\n                    break;\n            }\n        }\n\n        else if (d_GameGamePhase.equals(GamePhase.ISSUE_ORDERS)) {\n            int l_counter = 0;\n            Iterator<Player> l_iterator = d_Players.listIterator();\n            while(l_iterator.hasNext()) {\n                Player l_p = l_iterator.next();\n                System.out.println(\"----- Player \"+l_p.getPlayerName()+\" has \"+l_p.getOwnedArmies()+\" Armies !!!!! -----\");\n                if (l_p.getOwnedArmies() > 0) {\n                    l_counter = l_counter + l_p.getOwnedArmies();\n                }\n            }\n            System.out.println(\"----- Combined armies remaining across all players in the pool \"+l_counter+\" -----\");\n            if(l_counter > 0){\n                switch (l_commandName) {\n                    case \"deploy\":\n                        try {\n                            if (!(l_data[1] == null) || !(l_data[2] == null)) {\n                                if (GameHelper.isNumeric(l_data[1]) || GameHelper.isNumeric(l_data[2])) {\n                                    l_territoryId = l_data[1];\n\n                                    l_numberOfArmies = Integer.parseInt(l_data[2]);\n\n                                    boolean l_checkOwnedTerritory = p_player.getOwnedTerritories().containsKey(l_territoryId.toLowerCase());\n                                    boolean l_checkArmies = (p_player.getOwnedArmies() >= l_numberOfArmies);\n                                    System.out.println(\"----- Player \"+p_player.getPlayerName()+\"  Can provide deploy order or pass order ----\");\n                                    if(l_checkOwnedTerritory && l_checkArmies){\n                                        Order l_temp = new Order(p_player, l_territoryId, l_numberOfArmies);\n                                        p_player.addOrder(l_temp);\n                                        p_player.issue_order();\n                                        p_player.setOwnedArmies(p_player.getOwnedArmies()-l_numberOfArmies);\n                                        System.out.println(\"----- Player\" + p_player.getPlayerName() + \"currently retains\" +p_player.getOwnedArmies()+ \"army units ----\");\n                                    }\n                                    else{\n                                        System.out.println(\"--- Pass to next player if no territory owned or insufficient army units ---- \\n\");\n                                    }\n                                    d_GameGamePhase = GamePhase.TURN;\n                                    break;\n                                }\n                            } else\n                                System.out.println(\"------ Command not valid ----- \");\n\n                        }catch (Exception e) {\n                            System.out.println(\"--- Pass to next player if no territory owned or insufficient army units ---- \\n\");\n                        }\n                        break;\n\n                case \"pass\":\n                    try {\n                        d_GameGamePhase = GamePhase.TURN;\n                    }catch (Exception e) {\n                        System.out.println(\"----- Invalid command format. Should be: | deploy territoryID num | pass | ----- \");\n                    }\n                    break;\n\n                case \"showmap\":\n                    ShowMap.showMapWithArmies(d_Players, d_Map);\n                    break;\n\n                default:\n                    System.out.println(\"----- Invalid command format. Should be:| deploy | pass | showmap | commands in ISSUE_ORDERS Phase -----\");\n                    break;\n            }\n        }\n            else{\n                System.out.println(\" -----  Press ENTER to  continue  OR  execute  Phase. ----- \");\n                d_GameGamePhase = GamePhase.EXECUTE_ORDERS;\n                return d_GameGamePhase;\n            }\n        }\n        else if (d_GameGamePhase.equals(GamePhase.EXECUTE_ORDERS)) {\n            switch (l_commandName) {\n                case \"execute\":\n                    int l_count = 0;\n                    for (Player l_p : d_Players) {\n                        Queue<Order> l_temp = l_p.getD_orderList();\n                            l_count = l_count +l_temp.size();\n                        }\n\n                    if(l_count == 0){\n                        System.out.println(\" -----  Orders already executed !!!  ----- \");\n                        ShowMap.showMapWithArmies(d_Players, d_Map);\n                        d_GameGamePhase = GamePhase.ISSUE_ORDERS;\n                        return d_GameGamePhase;\n                    }\n                    else{\n                        System.out.println(\" -----  Total Orders  :\" + l_count + \" -----\");\n                        while (l_count != 0) {\n                            for (Player l_p : d_Players) {\n\n                                Queue<Order> l_temp = l_p.getD_orderList();\n                                if (l_temp.size() > 0) {\n                                    Order l_toRemove = l_p.next_order();\n                                    System.out.println(\"----- Order: \" +l_toRemove+ \" executed for player: \"+l_p.getPlayerName()+ \" -----\");\n                                    l_toRemove.execute();\n                                }\n                            }\n                            l_count--;\n                        }\n\n                        System.out.println(\"-----  Orders executed!!! -----\");\n                        ShowMap.showMapWithArmies(d_Players, d_Map);\n                        d_GameGamePhase = GamePhase.ISSUE_ORDERS;\n                    }\n                    break;\n\n                case \"showmap\":\n                    ShowMap.showMapWithArmies(d_Players, d_Map);\n                    break;\n\n                case \"exit\":\n                    System.out.println(\" ----- [ END OF BUILD 1 ] ------- \");\n                    exit(0);\n\n                default:\n                    System.out.println(\"----- The Order Phase has begun, proceed with either displaying the map (showmap) or executing orders (execute) ---- \");\n                    break;\n            }\n        }\n            return d_GameGamePhase;\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/my-app/src/main/java/controller/Game.java b/my-app/src/main/java/controller/Game.java
--- a/my-app/src/main/java/controller/Game.java	(revision c69954fa9cef9a12d1a7db87280027b4939dce79)
+++ b/my-app/src/main/java/controller/Game.java	(date 1710545483000)
@@ -1,18 +1,39 @@
 package controller;
 
-import enumClass.GamePhase;
-import model.*;
-import view.App;
+
+import static java.lang.System.*;
 
 import java.util.ArrayList;
 import java.util.Iterator;
 import java.util.Queue;
 
-import static java.lang.System.exit;
+import enumClass.GamePhase;
+import model.AllotArmies;
+import model.GameMap;
+import model.GameRunnerEngine;
+import model.Order;
+import model.Player;
+import model.ShowMap;
+import model.StartUpPhase;
+import view.App;
+import model.LogBuffer;
+import view.WriteLogEntry;
+import model.GamePhases;
+import  model.order1;
+import model.TerritoryDetails;
+import model.Advance;
+import model.*;
+
+
+/**
+ * 
+ * Game class where the commands are parsed.
+ */
 
 
 public class Game {
 
+
     public GameMap d_Map;
     public GameRunnerEngine d_RunG;
     public StartUpPhase d_StartUpPhase;
@@ -21,20 +42,59 @@
     public ArrayList<Player> d_Players;
     public App d_Play;
 
+    public LogBuffer d_LogEntry;
+    public GamePhases d_GamePhases;
+
+    public WriteLogEntry d_WriteLog;
+
+
+
+    /**
+     * 
+     * Game constructor
+     */
+
     public Game() {
         d_Map = new GameMap();
         d_RunG = new GameRunnerEngine();
-        d_StartUpPhase = new StartUpPhase();
+        //d_StartUpPhase = new StartUpPhase();
         d_Arfc = new AllotArmies();
         d_Players = new ArrayList<Player>();
         d_GameGamePhase = GamePhase.NULL;
         d_Play = new App();
+        d_LogEntry = new LogBuffer();
+        d_WriteLog = new WriteLogEntry();
+        d_LogEntry.attach(d_WriteLog);
+
     }
 
+
+    public void setPhase(GamePhases p_GamePhases)
+    {
+        d_GamePhases = p_GamePhases;
+    }
+    /**
+     *
+     * Setter function
+     * @param p_gameGamePhase Phase of the game
+     */
     public void setGamePhase(GamePhase p_gameGamePhase) {
         this.d_GameGamePhase = p_gameGamePhase;
     }
 
+    public boolean isMapNameValid(String p_val) {
+        return p_val != null && p_val.matches("^[a-zA-Z.]*$");
+    }
+
+/**
+ * 
+ * Commands are parsed to their respective functions
+ * 
+ * @param p_player Player object
+ * @param p_newCommand command
+ * @return the phase of the game
+ */
+
     public GamePhase parseCommand(Player p_player, String p_newCommand) {
         int l_controlValue = 0;
         int l_numberOfArmies = 0;
@@ -42,286 +102,144 @@
         String l_continentId = null;
         String l_territoryId = null;
         String l_neighbourTerritoryId = null;
+        String l_countryNameFrom = null;
+        String l_countryNameTo= null;
         String l_playerName = null;
+        String l_countryId=null;
+        String l_sourceCountryId= null;
+        String l_targetCountryId= null;
         String[] l_data = p_newCommand.split("\\s+");
         String l_commandName = l_data[0];
 
         if (d_GameGamePhase.equals(GamePhase.NULL)) {
-            Communication communication = GamePhaseManagement.gamePhaseNULL(l_commandName,l_data,l_data,l_mapName,d_Map,d_RunG,d_GameGamePhase);
-            d_Map = communication.gameMap;
-            d_GameGamePhase= communication.gamePhase;
+            d_LogEntry.setMessage("------- Initial Phase --------");
+            setPhase(new Load(this));
+            switch (l_commandName) {
+                case "editmap":
+                    d_LogEntry.setGamePhase(d_GamePhases);
+                    d_LogEntry.setCommand("-------- "+l_commandName+" Command is being executed!!! --------\n");
+                    d_GamePhases.editMap(l_data, l_mapName);
+                    String str= d_GamePhases.getD_PhaseName();
+                    System.out.println(str);
+                    break;
+
+                case "loadmap":
+
+                    d_LogEntry.setGamePhase(d_GamePhases);
+                    d_LogEntry.setCommand("-------- "+l_commandName+" Command is being executed!!! --------\n");
+                    d_GamePhases.loadMap(l_data,l_mapName);
+                    String str1= d_GamePhases.getD_PhaseName();
+                    System.out.println(str1);
+                    break;
+                default:
+                    System.out.println("----- Try LoadMap or EditMap first: loadmap filename.map or editmap filename.map ------");
+                    d_LogEntry.setMessage("----- Try LoadMap or EditMap first: loadmap filename.map or editmap filename.map ------");
+                    break;
+            }
         }
         else if (d_GameGamePhase.equals(GamePhase.EDITMAP)) {
+
+            d_LogEntry.setMessage("------- EditMap Phase --------");
             switch (l_commandName) {
                 case "editcontinent":
-                    try {
-                        for (int i = 1; i < l_data.length; i++) {
-                            if (l_data[i].equals("-add")) {
-                                if (GameHelper.isAlphabetic(l_data[i + 1])) {
-                                    l_continentId = l_data[i + 1];
-                                }
-                                else {
-                                    System.out.println("----- Continent ID is not valid !!! --------");
-                                }
-                                l_controlValue = Integer.parseInt(l_data[i + 2]);
+                    setPhase(new Load(this));
+                    d_LogEntry.setGamePhase(d_GamePhases);
+                    d_LogEntry.setCommand("-------- "+l_commandName+" Command is being executed!!! --------\n");
+                    d_GamePhases.editContinent(l_data, l_continentId, l_controlValue);
+                    String str= d_GamePhases.getD_PhaseName();
+                    System.out.println(str);
 
-                                boolean l_check = d_RunG.addContinent(d_Map, l_continentId , l_controlValue);
-                                if (l_check) {
-                                    System.out.println( "-------- Continent " + l_continentId + " added to the map !!! --------");
-                                    d_GameGamePhase = GamePhase.EDITMAP;
-                                } else {
-                                    System.out.println("-------- Continent ID already exists. Please enter a valid continent ID !!! --------\n");
-                                }
-                            } else if (l_data[i].equals("-remove")) {
-                                if (GameHelper.isAlphabetic(l_data[i + 1])) {
-                                    l_continentId = l_data[i + 1];
-                                }
-                                else
-                                    System.out.println("----- Continent ID is not valid !!! --------");
-
-                                boolean l_check = d_RunG.removeContinent(d_Map, l_continentId);
-                                if (l_check) {
-                                    System.out.println("-------- Continent removed from the Map !!! --------");
-                                    d_GameGamePhase = GamePhase.EDITMAP;
-                                } else
-                                    System.out.println("-------- Continent ID does not exists. Please enter a valid continent ID !!! --------\n");
-                            }
-                        }
-                    }
-                    catch(ArrayIndexOutOfBoundsException | NumberFormatException e) {
-                        System.out.println("---- Invalid command format. Should be: \"editcontinent -add continentID controlvalue , -remove continentID. \"----\n");
-                    } catch(Exception e) {
-                        System.out.println("---- Invalid command format. Should be: \"editcontinent -add continentID controlvalue , -remove continentID. \"----\n");
-                    }
                     break;
 
                 case "editcountry":
-                    try {
-                        for (int i = 1; i < l_data.length; i++) {
-                            if (l_data[i].equals("-add")) {
-                                if (GameHelper.isAlphabetic(l_data[i + 1]) || GameHelper.isAlphabetic(l_data[i + 2])) {
-                                    l_territoryId = l_data[i + 1];
-                                    l_continentId = l_data[i + 2];
-                                } else {
-                                    System.out.println("----- Territory ID is not valid !!! --------");
-                                }
-                                boolean l_check = d_RunG.addTerritory(d_Map, l_territoryId, l_continentId);
-                                if (l_check) {
-                                    System.out.println("-------- Territory " + l_territoryId + " added to the map !!! --------");
-                                    d_GameGamePhase = GamePhase.EDITMAP;
-                                } else {
-                                    System.out.println("-------- Territory ID already exists. Please enter a valid Territory !!! --------\n");
-                                }
-                            } else if (l_data[i].equals("-remove")) {
-                                if (GameHelper.isAlphabetic(l_data[i + 1])) {
-                                    l_territoryId = l_data[i + 1];
-                                }
-                                else {
-                                    System.out.println("----- Territory ID is not valid !!! --------");
-                                }
-                                boolean l_check = d_RunG.removeTerritory(d_Map, l_territoryId);
-                                if (l_check) {
-                                    System.out.println("-------- Territory removed from the Map !!! --------");
-                                    d_GameGamePhase = GamePhase.EDITMAP;
-                                } else {
-                                    System.out.println("-------- Territory ID does not exists. Please enter a valid continent ID !!! --------\n");
-                                }
-                            }
-                        }
-                    }
-                    catch(ArrayIndexOutOfBoundsException e) {
-                        System.out.println("---- Invalid command format. Should be: \"editcountry -add countryId continentId , -remove countryId \"----\n");
-                    }
-                    catch(Exception e) {
-                        System.out.println("---- Invalid command format. Should be: \"editcountry -add countryId continentId , -remove countryId \"----\n");
-                    }
+                    setPhase(new Load(this));
+                    d_LogEntry.setGamePhase(d_GamePhases);
+                    d_LogEntry.setCommand("-------- "+l_commandName+" Command is being executed!!! --------\n");
+                    d_GamePhases.editCountry(l_data, l_continentId, l_countryId) ;
+                    d_LogEntry.setGamePhase(d_GamePhases);
+                    String str1= d_GamePhases.getD_PhaseName();
+                    System.out.println(str1);
                     break;
 
-                case "editneighbour":
-                    try {
-                        for (int i = 1; i < l_data.length; i++) {
-                            if (l_data[i].equals("-add")) {
-                                if (GameHelper.isAlphabetic(l_data[i + 1]) || GameHelper.isAlphabetic(l_data[i + 2])) {
-                                    l_territoryId = l_data[i + 1];
-                                    l_neighbourTerritoryId = l_data[i + 2];
-                                } else {
-                                    System.out.println("----- Territory ID is not valid !!!  -----");
-                                }
+                case "editneighbor":
+                    setPhase(new Load(this));
+                    d_LogEntry.setGamePhase(d_GamePhases);
+                    d_LogEntry.setCommand("-------- "+l_commandName+" Command is being executed!!! --------\n");
+                    d_GamePhases.editNeighbour(l_data, l_countryId, l_neighbourTerritoryId);
+                    String str2= d_GamePhases.getD_PhaseName();
+                    System.out.println(str2);
 
-                                boolean l_check = d_RunG.addNeighbour(d_Map, l_territoryId, l_neighbourTerritoryId);
-                                if (l_check) {
-                                    d_GameGamePhase = GamePhase.EDITMAP;
-                                } else {
-                                    System.out.println("----- Territory doesn't exist - Enter valid territoryID and neighbourTerritoryID -----");
-                                }
-                            } else if (l_data[i].equals("-remove")) {
-                                if (GameHelper.isAlphabetic(l_data[i + 1]) || GameHelper.isAlphabetic(l_data[i + 2])) {
-                                    l_territoryId = l_data[i + 1];
-                                    l_neighbourTerritoryId = l_data[i + 2];
-                                } else {
-                                    System.out.println("----- Territory ID is not valid !!!  -----");
-                                }
-
-                                boolean l_check = d_RunG.removeNeighbour(d_Map, l_territoryId, l_neighbourTerritoryId);
-                                if (l_check) {
-                                    d_GameGamePhase = GamePhase.EDITMAP;
-                                } else
-                                    System.out.println("----- Territory doesn't exist - Enter valid territoryID and neighbourTerritoryID -----\n");
-                            }
-                        }
-                    }
-                    catch(ArrayIndexOutOfBoundsException e) {
-                        System.out.println("----- Invalid command format. Should be: editneighbor -add countryID neighborcountryID, -remove countryID neighborcountryID ----");
-                    }
-                    catch(Exception e) {
-                        System.out.println("----- Invalid command format. Should be: editneighbor -add countryID neighborcountryID, -remove countryID neighborcountryID ----");
-                    }
                     break;
+
                 case "savemap":
-                    try {
-                        if (l_data[1] != "") {
-                            if (GameHelper.isValidMap(l_data[1])) {
-                                l_mapName = l_data[1];
-                                boolean l_check = d_RunG.saveMap(d_Map, l_mapName);
-                                if (l_check) {
-                                    System.out.println("----- Map file is saved successfully !!!! -----");
-                                    d_GameGamePhase = GamePhase.EDITMAP;
-                                } else
-                                    System.out.println("---- Invalid Map !!! * Cannot be saved * -----");
-                            } else
-                                System.out.println("----- Map name is not valid !!!! -----");
-                        }
-                    }
-                    catch(ArrayIndexOutOfBoundsException e) {
-                        System.out.println("----- Invalid command format. Should be: savemap filename ----");
-                    }
-                    catch(Exception e) {
-                        System.out.println("----- Invalid command format. Should be: savemap filename -----");
-                    }
+                    setPhase(new Load(this));
+                    d_LogEntry.setGamePhase(d_GamePhases);
+                    d_LogEntry.setCommand("-------- "+l_commandName+" Command is being executed!!! --------\n");
+                    d_GamePhases.savemap(l_data, l_mapName);
+                    String str3= d_GamePhases.getD_PhaseName();
+                    System.out.println(str3);
+
                     break;
 
                 case "showmap":
-                    System.out.println("----- Displaying the Map Below ------ \n");
-                    ShowMap.showMap(d_Map);
+                    setPhase(new Load(this));
+                    d_LogEntry.setGamePhase(d_GamePhases);
+                    d_LogEntry.setCommand("-------- "+l_commandName+" Command is being executed!!! --------\n");
+                    d_GamePhases.showMap(d_Map);
+                    String str4= d_GamePhases.getD_PhaseName();
+                    System.out.println(str4);
+                    // d_RunG.showMap(d_Map);
                     d_GameGamePhase = GamePhase.EDITMAP;
                     break;
 
-                case "editmap":
-                    try {
-                        if (l_data[1] != null) {
-                            if (GameHelper.isValidMap(l_data[1])) {
-                                l_mapName = l_data[1];
-                                d_Map = d_RunG.editMap(l_mapName);
-                                System.out.println("----- Initiate the editing process   " + l_mapName+" -----");
-                                d_GameGamePhase = GamePhase.EDITMAP;
-                            } else
-                                System.out.println("----- Map is not valid !!!! -----");
-                        }
-                    }
-                    catch(ArrayIndexOutOfBoundsException e) {
-                        System.out.println("----- Invalid command format. Should be: editmap sample.map ----");
-                    }
-                    catch(Exception e) {
-                        System.out.println("----- Invalid command format. Should be: editmap sample.map ----");
-                    }
-                    break;
-
-                case "loadmap":
-                    try {
-                        if (l_data[1] != "") {
-                            if (GameHelper.isValidMap(l_data[1])) {
-                                l_mapName = l_data[1];
-                                d_Map = d_RunG.loadMap(l_mapName);
-                                if (d_Map != null) {
-                                    if (!d_Map.d_Valid) {
-                                        System.out.println("----- Map is not valid !!!! -----");
-                                        d_GameGamePhase = GamePhase.NULL;
-                                    } else {
-                                        System.out.println("----- Map Validated !!!! -----");
-                                        System.out.println("----  You can start adding players :- !!!! ----");
-                                        d_GameGamePhase = GamePhase.STARTUP;
-                                    }
-                                } else {
-                                    d_GameGamePhase = GamePhase.NULL;
-                                }
-                            } else
-                                System.out.println("----- Map is not valid !!!! -----");
-                        }
-                    }
-                    catch(ArrayIndexOutOfBoundsException e) {
-                        System.out.println("----- Invalid command format. Should be: loadmap sample.map ----");
-                    }
-                    catch(Exception e) {
-                        System.out.println("----- Invalid command format. Should be: loadmap sample.map ----");
-                    }
-                    break;
-
                 case "validatemap":
-                    if(d_RunG.validateMap(d_Map)) {
-                            System.out.println("----- Map Validated !!!! -----");
-                    }
-                    else {
-                        System.out.println("----- Map is not valid !!!! -----");
-                    }
+                    setPhase(new Load(this));
+                    d_LogEntry.setGamePhase(d_GamePhases);
+                    d_LogEntry.setCommand("-------- "+l_commandName+" Command is being executed!!! --------\n");
+                    d_GamePhases.validatemap();
+                    String strValidate= d_GamePhases.getD_PhaseName();
+                    System.out.println(strValidate);
+
                     break;
 
                 default:
-                    System.out.println("----- Invalid command format. \n Either use | edit commands :(editcontinent/editterritory/editneighbour)| or savemap| validatemap | editmap | loadmap | showmap command.");
+                    System.out.println("---- Invalid command format. Should be:  edit commands(editcontinent/editcountry/editneighbor) or savemap/validatemap/editmap/loadmap/showmap command");
+                    d_LogEntry.setMessage("---- Invalid command format. Should be: edit commands(editcontinent/editcountry/editneighbor) or savemap/validatemap/editmap/loadmap/showmap command");
                     break;
             }
         }
         else if (d_GameGamePhase.equals(GamePhase.STARTUP)) {
             switch (l_commandName) {
                 case "gameplayer":
-                    try {
-                        for (int i = 1; i < l_data.length; i++) {
-                            if (l_data[i].equals("-add")) {
-                                if (GameHelper.isValidPlayer(l_data[i + 1])) {
-                                    l_playerName = l_data[i + 1];
-                                    boolean l_check = d_StartUpPhase.addPlayer(d_Players, l_playerName);
-                                    if (l_check) {
-                                        System.out.println("------- Player is added !!!! ---- ");
-                                        System.out.println("------- Maximum 5 can be added !!! ---- ");
-                                    } else {
-                                        System.out.println("------- The 5-player maximum has been met, and no further players can be accommodated !!!! ---- ");
-                                    }
-                                    d_GameGamePhase = GamePhase.STARTUP;
-                                } else {
-                                    System.out.println("-------Player Name is not valid !!!! ---- ");
-                                }
-                            } else if (l_data[i].equals("-remove")) {
-                                if (GameHelper.isValidPlayer(l_data[i + 1])) {
-                                    l_playerName = l_data[i + 1];
-                                    boolean l_check = d_StartUpPhase.removePlayer(d_Players, l_playerName);
-                                    if (l_check)
-                                        System.out.println("------- Player is removed !!!! ---- ");
-                                    else
-                                        System.out.println("------- Player doesn't exist !!! ----");
-                                    d_GameGamePhase = GamePhase.STARTUP;
-                                } else
-                                    System.out.println("-------Player Name is not valid !!!! ---- ");
-                            }
-                        }
-                    }
-                    catch(ArrayIndexOutOfBoundsException e) {
-                        System.out.println("----- Invalid command format. Should be:  gameplayer -add playername,  -remove playername ----- ");
-                    }
-                    catch(Exception e) {
-                        System.out.println("----- Invalid command format. Should be:  gameplayer -add playername,  -remove playername ----- ");
-                    }
+                    setPhase(new StartUpPhase(this));
+                    d_LogEntry.setGamePhase(d_GamePhases);
+                    d_LogEntry.setCommand("-------- "+l_commandName+" Command is being executed!!! --------\n");
+                    d_GamePhases.gamePlayer(l_data,d_Players, l_playerName);
+                    String str= d_GamePhases.getD_PhaseName();
+                    System.out.println(str);
                     break;
 
                 case "assigncountries":
-                    boolean l_check = d_StartUpPhase.assignTerritories(d_Map, d_Players);
+                    boolean l_check = d_GamePhases.assignCountries(d_Map, d_Players);
                     if (l_check) {
                         System.out.println("----- Territories have been randomly allocated to the players  ----- ");
-                        d_GameGamePhase = GamePhase.ISSUE_ORDERS;
+                        d_LogEntry.setMessage("----- Territories have been randomly allocated to the players  ----- ");
+                        setPhase(new MainPlayPhase(this));
+                        d_LogEntry.setGamePhase(d_GamePhases);
+                        d_LogEntry.setCommand("-------- "+l_commandName+" Command is being executed!!! --------\n");
+                        d_GamePhases.reinforce();
+                        String str1= d_GamePhases.getD_PhaseName();
+                        System.out.println(str1);
                     }
                     d_GameGamePhase = GamePhase.ISSUE_ORDERS;
                     break;
 
                 case "showmap":
-                    ShowMap.showMapWithArmies(d_Players, d_Map);
+                    d_GamePhases.showMap(d_Players,d_Map);
+                    String str2= d_GamePhases.getD_PhaseName();
+                    System.out.println(str2);
+                    d_LogEntry.setGamePhase(d_GamePhases);
+                    d_LogEntry.setCommand("-------- "+l_commandName+" Command is being executed!!! --------\n");
                     break;
 
                 default:
@@ -343,6 +261,7 @@
             System.out.println("----- Combined armies remaining across all players in the pool "+l_counter+" -----");
             if(l_counter > 0){
                 switch (l_commandName) {
+
                     case "deploy":
                         try {
                             if (!(l_data[1] == null) || !(l_data[2] == null)) {
@@ -354,7 +273,7 @@
                                     boolean l_checkOwnedTerritory = p_player.getOwnedTerritories().containsKey(l_territoryId.toLowerCase());
                                     boolean l_checkArmies = (p_player.getOwnedArmies() >= l_numberOfArmies);
                                     System.out.println("----- Player "+p_player.getPlayerName()+"  Can provide deploy order or pass order ----");
-                                    if(l_checkOwnedTerritory && l_checkArmies){
+                                    if(l_checkOwnedTerritory && l_checkArmies) {
                                         Order l_temp = new Order(p_player, l_territoryId, l_numberOfArmies);
                                         p_player.addOrder(l_temp);
                                         p_player.issue_order();
@@ -374,8 +293,262 @@
                             System.out.println("--- Pass to next player if no territory owned or insufficient army units ---- \n");
                         }
                         break;
+
+                    case "advance":
+//                        d_LogEntry.setCommand(l_commandName+" Command is being executed");
+                        try {
+                            if (!(l_data[1] == null) || !(l_data[2] == null) || !(l_data[3] == null)) {
+                                if (GameHelper.isAlphabetic(l_data[1]) || GameHelper.isAlphabetic(l_data[2]) || GameHelper.isNumeric(l_data[3])) {
+                                    l_countryNameFrom = l_data[1];
+                                    l_countryNameTo = l_data[2];
+                                    l_numberOfArmies = Integer.parseInt(l_data[3]);
+                                    System.out.println(l_numberOfArmies);
+                                    boolean l_checkOwnedCountry = p_player.getOwnedTerritories().containsKey(l_countryNameFrom.toLowerCase());
+                                    System.out.println(l_checkOwnedCountry);
+                                    TerritoryDetails attackingCountry = p_player.getOwnedTerritories().get(l_countryNameFrom.toLowerCase());
+                                    TerritoryDetails defendingCountry = attackingCountry.getNeighbours().get(l_countryNameTo.toLowerCase());
+                                    boolean l_checkNeighbourCountry = (l_countryNameTo.equals(defendingCountry.getTerritoryID()));
+                                    System.out.println(l_checkNeighbourCountry);
+
+                                    //Checks if required armies present on Source territory
+                                    TerritoryDetails l_c= p_player.getOwnedTerritories().get(l_countryNameFrom.toLowerCase());
+                                    int l_existingArmies = l_c.getNumberOfArmies();
+                                    System.out.println(l_existingArmies);
+                                    Player l_targetPlayer = null;
+                                    for(Player temp : d_Players){
+                                        //check which player has target countryID
+                                        if(temp.getOwnedTerritories().containsKey(l_countryNameTo.toLowerCase())){
+                                            l_targetPlayer = temp;
+                                            break;
+                                        }
+                                    }
+
+                                    boolean l_checkArmies = (l_existingArmies >= l_numberOfArmies);
+                                    System.out.println("Test "+l_checkNeighbourCountry+"Test 1 "+l_checkOwnedCountry+"Test 2 "+l_checkArmies);
+                                    if(l_checkOwnedCountry && l_checkNeighbourCountry && l_checkArmies){
+                                        p_player.addOrder(new Advance(p_player, l_countryNameFrom,l_countryNameTo, l_numberOfArmies,l_targetPlayer));
+                                        p_player.issue_order();
+//                                        d_LogEntry.setMessage(p_player.getPlayerName()+" advance order added to Players OrdersList: "+l_data[0]+"  "+l_data[1]+" "+l_data[2]);
+                                    }
+                                    else{
+                                        System.out.println("Country not owned by player or target Country not adjacent or insufficient Army units | please pass to next player");
+//                                        d_LogEntry.setMessage("Country not owned by player or target Country not adjacent or insufficient Army units | please pass to next player");
+                                    }
+                                    d_GameGamePhase = GamePhase.TURN;
+                                    break;
+                                }
+                            } else
+                                System.out.println("Invalid Command");
+//                            d_LogEntry.setMessage("Invalid Command");
+                        }catch (Exception e) {
+                            System.out.println("Country not owned by player or target Country not adjacent or insufficient Army units | please pass to next player");
+//                            d_LogEntry.setMessage("Country not owned by player or target Country not adjacent or insufficient Army units | please pass to next player");
+                        }
+                        break;
+
+                    case "bomb":
+//                        d_LogEntry.setCommand(l_commandName+" Command is being executed");
+                        try {
+                            if (!(l_data[1] == null)) {
+                                if (GameHelper.isAlphabetic(l_data[1])) {
+                                    l_countryId = l_data[1];
+                                    //checks if countryId is not of current player
+                                    boolean l_checkOwnedCountryNotOfCurrent = !p_player.getOwnedTerritories().containsKey(l_countryId.toLowerCase());
+                                    boolean targetCountryNeighbour = false;
+                                    //checks if target country id is neighbour to one of current player's country
+                                    for(TerritoryDetails cD : p_player.getOwnedTerritories().values()){
+                                        if( cD.getNeighbours().containsKey(l_countryId.toLowerCase()) && !p_player.getOwnedTerritories().containsKey(l_countryId.toLowerCase())){
+                                            targetCountryNeighbour= true;
+                                            break;
+                                        }
+                                    }
+                                    Player targetPlayer = null;
+                                    for(Player temp : d_Players){
+
+                                        //check which player has target countryID
+                                        if(temp.getOwnedTerritories().containsKey(l_countryId.toLowerCase())){
+                                            targetPlayer = temp;
+                                            break;
+                                        }
+                                    }
+                                    boolean checkCard = p_player.doesCardExists("Bomb");
+                                    if(l_checkOwnedCountryNotOfCurrent && targetCountryNeighbour && checkCard){
+                                        //need to send target player instead of current player as param
+                                        p_player.addOrder(new Bomb(p_player,targetPlayer, l_countryId));
+                                        p_player.issue_order();
+//                                        d_LogEntry.setMessage(p_player.getPlayerName()+" Bomb order added to Players OrdersList: "+l_data[0]+"  "+l_data[1]);
+                                        p_player.removeCard("Bomb");
+//                                        d_LogEntry.setMessage("Bomb card removed from players card list");
+                                    }
+                                    else{
+                                        System.out.println("Bomb Card not Owned or Country owned by current player or target Country not adjacent | please pass to next player");
+//                                        d_LogEntry.setMessage("Bomb Card not Owned or Country owned by current player or target Country not adjacent | please pass to next player");
+                                    }
+                                    d_GameGamePhase = GamePhase.TURN;
+                                    break;
+                                }
+                            } else
+                                System.out.println("Invalid Command");
+//                            d_LogEntry.setMessage("Invalid Command");
+                        }catch (Exception e) {
+                            System.out.println("Bomb Card not Owned or Country owned by current player or target Country not adjacent | please pass to next player");
+//                            d_LogEntry.setMessage("Bomb Card not Owned or Country owned by current player or target Country not adjacent | please pass to next player");
+                        }
+                        break;
+
+                    case "blockade":
+//                        d_LogEntry.setCommand(l_commandName+" Command is being executed");
+                        try {
+                            if (!(l_data[1] == null)) {
+                                if (GameHelper.isAlphabetic(l_data[1])) {
+                                    l_countryId = l_data[1];
+                                    boolean l_checkOwnedCountry = p_player.getOwnedTerritories().containsKey(l_countryId.toLowerCase());
+                                    boolean checkCard = p_player.doesCardExists("Blockade");
+                                    if(l_checkOwnedCountry && checkCard){
+                                        p_player.addOrder(new Blockade(p_player, l_countryId));
+                                        p_player.issue_order();
+//                                        d_LogEntry.setMessage(p_player.getPlayerName()+" Blockade order added to Players OrdersList: "+l_data[0]+"  "+l_data[1]);
+                                        p_player.removeCard("Blockade");
+//                                        d_LogEntry.setMessage("Bloackade card removed from Player's cardList ");
+                                    }
+                                    else{
+                                        System.out.println("Blockade Card not Owned or Country not owned by current player | please pass to next player");
+//                                        d_LogEntry.setMessage("Blockade Card not Owned or Country not owned by current player | please pass to next player");
+                                    }
+                                    d_GameGamePhase = GamePhase.TURN;
+                                    break;
+                                }
+                            } else
+                                System.out.println("Invalid Command");
+//                            d_LogEntry.setMessage("Invalid Command");
+                        }catch (Exception e) {
+                            System.out.println("Blockade Card not Owned or Country not owned by current player | please pass to next player");
+//                            d_LogEntry.setMessage("Blockade Card not Owned or Country not owned by current player | please pass to next player");
+                        }
+                        break;
+
+                    case "airlift":
+//                        d_LogEntry.setCommand(l_commandName+" Command is being executed");
+                        try {
+                            if (!(l_data[1] == null) || !(l_data[2] == null) || !(l_data[3] == null)) {
+                                if (GameHelper.isAlphabetic(l_data[1]) || GameHelper.isAlphabetic(l_data[2]) || GameHelper.isNumeric(l_data[3])) {
+                                    l_sourceCountryId = l_data[1];
+                                    l_targetCountryId = l_data[2];
+                                    l_numberOfArmies = Integer.parseInt(l_data[3]);
+                                    boolean l_checkOwnedCountry = p_player.getOwnedTerritories().containsKey(l_sourceCountryId.toLowerCase());
+                                    boolean l_checkTargetOwnedCountry = p_player.getOwnedTerritories().containsKey(l_targetCountryId.toLowerCase());
+
+                                    //check armies from map which are deployed on source Country
+                                    TerritoryDetails l_c= p_player.getOwnedTerritories().get(l_sourceCountryId.toLowerCase());
+                                    int l_existingArmies = l_c.getNumberOfArmies();
+                                    boolean l_checkArmies = (l_existingArmies >= l_numberOfArmies);
+                                    boolean checkCard = p_player.doesCardExists("Airlift");
+                                    if(l_checkOwnedCountry && l_checkTargetOwnedCountry && l_checkArmies && checkCard){
+                                        p_player.addOrder(new Airlift(p_player, l_sourceCountryId, l_targetCountryId, l_numberOfArmies));
+                                        p_player.issue_order();
+//                                        d_LogEntry.setMessage(p_player.getPlayerName()+" Airlift order added to Players OrdersList: "+l_data[0]+"  "+l_data[1]+" "+l_data[2]+" "+l_data[3]);
+                                        p_player.removeCard("Airlift");
+//                                        d_LogEntry.setMessage("Airlift card removed from Player's cardList ");
+                                    }
+                                    else{
+                                        System.out.println("Airlift Card not Owned or Source Country or Target Country not owned by player insufficient Army units | please pass to next player");
+//                                        d_LogEntry.setMessage("Airlift Card not Owned or Source Country or Target Country not owned by player insufficient Army units | please pass to next player");
+                                    }
+                                    d_GameGamePhase = GamePhase.TURN;
+                                    break;
+                                }
+                            } else
+                                System.out.println("Invalid Command");
+//                            d_LogEntry.setMessage("Invalid Command");
+                        }catch (Exception e) {
+                            System.out.println("Airlift Card not Owned or Source Country or Target Country not owned by player insufficient Army units | please pass to next player");
+//                            d_LogEntry.setMessage("Airlift Card not Owned or Source Country or Target Country not owned by player insufficient Army units | please pass to next player");
+                        }
+                        break;
+                    case "negotiate":
+//                        d_LogEntry.setCommand(l_commandName+" Command is being executed");
+                        try {
+                            if (!(l_data[1] == null)){
+                                if (GameHelper.isAlphabetic(l_data[1])) {
+                                    Player l_NegPlayer = getPlayerByName(l_data[1]);
+                                    boolean checkCard = p_player.doesCardExists("Diplomacy");
+                                    if(checkCard){
+                                        p_player.addOrder(new Diplomacy(p_player, l_NegPlayer));
+                                        p_player.issue_order();
+//                                        d_LogEntry.setMessage(p_player.getPlayerName()+" Diplomacy order added to Players OrdersList: "+l_data[0]+"  "+l_data[1]+" "+l_data[2]+" "+l_data[3]);
+                                        p_player.removeCard("Diplomacy");
+//                                        d_LogEntry.setMessage("Diplomacy card removed from Player's cardList ");
+                                    }
+                                }
+                            } else
+                                System.out.println("Diplomacy Card not Owned or Invalid Command");
+//                            d_LogEntry.setMessage("Diplomacy Card not Owned or Invalid Command");
+                        }catch (Exception e) {
+                            System.out.println("Diplomacy Card not Owned or Invalid Player name");
+//                            d_LogEntry.setMessage("Diplomacy Card not Owned or Invalid Player name");
+                        }
+                        break;
+                    case "execute":
+                        int l_count = 0;
+                        for (Player l_p : d_Players) {
+                            Queue<order1> l_temp = l_p.getD_orderList();
+                            l_count = l_count +l_temp.size();
+                        }
+
+                        if(l_count == 0){
+                            System.out.println(" -----  Orders already executed !!!  ----- ");
+                            ShowMap.showMap(d_Players, d_Map);
+                            d_GameGamePhase = GamePhase.ISSUE_ORDERS;
+                            return d_GameGamePhase;
+                        }
+                        else{
+                            System.out.println(" -----  Total Orders  :" + l_count + " -----");
+                            while (l_count != 0) {
+                                for (Player l_p : d_Players) {
+
+                                    Queue<order1> l_temp = l_p.getD_orderList();
+                                    if (l_temp.size() > 0) {
+                                        order1 l_toRemove = l_p.next_order();
+                                        System.out.println("----- Order: " +l_toRemove+ " executed for player: "+l_p.getPlayerName()+ " -----");
+                                        l_toRemove.execute();
+                                    }
+                                }
+                                l_count--;
+                            }
+
+                            System.out.println("-----  Orders executed!!! -----");
+                            ShowMap.showMap(d_Players, d_Map);
+                            d_GameGamePhase = GamePhase.ISSUE_ORDERS;
+                            for (Player l_p : d_Players){
+                                if(l_p.getOwnedTerritories().size() == d_Map.getTerritories().size()){
+                                    System.out.println(l_p.getPlayerName()+" has Won the Game!");
+//                                    d_LogEntry.setMessage(l_p.getPlayerName()+" has Won the Game!");
+//                                    d_LogEntry.detach(d_WriteLog);
+                                    System.exit(0);
+                                }
+                            }
+                            //check if any player needs to be removed as of losing all territories
+                            for (Player l_p : d_Players){
+                                if(l_p.getOwnedTerritories().size() == 0){
+                                    System.out.println(l_p.getPlayerName()+" has lost all its territories and is no longer part of the game");
+//                                    d_LogEntry.setMessage(l_p.getPlayerName()+" has lost all its territories and is no longer part of the game");
+                                    d_Players.remove(l_p);
+                                }
+                            }
+
+                            System.out.println("Current Orders were executed,Starting again with assigning Reinforcements!");
+                            System.out.println("Reinforcements assigned! Players can provide deploy Orders now!");
+                            System.out.println("\nPlayer 1 can provide deploy | pass order..");
+//                            d_LogEntry.setMessage("Current Orders were executed,Starting again with assigning Reinforcements!");
+//                            d_LogEntry.setMessage("Reinforcements assigned! Players can provide deploy Orders now!");
+//                            d_LogEntry.setMessage("\nPlayer 1 can provide deploy | pass order..");
+
+                            d_GameGamePhase = GamePhase.ISSUE_ORDERS;
+                        }
+                        break;
+
 
-                case "pass":
+                    case "pass":
                     try {
                         d_GameGamePhase = GamePhase.TURN;
                     }catch (Exception e) {
@@ -384,11 +557,12 @@
                     break;
 
                 case "showmap":
-                    ShowMap.showMapWithArmies(d_Players, d_Map);
+                    d_GamePhases.showMap(d_Players, d_Map);
                     break;
 
                 default:
-                    System.out.println("----- Invalid command format. Should be:| deploy | pass | showmap | commands in ISSUE_ORDERS Phase -----");
+                    System.out.println("----- Invalid command - either use deploy | pass | showmap commands in ISSUE_ORDERS InternalPhase -------");
+                    d_LogEntry.setMessage("------ Invalid command - either use deploy | pass | showmap commands in ISSUE_ORDERS InternalPhase -------");
                     break;
             }
         }
@@ -403,13 +577,13 @@
                 case "execute":
                     int l_count = 0;
                     for (Player l_p : d_Players) {
-                        Queue<Order> l_temp = l_p.getD_orderList();
+                        Queue<order1> l_temp = l_p.getD_orderList();
                             l_count = l_count +l_temp.size();
                         }
 
                     if(l_count == 0){
                         System.out.println(" -----  Orders already executed !!!  ----- ");
-                        ShowMap.showMapWithArmies(d_Players, d_Map);
+                        ShowMap.showMap(d_Players, d_Map);
                         d_GameGamePhase = GamePhase.ISSUE_ORDERS;
                         return d_GameGamePhase;
                     }
@@ -418,9 +592,9 @@
                         while (l_count != 0) {
                             for (Player l_p : d_Players) {
 
-                                Queue<Order> l_temp = l_p.getD_orderList();
+                                Queue<order1> l_temp = l_p.getD_orderList();
                                 if (l_temp.size() > 0) {
-                                    Order l_toRemove = l_p.next_order();
+                                    order1 l_toRemove = l_p.next_order();
                                     System.out.println("----- Order: " +l_toRemove+ " executed for player: "+l_p.getPlayerName()+ " -----");
                                     l_toRemove.execute();
                                 }
@@ -429,17 +603,17 @@
                         }
 
                         System.out.println("-----  Orders executed!!! -----");
-                        ShowMap.showMapWithArmies(d_Players, d_Map);
+                        ShowMap.showMap(d_Players, d_Map);
                         d_GameGamePhase = GamePhase.ISSUE_ORDERS;
                     }
                     break;
 
                 case "showmap":
-                    ShowMap.showMapWithArmies(d_Players, d_Map);
+                    ShowMap.showMap(d_Players, d_Map);
                     break;
 
                 case "exit":
-                    System.out.println(" ----- [ END OF BUILD 1 ] ------- ");
+                    System.out.println(" ----- [ END OF BUILD 2 ] ------- ");
                     exit(0);
 
                 default:
@@ -449,4 +623,11 @@
         }
             return d_GameGamePhase;
     }
+    private Player getPlayerByName(String p_playerName) {
+        for(Player l_player:d_Players) {
+            if(l_player.getPlayerName().equals(p_playerName))
+                return l_player;
+        }
+        return null;
+    }
 }
Index: my-app/target/surefire-reports/TEST-ContinentTest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/my-app/target/surefire-reports/TEST-ContinentTest.xml b/my-app/target/surefire-reports/TEST-ContinentTest.xml
new file mode 100644
--- /dev/null	(date 1710454505000)
+++ b/my-app/target/surefire-reports/TEST-ContinentTest.xml	(date 1710454505000)
@@ -0,0 +1,64 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" name="ContinentTest" time="0" tests="1" errors="0" skipped="0" failures="0">
+  <properties>
+    <property name="sun.desktop" value="windows"/>
+    <property name="awt.toolkit" value="sun.awt.windows.WToolkit"/>
+    <property name="file.encoding.pkg" value="sun.io"/>
+    <property name="java.specification.version" value="1.8"/>
+    <property name="sun.cpu.isalist" value="amd64"/>
+    <property name="sun.jnu.encoding" value="Cp1252"/>
+    <property name="java.class.path" value="D:\Risk Game\Team6-Soen6441\my-app\target\test-classes;D:\Risk Game\Team6-Soen6441\my-app\target\classes;C:\Users\simra\.m2\repository\junit\junit\4.11\junit-4.11.jar;C:\Users\simra\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\simra\.m2\repository\org\jgrapht\jgrapht-core\1.3.1\jgrapht-core-1.3.1.jar;C:\Users\simra\.m2\repository\org\jheaps\jheaps\0.10\jheaps-0.10.jar;C:\Users\simra\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.8.2\junit-jupiter-api-5.8.2.jar;C:\Users\simra\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\simra\.m2\repository\org\junit\platform\junit-platform-commons\1.8.2\junit-platform-commons-1.8.2.jar;C:\Users\simra\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;"/>
+    <property name="java.vm.vendor" value="Oracle Corporation"/>
+    <property name="sun.arch.data.model" value="64"/>
+    <property name="user.variant" value=""/>
+    <property name="java.vendor.url" value="http://java.oracle.com/"/>
+    <property name="user.timezone" value="America/New_York"/>
+    <property name="java.vm.specification.version" value="1.8"/>
+    <property name="os.name" value="Windows 10"/>
+    <property name="user.country" value="IN"/>
+    <property name="sun.java.launcher" value="SUN_STANDARD"/>
+    <property name="sun.boot.library.path" value="C:\Program Files\Java\jdk1.8.0_202\jre\bin"/>
+    <property name="sun.java.command" value="C:\Users\simra\AppData\Local\Temp\surefire7247970468567325550\surefirebooter8317882261762625564.jar C:\Users\simra\AppData\Local\Temp\surefire7247970468567325550 2024-03-14T18-09-25_039-jvmRun1 surefire2777325568413186561tmp surefire_07945429431840633916tmp"/>
+    <property name="surefire.test.class.path" value="D:\Risk Game\Team6-Soen6441\my-app\target\test-classes;D:\Risk Game\Team6-Soen6441\my-app\target\classes;C:\Users\simra\.m2\repository\junit\junit\4.11\junit-4.11.jar;C:\Users\simra\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\simra\.m2\repository\org\jgrapht\jgrapht-core\1.3.1\jgrapht-core-1.3.1.jar;C:\Users\simra\.m2\repository\org\jheaps\jheaps\0.10\jheaps-0.10.jar;C:\Users\simra\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.8.2\junit-jupiter-api-5.8.2.jar;C:\Users\simra\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\simra\.m2\repository\org\junit\platform\junit-platform-commons\1.8.2\junit-platform-commons-1.8.2.jar;C:\Users\simra\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;"/>
+    <property name="sun.cpu.endian" value="little"/>
+    <property name="user.home" value="C:\Users\simra"/>
+    <property name="user.language" value="en"/>
+    <property name="java.specification.vendor" value="Oracle Corporation"/>
+    <property name="java.home" value="C:\Program Files\Java\jdk1.8.0_202\jre"/>
+    <property name="basedir" value="D:\Risk Game\Team6-Soen6441\my-app"/>
+    <property name="file.separator" value="\"/>
+    <property name="line.separator" value="&#10;"/>
+    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
+    <property name="java.specification.name" value="Java Platform API Specification"/>
+    <property name="java.awt.graphicsenv" value="sun.awt.Win32GraphicsEnvironment"/>
+    <property name="surefire.real.class.path" value="C:\Users\simra\AppData\Local\Temp\surefire7247970468567325550\surefirebooter8317882261762625564.jar"/>
+    <property name="sun.boot.class.path" value="C:\Program Files\Java\jdk1.8.0_202\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_202\jre\classes"/>
+    <property name="user.script" value=""/>
+    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
+    <property name="java.runtime.version" value="1.8.0_202-b08"/>
+    <property name="user.name" value="simra"/>
+    <property name="path.separator" value=";"/>
+    <property name="os.version" value="10.0"/>
+    <property name="java.endorsed.dirs" value="C:\Program Files\Java\jdk1.8.0_202\jre\lib\endorsed"/>
+    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
+    <property name="file.encoding" value="Cp1252"/>
+    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
+    <property name="localRepository" value="C:\Users\simra\.m2\repository"/>
+    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
+    <property name="java.io.tmpdir" value="C:\Users\simra\AppData\Local\Temp\"/>
+    <property name="java.version" value="1.8.0_202"/>
+    <property name="user.dir" value="D:\Risk Game\Team6-Soen6441\my-app"/>
+    <property name="os.arch" value="amd64"/>
+    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
+    <property name="java.awt.printerjob" value="sun.awt.windows.WPrinterJob"/>
+    <property name="sun.os.patch.level" value=""/>
+    <property name="java.library.path" value="C:\Program Files\Java\jdk1.8.0_202\jre\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Python311\Scripts\;C:\Python311\;C:\Program Files\Microsoft MPI\Bin\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;D:\C++\.vscode;C:\MinGW\bin;C:\Program Files\Java\jdk-18.0.2.1\bin;C:\Program Files\Java\jdk-18.0.2.1\bin;C:\Users\simra\anaconda3\Scripts;C:\Users\simra\anaconda3;C:\Program Files\Java\jdk1.8.0_202\bin;C:\Users\simra\Downloads\spark-3.0.1-bin-hadoop2.7-20221129T050659Z-001\spark-3.0.1-bin-hadoop2.7\bin;C:\Program Files\Java\jdk1.8.0_202\bin;C:\Program Files\Docker\Docker\resources\bin;C:\Program Files\Erlang OTP\erts-14.0.1\bin;C:\Program Files\Erlang OTP\bin;C:\Program Files\Git\cmd;C:\ProgramData\chocolatey\bin;D:\Ineuron\pythonProject\COMP6461\dist;C:\Program Files\Go\bin;C:\Program Files\Go\bin;C:\Program Files\PuTTY\;C:\Program Files\apache-maven-3.9.6-bin\apache-maven-3.9.6\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\simra\anaconda3;C:\Users\simra\anaconda3\Library\mingw-w64\bin;C:\Users\simra\anaconda3\Library\usr\bin;C:\Users\simra\anaconda3\Library\bin;C:\Users\simra\anaconda3\Scripts;C:\Users\simra\AppData\Local\Microsoft\WindowsApps;C:\MinGW\bin;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2022.2.2\bin;;C:\Program Files\JetBrains\PyCharm Community Edition 2022.2.2\bin;;C:\Users\simra\Downloads\spark-3.0.1-bin-hadoop2.7-20221129T050659Z-001\spark-3.0.1-bin-hadoop2.7\bin;;C:\Users\simra\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\simra\go\bin;."/>
+    <property name="java.vm.info" value="mixed mode"/>
+    <property name="java.vendor" value="Oracle Corporation"/>
+    <property name="java.vm.version" value="25.202-b08"/>
+    <property name="java.ext.dirs" value="C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext;C:\Windows\Sun\Java\lib\ext"/>
+    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
+    <property name="java.class.version" value="52.0"/>
+  </properties>
+  <testcase name="testContinent_StandardInput" classname="ContinentTest" time="0"/>
+</testsuite>
\ No newline at end of file
Index: my-app/target/surefire-reports/TEST-LoadMapTest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/my-app/target/surefire-reports/TEST-LoadMapTest.xml b/my-app/target/surefire-reports/TEST-LoadMapTest.xml
new file mode 100644
--- /dev/null	(date 1710454505000)
+++ b/my-app/target/surefire-reports/TEST-LoadMapTest.xml	(date 1710454505000)
@@ -0,0 +1,64 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" name="LoadMapTest" time="0.044" tests="1" errors="0" skipped="0" failures="0">
+  <properties>
+    <property name="sun.desktop" value="windows"/>
+    <property name="awt.toolkit" value="sun.awt.windows.WToolkit"/>
+    <property name="file.encoding.pkg" value="sun.io"/>
+    <property name="java.specification.version" value="1.8"/>
+    <property name="sun.cpu.isalist" value="amd64"/>
+    <property name="sun.jnu.encoding" value="Cp1252"/>
+    <property name="java.class.path" value="D:\Risk Game\Team6-Soen6441\my-app\target\test-classes;D:\Risk Game\Team6-Soen6441\my-app\target\classes;C:\Users\simra\.m2\repository\junit\junit\4.11\junit-4.11.jar;C:\Users\simra\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\simra\.m2\repository\org\jgrapht\jgrapht-core\1.3.1\jgrapht-core-1.3.1.jar;C:\Users\simra\.m2\repository\org\jheaps\jheaps\0.10\jheaps-0.10.jar;C:\Users\simra\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.8.2\junit-jupiter-api-5.8.2.jar;C:\Users\simra\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\simra\.m2\repository\org\junit\platform\junit-platform-commons\1.8.2\junit-platform-commons-1.8.2.jar;C:\Users\simra\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;"/>
+    <property name="java.vm.vendor" value="Oracle Corporation"/>
+    <property name="sun.arch.data.model" value="64"/>
+    <property name="user.variant" value=""/>
+    <property name="java.vendor.url" value="http://java.oracle.com/"/>
+    <property name="user.timezone" value="America/New_York"/>
+    <property name="java.vm.specification.version" value="1.8"/>
+    <property name="os.name" value="Windows 10"/>
+    <property name="user.country" value="IN"/>
+    <property name="sun.java.launcher" value="SUN_STANDARD"/>
+    <property name="sun.boot.library.path" value="C:\Program Files\Java\jdk1.8.0_202\jre\bin"/>
+    <property name="sun.java.command" value="C:\Users\simra\AppData\Local\Temp\surefire7247970468567325550\surefirebooter8317882261762625564.jar C:\Users\simra\AppData\Local\Temp\surefire7247970468567325550 2024-03-14T18-09-25_039-jvmRun1 surefire2777325568413186561tmp surefire_07945429431840633916tmp"/>
+    <property name="surefire.test.class.path" value="D:\Risk Game\Team6-Soen6441\my-app\target\test-classes;D:\Risk Game\Team6-Soen6441\my-app\target\classes;C:\Users\simra\.m2\repository\junit\junit\4.11\junit-4.11.jar;C:\Users\simra\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\simra\.m2\repository\org\jgrapht\jgrapht-core\1.3.1\jgrapht-core-1.3.1.jar;C:\Users\simra\.m2\repository\org\jheaps\jheaps\0.10\jheaps-0.10.jar;C:\Users\simra\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.8.2\junit-jupiter-api-5.8.2.jar;C:\Users\simra\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\simra\.m2\repository\org\junit\platform\junit-platform-commons\1.8.2\junit-platform-commons-1.8.2.jar;C:\Users\simra\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;"/>
+    <property name="sun.cpu.endian" value="little"/>
+    <property name="user.home" value="C:\Users\simra"/>
+    <property name="user.language" value="en"/>
+    <property name="java.specification.vendor" value="Oracle Corporation"/>
+    <property name="java.home" value="C:\Program Files\Java\jdk1.8.0_202\jre"/>
+    <property name="basedir" value="D:\Risk Game\Team6-Soen6441\my-app"/>
+    <property name="file.separator" value="\"/>
+    <property name="line.separator" value="&#10;"/>
+    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
+    <property name="java.specification.name" value="Java Platform API Specification"/>
+    <property name="java.awt.graphicsenv" value="sun.awt.Win32GraphicsEnvironment"/>
+    <property name="surefire.real.class.path" value="C:\Users\simra\AppData\Local\Temp\surefire7247970468567325550\surefirebooter8317882261762625564.jar"/>
+    <property name="sun.boot.class.path" value="C:\Program Files\Java\jdk1.8.0_202\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_202\jre\classes"/>
+    <property name="user.script" value=""/>
+    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
+    <property name="java.runtime.version" value="1.8.0_202-b08"/>
+    <property name="user.name" value="simra"/>
+    <property name="path.separator" value=";"/>
+    <property name="os.version" value="10.0"/>
+    <property name="java.endorsed.dirs" value="C:\Program Files\Java\jdk1.8.0_202\jre\lib\endorsed"/>
+    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
+    <property name="file.encoding" value="Cp1252"/>
+    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
+    <property name="localRepository" value="C:\Users\simra\.m2\repository"/>
+    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
+    <property name="java.io.tmpdir" value="C:\Users\simra\AppData\Local\Temp\"/>
+    <property name="java.version" value="1.8.0_202"/>
+    <property name="user.dir" value="D:\Risk Game\Team6-Soen6441\my-app"/>
+    <property name="os.arch" value="amd64"/>
+    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
+    <property name="java.awt.printerjob" value="sun.awt.windows.WPrinterJob"/>
+    <property name="sun.os.patch.level" value=""/>
+    <property name="java.library.path" value="C:\Program Files\Java\jdk1.8.0_202\jre\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Python311\Scripts\;C:\Python311\;C:\Program Files\Microsoft MPI\Bin\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;D:\C++\.vscode;C:\MinGW\bin;C:\Program Files\Java\jdk-18.0.2.1\bin;C:\Program Files\Java\jdk-18.0.2.1\bin;C:\Users\simra\anaconda3\Scripts;C:\Users\simra\anaconda3;C:\Program Files\Java\jdk1.8.0_202\bin;C:\Users\simra\Downloads\spark-3.0.1-bin-hadoop2.7-20221129T050659Z-001\spark-3.0.1-bin-hadoop2.7\bin;C:\Program Files\Java\jdk1.8.0_202\bin;C:\Program Files\Docker\Docker\resources\bin;C:\Program Files\Erlang OTP\erts-14.0.1\bin;C:\Program Files\Erlang OTP\bin;C:\Program Files\Git\cmd;C:\ProgramData\chocolatey\bin;D:\Ineuron\pythonProject\COMP6461\dist;C:\Program Files\Go\bin;C:\Program Files\Go\bin;C:\Program Files\PuTTY\;C:\Program Files\apache-maven-3.9.6-bin\apache-maven-3.9.6\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\simra\anaconda3;C:\Users\simra\anaconda3\Library\mingw-w64\bin;C:\Users\simra\anaconda3\Library\usr\bin;C:\Users\simra\anaconda3\Library\bin;C:\Users\simra\anaconda3\Scripts;C:\Users\simra\AppData\Local\Microsoft\WindowsApps;C:\MinGW\bin;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2022.2.2\bin;;C:\Program Files\JetBrains\PyCharm Community Edition 2022.2.2\bin;;C:\Users\simra\Downloads\spark-3.0.1-bin-hadoop2.7-20221129T050659Z-001\spark-3.0.1-bin-hadoop2.7\bin;;C:\Users\simra\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\simra\go\bin;."/>
+    <property name="java.vm.info" value="mixed mode"/>
+    <property name="java.vendor" value="Oracle Corporation"/>
+    <property name="java.vm.version" value="25.202-b08"/>
+    <property name="java.ext.dirs" value="C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext;C:\Windows\Sun\Java\lib\ext"/>
+    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
+    <property name="java.class.version" value="52.0"/>
+  </properties>
+  <testcase name="testLoadMap" classname="LoadMapTest" time="0.044"/>
+</testsuite>
\ No newline at end of file
Index: my-app/target/surefire-reports/TEST-RemoveOrderTest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/my-app/target/surefire-reports/TEST-RemoveOrderTest.xml b/my-app/target/surefire-reports/TEST-RemoveOrderTest.xml
new file mode 100644
--- /dev/null	(date 1710454505000)
+++ b/my-app/target/surefire-reports/TEST-RemoveOrderTest.xml	(date 1710454505000)
@@ -0,0 +1,64 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" name="RemoveOrderTest" time="0" tests="1" errors="0" skipped="0" failures="0">
+  <properties>
+    <property name="sun.desktop" value="windows"/>
+    <property name="awt.toolkit" value="sun.awt.windows.WToolkit"/>
+    <property name="file.encoding.pkg" value="sun.io"/>
+    <property name="java.specification.version" value="1.8"/>
+    <property name="sun.cpu.isalist" value="amd64"/>
+    <property name="sun.jnu.encoding" value="Cp1252"/>
+    <property name="java.class.path" value="D:\Risk Game\Team6-Soen6441\my-app\target\test-classes;D:\Risk Game\Team6-Soen6441\my-app\target\classes;C:\Users\simra\.m2\repository\junit\junit\4.11\junit-4.11.jar;C:\Users\simra\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\simra\.m2\repository\org\jgrapht\jgrapht-core\1.3.1\jgrapht-core-1.3.1.jar;C:\Users\simra\.m2\repository\org\jheaps\jheaps\0.10\jheaps-0.10.jar;C:\Users\simra\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.8.2\junit-jupiter-api-5.8.2.jar;C:\Users\simra\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\simra\.m2\repository\org\junit\platform\junit-platform-commons\1.8.2\junit-platform-commons-1.8.2.jar;C:\Users\simra\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;"/>
+    <property name="java.vm.vendor" value="Oracle Corporation"/>
+    <property name="sun.arch.data.model" value="64"/>
+    <property name="user.variant" value=""/>
+    <property name="java.vendor.url" value="http://java.oracle.com/"/>
+    <property name="user.timezone" value="America/New_York"/>
+    <property name="java.vm.specification.version" value="1.8"/>
+    <property name="os.name" value="Windows 10"/>
+    <property name="user.country" value="IN"/>
+    <property name="sun.java.launcher" value="SUN_STANDARD"/>
+    <property name="sun.boot.library.path" value="C:\Program Files\Java\jdk1.8.0_202\jre\bin"/>
+    <property name="sun.java.command" value="C:\Users\simra\AppData\Local\Temp\surefire7247970468567325550\surefirebooter8317882261762625564.jar C:\Users\simra\AppData\Local\Temp\surefire7247970468567325550 2024-03-14T18-09-25_039-jvmRun1 surefire2777325568413186561tmp surefire_07945429431840633916tmp"/>
+    <property name="surefire.test.class.path" value="D:\Risk Game\Team6-Soen6441\my-app\target\test-classes;D:\Risk Game\Team6-Soen6441\my-app\target\classes;C:\Users\simra\.m2\repository\junit\junit\4.11\junit-4.11.jar;C:\Users\simra\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\simra\.m2\repository\org\jgrapht\jgrapht-core\1.3.1\jgrapht-core-1.3.1.jar;C:\Users\simra\.m2\repository\org\jheaps\jheaps\0.10\jheaps-0.10.jar;C:\Users\simra\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.8.2\junit-jupiter-api-5.8.2.jar;C:\Users\simra\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\simra\.m2\repository\org\junit\platform\junit-platform-commons\1.8.2\junit-platform-commons-1.8.2.jar;C:\Users\simra\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;"/>
+    <property name="sun.cpu.endian" value="little"/>
+    <property name="user.home" value="C:\Users\simra"/>
+    <property name="user.language" value="en"/>
+    <property name="java.specification.vendor" value="Oracle Corporation"/>
+    <property name="java.home" value="C:\Program Files\Java\jdk1.8.0_202\jre"/>
+    <property name="basedir" value="D:\Risk Game\Team6-Soen6441\my-app"/>
+    <property name="file.separator" value="\"/>
+    <property name="line.separator" value="&#10;"/>
+    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
+    <property name="java.specification.name" value="Java Platform API Specification"/>
+    <property name="java.awt.graphicsenv" value="sun.awt.Win32GraphicsEnvironment"/>
+    <property name="surefire.real.class.path" value="C:\Users\simra\AppData\Local\Temp\surefire7247970468567325550\surefirebooter8317882261762625564.jar"/>
+    <property name="sun.boot.class.path" value="C:\Program Files\Java\jdk1.8.0_202\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_202\jre\classes"/>
+    <property name="user.script" value=""/>
+    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
+    <property name="java.runtime.version" value="1.8.0_202-b08"/>
+    <property name="user.name" value="simra"/>
+    <property name="path.separator" value=";"/>
+    <property name="os.version" value="10.0"/>
+    <property name="java.endorsed.dirs" value="C:\Program Files\Java\jdk1.8.0_202\jre\lib\endorsed"/>
+    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
+    <property name="file.encoding" value="Cp1252"/>
+    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
+    <property name="localRepository" value="C:\Users\simra\.m2\repository"/>
+    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
+    <property name="java.io.tmpdir" value="C:\Users\simra\AppData\Local\Temp\"/>
+    <property name="java.version" value="1.8.0_202"/>
+    <property name="user.dir" value="D:\Risk Game\Team6-Soen6441\my-app"/>
+    <property name="os.arch" value="amd64"/>
+    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
+    <property name="java.awt.printerjob" value="sun.awt.windows.WPrinterJob"/>
+    <property name="sun.os.patch.level" value=""/>
+    <property name="java.library.path" value="C:\Program Files\Java\jdk1.8.0_202\jre\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Python311\Scripts\;C:\Python311\;C:\Program Files\Microsoft MPI\Bin\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;D:\C++\.vscode;C:\MinGW\bin;C:\Program Files\Java\jdk-18.0.2.1\bin;C:\Program Files\Java\jdk-18.0.2.1\bin;C:\Users\simra\anaconda3\Scripts;C:\Users\simra\anaconda3;C:\Program Files\Java\jdk1.8.0_202\bin;C:\Users\simra\Downloads\spark-3.0.1-bin-hadoop2.7-20221129T050659Z-001\spark-3.0.1-bin-hadoop2.7\bin;C:\Program Files\Java\jdk1.8.0_202\bin;C:\Program Files\Docker\Docker\resources\bin;C:\Program Files\Erlang OTP\erts-14.0.1\bin;C:\Program Files\Erlang OTP\bin;C:\Program Files\Git\cmd;C:\ProgramData\chocolatey\bin;D:\Ineuron\pythonProject\COMP6461\dist;C:\Program Files\Go\bin;C:\Program Files\Go\bin;C:\Program Files\PuTTY\;C:\Program Files\apache-maven-3.9.6-bin\apache-maven-3.9.6\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\simra\anaconda3;C:\Users\simra\anaconda3\Library\mingw-w64\bin;C:\Users\simra\anaconda3\Library\usr\bin;C:\Users\simra\anaconda3\Library\bin;C:\Users\simra\anaconda3\Scripts;C:\Users\simra\AppData\Local\Microsoft\WindowsApps;C:\MinGW\bin;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2022.2.2\bin;;C:\Program Files\JetBrains\PyCharm Community Edition 2022.2.2\bin;;C:\Users\simra\Downloads\spark-3.0.1-bin-hadoop2.7-20221129T050659Z-001\spark-3.0.1-bin-hadoop2.7\bin;;C:\Users\simra\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\simra\go\bin;."/>
+    <property name="java.vm.info" value="mixed mode"/>
+    <property name="java.vendor" value="Oracle Corporation"/>
+    <property name="java.vm.version" value="25.202-b08"/>
+    <property name="java.ext.dirs" value="C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext;C:\Windows\Sun\Java\lib\ext"/>
+    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
+    <property name="java.class.version" value="52.0"/>
+  </properties>
+  <testcase name="testRemoveOrder" classname="RemoveOrderTest" time="0"/>
+</testsuite>
\ No newline at end of file
Index: my-app/target/surefire-reports/TEST-RemovePlayerTest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/my-app/target/surefire-reports/TEST-RemovePlayerTest.xml b/my-app/target/surefire-reports/TEST-RemovePlayerTest.xml
new file mode 100644
--- /dev/null	(date 1710454505000)
+++ b/my-app/target/surefire-reports/TEST-RemovePlayerTest.xml	(date 1710454505000)
@@ -0,0 +1,64 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" name="RemovePlayerTest" time="0.001" tests="1" errors="0" skipped="0" failures="0">
+  <properties>
+    <property name="sun.desktop" value="windows"/>
+    <property name="awt.toolkit" value="sun.awt.windows.WToolkit"/>
+    <property name="file.encoding.pkg" value="sun.io"/>
+    <property name="java.specification.version" value="1.8"/>
+    <property name="sun.cpu.isalist" value="amd64"/>
+    <property name="sun.jnu.encoding" value="Cp1252"/>
+    <property name="java.class.path" value="D:\Risk Game\Team6-Soen6441\my-app\target\test-classes;D:\Risk Game\Team6-Soen6441\my-app\target\classes;C:\Users\simra\.m2\repository\junit\junit\4.11\junit-4.11.jar;C:\Users\simra\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\simra\.m2\repository\org\jgrapht\jgrapht-core\1.3.1\jgrapht-core-1.3.1.jar;C:\Users\simra\.m2\repository\org\jheaps\jheaps\0.10\jheaps-0.10.jar;C:\Users\simra\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.8.2\junit-jupiter-api-5.8.2.jar;C:\Users\simra\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\simra\.m2\repository\org\junit\platform\junit-platform-commons\1.8.2\junit-platform-commons-1.8.2.jar;C:\Users\simra\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;"/>
+    <property name="java.vm.vendor" value="Oracle Corporation"/>
+    <property name="sun.arch.data.model" value="64"/>
+    <property name="user.variant" value=""/>
+    <property name="java.vendor.url" value="http://java.oracle.com/"/>
+    <property name="user.timezone" value="America/New_York"/>
+    <property name="java.vm.specification.version" value="1.8"/>
+    <property name="os.name" value="Windows 10"/>
+    <property name="user.country" value="IN"/>
+    <property name="sun.java.launcher" value="SUN_STANDARD"/>
+    <property name="sun.boot.library.path" value="C:\Program Files\Java\jdk1.8.0_202\jre\bin"/>
+    <property name="sun.java.command" value="C:\Users\simra\AppData\Local\Temp\surefire7247970468567325550\surefirebooter8317882261762625564.jar C:\Users\simra\AppData\Local\Temp\surefire7247970468567325550 2024-03-14T18-09-25_039-jvmRun1 surefire2777325568413186561tmp surefire_07945429431840633916tmp"/>
+    <property name="surefire.test.class.path" value="D:\Risk Game\Team6-Soen6441\my-app\target\test-classes;D:\Risk Game\Team6-Soen6441\my-app\target\classes;C:\Users\simra\.m2\repository\junit\junit\4.11\junit-4.11.jar;C:\Users\simra\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\simra\.m2\repository\org\jgrapht\jgrapht-core\1.3.1\jgrapht-core-1.3.1.jar;C:\Users\simra\.m2\repository\org\jheaps\jheaps\0.10\jheaps-0.10.jar;C:\Users\simra\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.8.2\junit-jupiter-api-5.8.2.jar;C:\Users\simra\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\simra\.m2\repository\org\junit\platform\junit-platform-commons\1.8.2\junit-platform-commons-1.8.2.jar;C:\Users\simra\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;"/>
+    <property name="sun.cpu.endian" value="little"/>
+    <property name="user.home" value="C:\Users\simra"/>
+    <property name="user.language" value="en"/>
+    <property name="java.specification.vendor" value="Oracle Corporation"/>
+    <property name="java.home" value="C:\Program Files\Java\jdk1.8.0_202\jre"/>
+    <property name="basedir" value="D:\Risk Game\Team6-Soen6441\my-app"/>
+    <property name="file.separator" value="\"/>
+    <property name="line.separator" value="&#10;"/>
+    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
+    <property name="java.specification.name" value="Java Platform API Specification"/>
+    <property name="java.awt.graphicsenv" value="sun.awt.Win32GraphicsEnvironment"/>
+    <property name="surefire.real.class.path" value="C:\Users\simra\AppData\Local\Temp\surefire7247970468567325550\surefirebooter8317882261762625564.jar"/>
+    <property name="sun.boot.class.path" value="C:\Program Files\Java\jdk1.8.0_202\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_202\jre\classes"/>
+    <property name="user.script" value=""/>
+    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
+    <property name="java.runtime.version" value="1.8.0_202-b08"/>
+    <property name="user.name" value="simra"/>
+    <property name="path.separator" value=";"/>
+    <property name="os.version" value="10.0"/>
+    <property name="java.endorsed.dirs" value="C:\Program Files\Java\jdk1.8.0_202\jre\lib\endorsed"/>
+    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
+    <property name="file.encoding" value="Cp1252"/>
+    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
+    <property name="localRepository" value="C:\Users\simra\.m2\repository"/>
+    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
+    <property name="java.io.tmpdir" value="C:\Users\simra\AppData\Local\Temp\"/>
+    <property name="java.version" value="1.8.0_202"/>
+    <property name="user.dir" value="D:\Risk Game\Team6-Soen6441\my-app"/>
+    <property name="os.arch" value="amd64"/>
+    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
+    <property name="java.awt.printerjob" value="sun.awt.windows.WPrinterJob"/>
+    <property name="sun.os.patch.level" value=""/>
+    <property name="java.library.path" value="C:\Program Files\Java\jdk1.8.0_202\jre\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Python311\Scripts\;C:\Python311\;C:\Program Files\Microsoft MPI\Bin\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;D:\C++\.vscode;C:\MinGW\bin;C:\Program Files\Java\jdk-18.0.2.1\bin;C:\Program Files\Java\jdk-18.0.2.1\bin;C:\Users\simra\anaconda3\Scripts;C:\Users\simra\anaconda3;C:\Program Files\Java\jdk1.8.0_202\bin;C:\Users\simra\Downloads\spark-3.0.1-bin-hadoop2.7-20221129T050659Z-001\spark-3.0.1-bin-hadoop2.7\bin;C:\Program Files\Java\jdk1.8.0_202\bin;C:\Program Files\Docker\Docker\resources\bin;C:\Program Files\Erlang OTP\erts-14.0.1\bin;C:\Program Files\Erlang OTP\bin;C:\Program Files\Git\cmd;C:\ProgramData\chocolatey\bin;D:\Ineuron\pythonProject\COMP6461\dist;C:\Program Files\Go\bin;C:\Program Files\Go\bin;C:\Program Files\PuTTY\;C:\Program Files\apache-maven-3.9.6-bin\apache-maven-3.9.6\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\simra\anaconda3;C:\Users\simra\anaconda3\Library\mingw-w64\bin;C:\Users\simra\anaconda3\Library\usr\bin;C:\Users\simra\anaconda3\Library\bin;C:\Users\simra\anaconda3\Scripts;C:\Users\simra\AppData\Local\Microsoft\WindowsApps;C:\MinGW\bin;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2022.2.2\bin;;C:\Program Files\JetBrains\PyCharm Community Edition 2022.2.2\bin;;C:\Users\simra\Downloads\spark-3.0.1-bin-hadoop2.7-20221129T050659Z-001\spark-3.0.1-bin-hadoop2.7\bin;;C:\Users\simra\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\simra\go\bin;."/>
+    <property name="java.vm.info" value="mixed mode"/>
+    <property name="java.vendor" value="Oracle Corporation"/>
+    <property name="java.vm.version" value="25.202-b08"/>
+    <property name="java.ext.dirs" value="C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext;C:\Windows\Sun\Java\lib\ext"/>
+    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
+    <property name="java.class.version" value="52.0"/>
+  </properties>
+  <testcase name="testRemovePlayer" classname="RemovePlayerTest" time="0"/>
+</testsuite>
\ No newline at end of file
Index: my-app/src/main/java/controller/GameHelper.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package controller;\n\nimport enumClass.GamePhase;\n\npublic class GameHelper {\n    /**\n     * it takes care whether the map is valid or not\n     * @param p_sample input string\n     * @return true if run fine otherwise false\n     */\n    public static boolean isValidMap(String p_sample) {\n        return p_sample != null && p_sample.matches(\"^[a-zA-Z.]*$\");\n    }\n\n    /**\n     * it takes care of the string matches\n     * @param p_sample input string\n     * @return true if run fine otherwise false\n     */\n    public static boolean isValidPlayer(String p_sample) {\n        return p_sample != null && p_sample.matches(\"[a-zA-Z0-9]+\");\n    }\n\n    /**\n     * it takes care of the string matches\n     * @param p_sample input string\n     * @return true if run fine otherwise false\n     */\n    public static boolean isAlphabetic(String p_sample) {\n        return p_sample != null && p_sample.matches(\"^[a-zA-Z-_]*$\");\n    }\n\n    /**\n     * it takes care of the string matches that for numeric id\n     * @param p_sample input string\n     * @return true if run fine otherwise false\n     */\n    public static boolean isNumeric(String p_sample) {\n        return p_sample != null && p_sample.matches(\"[0-9]+\");\n    }\n\n    /**\n     * it is basically set the game\n     * @param p_gameGamePhase Phase value is going to be set\n     */\n\n    /**\n     * it basically parsecommand that we are going to used in command line interface\n     * it helps to call the methods and play the game\n     * @param p_player player is going to play the move\n     * @param p_newCommand Command that is going to interpret\n     * @return next phase is start\n     */\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/my-app/src/main/java/controller/GameHelper.java b/my-app/src/main/java/controller/GameHelper.java
--- a/my-app/src/main/java/controller/GameHelper.java	(revision c69954fa9cef9a12d1a7db87280027b4939dce79)
+++ b/my-app/src/main/java/controller/GameHelper.java	(date 1710540894000)
@@ -1,10 +1,9 @@
 package controller;
 
-import enumClass.GamePhase;
-
 public class GameHelper {
     /**
      * it takes care whether the map is valid or not
+     *
      * @param p_sample input string
      * @return true if run fine otherwise false
      */
@@ -14,6 +13,7 @@
 
     /**
      * it takes care of the string matches
+     *
      * @param p_sample input string
      * @return true if run fine otherwise false
      */
@@ -23,6 +23,7 @@
 
     /**
      * it takes care of the string matches
+     *
      * @param p_sample input string
      * @return true if run fine otherwise false
      */
@@ -32,6 +33,7 @@
 
     /**
      * it takes care of the string matches that for numeric id
+     *
      * @param p_sample input string
      * @return true if run fine otherwise false
      */
@@ -39,16 +41,5 @@
         return p_sample != null && p_sample.matches("[0-9]+");
     }
 
-    /**
-     * it is basically set the game
-     * @param p_gameGamePhase Phase value is going to be set
-     */
 
-    /**
-     * it basically parsecommand that we are going to used in command line interface
-     * it helps to call the methods and play the game
-     * @param p_player player is going to play the move
-     * @param p_newCommand Command that is going to interpret
-     * @return next phase is start
-     */
-}
+}
\ No newline at end of file
Index: my-app/target/surefire-reports/AssignTerritoryDetailsTest.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/my-app/target/surefire-reports/AssignTerritoryDetailsTest.txt b/my-app/target/surefire-reports/AssignTerritoryDetailsTest.txt
new file mode 100644
--- /dev/null	(date 1710454505000)
+++ b/my-app/target/surefire-reports/AssignTerritoryDetailsTest.txt	(date 1710454505000)
@@ -0,0 +1,4 @@
+-------------------------------------------------------------------------------
+Test set: AssignTerritoryDetailsTest
+-------------------------------------------------------------------------------
+Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.002 s - in AssignTerritoryDetailsTest
Index: my-app/target/surefire-reports/com.mycompany.app.AppTest.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/my-app/target/surefire-reports/com.mycompany.app.AppTest.txt b/my-app/target/surefire-reports/com.mycompany.app.AppTest.txt
new file mode 100644
--- /dev/null	(date 1710454505000)
+++ b/my-app/target/surefire-reports/com.mycompany.app.AppTest.txt	(date 1710454505000)
@@ -0,0 +1,4 @@
+-------------------------------------------------------------------------------
+Test set: com.mycompany.app.AppTest
+-------------------------------------------------------------------------------
+Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.001 s - in com.mycompany.app.AppTest
Index: my-app/target/surefire-reports/TEST-TerritoryDetailsTest.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/my-app/target/surefire-reports/TEST-TerritoryDetailsTest.xml b/my-app/target/surefire-reports/TEST-TerritoryDetailsTest.xml
new file mode 100644
--- /dev/null	(date 1710454505000)
+++ b/my-app/target/surefire-reports/TEST-TerritoryDetailsTest.xml	(date 1710454505000)
@@ -0,0 +1,66 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<testsuite xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://maven.apache.org/surefire/maven-surefire-plugin/xsd/surefire-test-report.xsd" name="TerritoryDetailsTest" time="0.001" tests="3" errors="0" skipped="0" failures="0">
+  <properties>
+    <property name="sun.desktop" value="windows"/>
+    <property name="awt.toolkit" value="sun.awt.windows.WToolkit"/>
+    <property name="file.encoding.pkg" value="sun.io"/>
+    <property name="java.specification.version" value="1.8"/>
+    <property name="sun.cpu.isalist" value="amd64"/>
+    <property name="sun.jnu.encoding" value="Cp1252"/>
+    <property name="java.class.path" value="D:\Risk Game\Team6-Soen6441\my-app\target\test-classes;D:\Risk Game\Team6-Soen6441\my-app\target\classes;C:\Users\simra\.m2\repository\junit\junit\4.11\junit-4.11.jar;C:\Users\simra\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\simra\.m2\repository\org\jgrapht\jgrapht-core\1.3.1\jgrapht-core-1.3.1.jar;C:\Users\simra\.m2\repository\org\jheaps\jheaps\0.10\jheaps-0.10.jar;C:\Users\simra\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.8.2\junit-jupiter-api-5.8.2.jar;C:\Users\simra\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\simra\.m2\repository\org\junit\platform\junit-platform-commons\1.8.2\junit-platform-commons-1.8.2.jar;C:\Users\simra\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;"/>
+    <property name="java.vm.vendor" value="Oracle Corporation"/>
+    <property name="sun.arch.data.model" value="64"/>
+    <property name="user.variant" value=""/>
+    <property name="java.vendor.url" value="http://java.oracle.com/"/>
+    <property name="user.timezone" value="America/New_York"/>
+    <property name="java.vm.specification.version" value="1.8"/>
+    <property name="os.name" value="Windows 10"/>
+    <property name="user.country" value="IN"/>
+    <property name="sun.java.launcher" value="SUN_STANDARD"/>
+    <property name="sun.boot.library.path" value="C:\Program Files\Java\jdk1.8.0_202\jre\bin"/>
+    <property name="sun.java.command" value="C:\Users\simra\AppData\Local\Temp\surefire7247970468567325550\surefirebooter8317882261762625564.jar C:\Users\simra\AppData\Local\Temp\surefire7247970468567325550 2024-03-14T18-09-25_039-jvmRun1 surefire2777325568413186561tmp surefire_07945429431840633916tmp"/>
+    <property name="surefire.test.class.path" value="D:\Risk Game\Team6-Soen6441\my-app\target\test-classes;D:\Risk Game\Team6-Soen6441\my-app\target\classes;C:\Users\simra\.m2\repository\junit\junit\4.11\junit-4.11.jar;C:\Users\simra\.m2\repository\org\hamcrest\hamcrest-core\1.3\hamcrest-core-1.3.jar;C:\Users\simra\.m2\repository\org\jgrapht\jgrapht-core\1.3.1\jgrapht-core-1.3.1.jar;C:\Users\simra\.m2\repository\org\jheaps\jheaps\0.10\jheaps-0.10.jar;C:\Users\simra\.m2\repository\org\junit\jupiter\junit-jupiter-api\5.8.2\junit-jupiter-api-5.8.2.jar;C:\Users\simra\.m2\repository\org\opentest4j\opentest4j\1.2.0\opentest4j-1.2.0.jar;C:\Users\simra\.m2\repository\org\junit\platform\junit-platform-commons\1.8.2\junit-platform-commons-1.8.2.jar;C:\Users\simra\.m2\repository\org\apiguardian\apiguardian-api\1.1.2\apiguardian-api-1.1.2.jar;"/>
+    <property name="sun.cpu.endian" value="little"/>
+    <property name="user.home" value="C:\Users\simra"/>
+    <property name="user.language" value="en"/>
+    <property name="java.specification.vendor" value="Oracle Corporation"/>
+    <property name="java.home" value="C:\Program Files\Java\jdk1.8.0_202\jre"/>
+    <property name="basedir" value="D:\Risk Game\Team6-Soen6441\my-app"/>
+    <property name="file.separator" value="\"/>
+    <property name="line.separator" value="&#10;"/>
+    <property name="java.vm.specification.vendor" value="Oracle Corporation"/>
+    <property name="java.specification.name" value="Java Platform API Specification"/>
+    <property name="java.awt.graphicsenv" value="sun.awt.Win32GraphicsEnvironment"/>
+    <property name="surefire.real.class.path" value="C:\Users\simra\AppData\Local\Temp\surefire7247970468567325550\surefirebooter8317882261762625564.jar"/>
+    <property name="sun.boot.class.path" value="C:\Program Files\Java\jdk1.8.0_202\jre\lib\resources.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\rt.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\sunrsasign.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jsse.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jce.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\charsets.jar;C:\Program Files\Java\jdk1.8.0_202\jre\lib\jfr.jar;C:\Program Files\Java\jdk1.8.0_202\jre\classes"/>
+    <property name="user.script" value=""/>
+    <property name="sun.management.compiler" value="HotSpot 64-Bit Tiered Compilers"/>
+    <property name="java.runtime.version" value="1.8.0_202-b08"/>
+    <property name="user.name" value="simra"/>
+    <property name="path.separator" value=";"/>
+    <property name="os.version" value="10.0"/>
+    <property name="java.endorsed.dirs" value="C:\Program Files\Java\jdk1.8.0_202\jre\lib\endorsed"/>
+    <property name="java.runtime.name" value="Java(TM) SE Runtime Environment"/>
+    <property name="file.encoding" value="Cp1252"/>
+    <property name="java.vm.name" value="Java HotSpot(TM) 64-Bit Server VM"/>
+    <property name="localRepository" value="C:\Users\simra\.m2\repository"/>
+    <property name="java.vendor.url.bug" value="http://bugreport.sun.com/bugreport/"/>
+    <property name="java.io.tmpdir" value="C:\Users\simra\AppData\Local\Temp\"/>
+    <property name="java.version" value="1.8.0_202"/>
+    <property name="user.dir" value="D:\Risk Game\Team6-Soen6441\my-app"/>
+    <property name="os.arch" value="amd64"/>
+    <property name="java.vm.specification.name" value="Java Virtual Machine Specification"/>
+    <property name="java.awt.printerjob" value="sun.awt.windows.WPrinterJob"/>
+    <property name="sun.os.patch.level" value=""/>
+    <property name="java.library.path" value="C:\Program Files\Java\jdk1.8.0_202\jre\bin;C:\Windows\Sun\Java\bin;C:\Windows\system32;C:\Windows;C:\Python311\Scripts\;C:\Python311\;C:\Program Files\Microsoft MPI\Bin\;C:\Program Files\Common Files\Oracle\Java\javapath;C:\Program Files (x86)\Common Files\Oracle\Java\javapath;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\Program Files (x86)\NVIDIA Corporation\PhysX\Common;C:\Program Files\NVIDIA Corporation\NVIDIA NvDLISR;D:\C++\.vscode;C:\MinGW\bin;C:\Program Files\Java\jdk-18.0.2.1\bin;C:\Program Files\Java\jdk-18.0.2.1\bin;C:\Users\simra\anaconda3\Scripts;C:\Users\simra\anaconda3;C:\Program Files\Java\jdk1.8.0_202\bin;C:\Users\simra\Downloads\spark-3.0.1-bin-hadoop2.7-20221129T050659Z-001\spark-3.0.1-bin-hadoop2.7\bin;C:\Program Files\Java\jdk1.8.0_202\bin;C:\Program Files\Docker\Docker\resources\bin;C:\Program Files\Erlang OTP\erts-14.0.1\bin;C:\Program Files\Erlang OTP\bin;C:\Program Files\Git\cmd;C:\ProgramData\chocolatey\bin;D:\Ineuron\pythonProject\COMP6461\dist;C:\Program Files\Go\bin;C:\Program Files\Go\bin;C:\Program Files\PuTTY\;C:\Program Files\apache-maven-3.9.6-bin\apache-maven-3.9.6\bin;C:\Program Files\MySQL\MySQL Shell 8.0\bin\;C:\Users\simra\anaconda3;C:\Users\simra\anaconda3\Library\mingw-w64\bin;C:\Users\simra\anaconda3\Library\usr\bin;C:\Users\simra\anaconda3\Library\bin;C:\Users\simra\anaconda3\Scripts;C:\Users\simra\AppData\Local\Microsoft\WindowsApps;C:\MinGW\bin;C:\Program Files\JetBrains\IntelliJ IDEA Community Edition 2022.2.2\bin;;C:\Program Files\JetBrains\PyCharm Community Edition 2022.2.2\bin;;C:\Users\simra\Downloads\spark-3.0.1-bin-hadoop2.7-20221129T050659Z-001\spark-3.0.1-bin-hadoop2.7\bin;;C:\Users\simra\AppData\Local\Programs\Microsoft VS Code\bin;C:\Users\simra\go\bin;."/>
+    <property name="java.vm.info" value="mixed mode"/>
+    <property name="java.vendor" value="Oracle Corporation"/>
+    <property name="java.vm.version" value="25.202-b08"/>
+    <property name="java.ext.dirs" value="C:\Program Files\Java\jdk1.8.0_202\jre\lib\ext;C:\Windows\Sun\Java\lib\ext"/>
+    <property name="sun.io.unicode.encoding" value="UnicodeLittle"/>
+    <property name="java.class.version" value="52.0"/>
+  </properties>
+  <testcase name="testParameterizedConstructor" classname="TerritoryDetailsTest" time="0"/>
+  <testcase name="testGetTerritoryID" classname="TerritoryDetailsTest" time="0"/>
+  <testcase name="testGetNeighbours" classname="TerritoryDetailsTest" time="0"/>
+</testsuite>
\ No newline at end of file
Index: my-app/my-app.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/my-app/my-app.iml b/.idea/Team6-Soen6441-v2-final.iml
rename from my-app/my-app.iml
rename to .idea/Team6-Soen6441-v2-final.iml
--- a/my-app/my-app.iml	(revision c69954fa9cef9a12d1a7db87280027b4939dce79)
+++ b/.idea/Team6-Soen6441-v2-final.iml	(date 1710549113084)
@@ -1,17 +1,14 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <module org.jetbrains.idea.maven.project.MavenProjectsManager.isMavenModule="true" type="JAVA_MODULE" version="4">
-  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_1_8">
+  <component name="NewModuleRootManager" LANGUAGE_LEVEL="JDK_1_5">
     <output url="file://$MODULE_DIR$/target/classes" />
     <output-test url="file://$MODULE_DIR$/target/test-classes" />
     <content url="file://$MODULE_DIR$">
-      <sourceFolder url="file://$MODULE_DIR$/src/main/java" isTestSource="false" />
-      <sourceFolder url="file://$MODULE_DIR$/src/main/resources" type="java-resource" />
-      <sourceFolder url="file://$MODULE_DIR$/src/test/java" isTestSource="true" />
       <excludeFolder url="file://$MODULE_DIR$/target" />
     </content>
     <orderEntry type="inheritedJdk" />
     <orderEntry type="sourceFolder" forTests="false" />
-    <orderEntry type="library" scope="TEST" name="Maven: junit:junit:4.11" level="project" />
+    <orderEntry type="library" scope="TEST" name="Maven: junit:junit:4.12" level="project" />
     <orderEntry type="library" scope="TEST" name="Maven: org.hamcrest:hamcrest-core:1.3" level="project" />
     <orderEntry type="library" name="Maven: org.jgrapht:jgrapht-core:1.3.1" level="project" />
     <orderEntry type="library" name="Maven: org.jheaps:jheaps:0.10" level="project" />
Index: .idea/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
new file mode 100644
--- /dev/null	(date 1710548954566)
+++ b/.idea/.gitignore	(date 1710548954566)
@@ -0,0 +1,3 @@
+# Default ignored files
+/shelf/
+/workspace.xml
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"ProjectRootManager\" version=\"2\" default=\"true\" />\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision c69954fa9cef9a12d1a7db87280027b4939dce79)
+++ b/.idea/misc.xml	(date 1710549576940)
@@ -1,4 +1,12 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
-  <component name="ProjectRootManager" version="2" default="true" />
+  <component name="MavenProjectsManager">
+    <option name="originalFiles">
+      <list>
+        <option value="$PROJECT_DIR$/pom.xml" />
+        <option value="$PROJECT_DIR$/my-app/pom.xml" />
+      </list>
+    </option>
+  </component>
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_19" default="true" project-jdk-name="19" project-jdk-type="JavaSDK" />
 </project>
\ No newline at end of file
Index: .idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules.xml b/.idea/modules.xml
new file mode 100644
--- /dev/null	(date 1710549576925)
+++ b/.idea/modules.xml	(date 1710549576925)
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/.idea/Team6-Soen6441-v2-final.iml" filepath="$PROJECT_DIR$/.idea/Team6-Soen6441-v2-final.iml" />
+      <module fileurl="file://$PROJECT_DIR$/my-app/my-app.iml" filepath="$PROJECT_DIR$/my-app/my-app.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
new file mode 100644
--- /dev/null	(date 1710548954481)
+++ b/.idea/vcs.xml	(date 1710548954481)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: my-app/src/test/java/OrderTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/my-app/src/test/java/OrderTest.java b/my-app/src/test/java/OrderTest.java
new file mode 100644
--- /dev/null	(date 1710454505000)
+++ b/my-app/src/test/java/OrderTest.java	(date 1710454505000)
@@ -0,0 +1,25 @@
+
+import static org.junit.Assert.*;
+
+import org.junit.Test;
+
+import model.Order;
+import model.Player;
+import model.TerritoryDetails;
+
+public class OrderTest {
+
+    @Test
+    public void testExecute() {
+        Player player = new Player("Simran");
+        TerritoryDetails territory = new TerritoryDetails("TestTerritory", "10");
+        player.getOwnedTerritories().put(territory.getTerritoryID().toLowerCase(), territory);
+
+        Order order = new Order(player, "testterritory", 5);
+        boolean result = order.execute();
+        assertEquals(true, result);
+        
+    }
+
+   
+}
\ No newline at end of file
Index: my-app/src/test/java/LoadMapTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/my-app/src/test/java/LoadMapTest.java b/my-app/src/test/java/LoadMapTest.java
new file mode 100644
--- /dev/null	(date 1710454505000)
+++ b/my-app/src/test/java/LoadMapTest.java	(date 1710454505000)
@@ -0,0 +1,29 @@
+import model.GameMap;
+import model.GameRunnerEngine;
+import org.junit.Before;
+import org.junit.Test;
+
+import static org.junit.Assert.assertEquals;
+import static org.junit.Assert.assertNotNull;
+
+public class LoadMapTest {
+
+    private GameRunnerEngine d_RunGame;
+
+    /*  It just set uo the context.*/
+    @Before
+    public void before() {
+        d_RunGame = new GameRunnerEngine();
+    }
+
+   /*  It test to load an existing map */
+    @Test
+    public void testLoadMap() {
+        String mapName = "xyz.map";
+        GameMap loadedMap = d_RunGame.loadMap(mapName);
+
+        assertNotNull(loadedMap);
+        assertEquals(mapName, loadedMap.d_MapName);
+    }
+
+}
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"15448994-5576-43bb-886b-0c85ee982303\" name=\"Changes\" comment=\"i dont know commit\" />\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\n  </component>\n  <component name=\"MarkdownSettingsMigration\">\n    <option name=\"stateVersion\" value=\"1\" />\n  </component>\n  <component name=\"MavenImportPreferences\">\n    <option name=\"generalSettings\">\n      <MavenGeneralSettings>\n        <option name=\"useMavenConfig\" value=\"true\" />\n      </MavenGeneralSettings>\n    </option>\n  </component>\n  <component name=\"ProjectId\" id=\"2dblYEnWCItt3qiU8OXN8b8nYrH\" />\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\"><![CDATA[{\n  \"keyToString\": {\n    \"RunOnceActivity.OpenProjectViewOnStart\": \"true\",\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\n    \"last_opened_file_path\": \"/Users/harsimran/IdeaProjects/Team6-Soen6441-version2\",\n    \"project.structure.last.edited\": \"Modules\",\n    \"project.structure.proportion\": \"0.0\",\n    \"project.structure.side.proportion\": \"0.0\"\n  }\n}]]></component>\n  <component name=\"RunManager\" selected=\"Application.App\">\n    <configuration name=\"App\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"MAIN_CLASS_NAME\" value=\"view.App\" />\n      <module name=\"my-app\" />\n      <extension name=\"coverage\">\n        <pattern>\n          <option name=\"PATTERN\" value=\"view.*\" />\n          <option name=\"ENABLED\" value=\"true\" />\n        </pattern>\n      </extension>\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <configuration name=\"LoadMap\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"MAIN_CLASS_NAME\" value=\"model.LoadMap\" />\n      <module name=\"my-app\" />\n      <extension name=\"coverage\">\n        <pattern>\n          <option name=\"PATTERN\" value=\"model.*\" />\n          <option name=\"ENABLED\" value=\"true\" />\n        </pattern>\n      </extension>\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"Application.App\" />\n        <item itemvalue=\"Application.LoadMap\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"15448994-5576-43bb-886b-0c85ee982303\" name=\"Changes\" comment=\"\" />\n      <created>1710284703703</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1710284703703</updated>\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"i dont know commit\">\n      <created>1710373815472</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1710373815472</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"2\" />\n    <servers />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State />\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"i dont know commit\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"i dont know commit\" />\n  </component>\n  <component name=\"XDebuggerManager\">\n    <breakpoint-manager>\n      <breakpoints>\n        <line-breakpoint enabled=\"true\" type=\"java-line\">\n          <url>file://$PROJECT_DIR$/my-app/src/main/java/model/LoadMap.java</url>\n          <line>14</line>\n          <option name=\"timeStamp\" value=\"2\" />\n        </line-breakpoint>\n      </breakpoints>\n    </breakpoint-manager>\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision c69954fa9cef9a12d1a7db87280027b4939dce79)
+++ b/.idea/workspace.xml	(date 1710549576939)
@@ -4,7 +4,120 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="15448994-5576-43bb-886b-0c85ee982303" name="Changes" comment="i dont know commit" />
+    <list default="true" id="15448994-5576-43bb-886b-0c85ee982303" name="Changes" comment="tested on my side, collaboration running fine">
+      <change afterPath="$PROJECT_DIR$/.idea/.gitignore" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/compiler.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/jarRepositories.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/libraries/Maven__junit_junit_4_12.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/modules.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/vcs.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/my-app/.idea/.gitignore" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/my-app/.idea/uiDesigner.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/my-app/log.txt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/my-app/src/main/Doc/Architectural_design_Build_1.pdf" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/my-app/src/main/Doc/Refactoring.txt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/my-app/src/main/java/model/Advance.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/my-app/src/main/java/model/Airlift.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/my-app/src/main/java/model/Blockade.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/my-app/src/main/java/model/Bomb.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/my-app/src/main/java/model/Card.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/my-app/src/main/java/model/Diplomacy.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/my-app/src/main/java/model/EditGame.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/my-app/src/main/java/model/MainPlayPhase.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/my-app/src/main/java/model/order1.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/my-app/src/main/resources/maps/xyz.map" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/my-app/src/test/java/AddOrderTest.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/my-app/src/test/java/AddPlayerTest.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/my-app/src/test/java/AllotArmiesTest.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/my-app/src/test/java/AssignTerritoryDetailsTest.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/my-app/src/test/java/ContinentTest.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/my-app/src/test/java/LoadMapTest.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/my-app/src/test/java/OrderTest.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/my-app/src/test/java/RemoveOrderTest.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/my-app/src/test/java/RemovePlayerTest.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/my-app/src/test/java/ValidateMapTest.java" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/my-app/target/classes/maps/xyz.map" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/my-app/target/classes/model/Advance.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/my-app/target/classes/model/Airlift.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/my-app/target/classes/model/Blockade.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/my-app/target/classes/model/Bomb.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/my-app/target/classes/model/Card.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/my-app/target/classes/model/Diplomacy.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/my-app/target/classes/model/EditGame.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/my-app/target/classes/model/MainPlayPhase.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/my-app/target/classes/model/order1.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/my-app/target/maven-archiver/pom.properties" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/my-app/target/maven-status/maven-compiler-plugin/compile/default-compile/createdFiles.lst" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/my-app/target/maven-status/maven-compiler-plugin/compile/default-compile/inputFiles.lst" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/my-app/target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/createdFiles.lst" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/my-app/target/maven-status/maven-compiler-plugin/testCompile/default-testCompile/inputFiles.lst" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/my-app/target/my-app-1.0-SNAPSHOT.jar" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/my-app/target/surefire-reports/AddOrderTest.txt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/my-app/target/surefire-reports/AddPlayerTest.txt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/my-app/target/surefire-reports/AllotArmiesTest.txt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/my-app/target/surefire-reports/AssignTerritoryDetailsTest.txt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/my-app/target/surefire-reports/ContinentTest.txt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/my-app/target/surefire-reports/LoadMapTest.txt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/my-app/target/surefire-reports/OrderTest.txt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/my-app/target/surefire-reports/RemoveOrderTest.txt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/my-app/target/surefire-reports/RemovePlayerTest.txt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/my-app/target/surefire-reports/TEST-ContinentTest.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/my-app/target/surefire-reports/TEST-LoadMapTest.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/my-app/target/surefire-reports/TEST-OrderTest.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/my-app/target/surefire-reports/TEST-RemoveOrderTest.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/my-app/target/surefire-reports/TEST-RemovePlayerTest.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/my-app/target/surefire-reports/TEST-TerritoryDetailsTest.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/my-app/target/surefire-reports/com.mycompany.app.AppTest.txt" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/my-app/target/test-classes/AddOrderTest.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/my-app/target/test-classes/AddPlayerTest.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/my-app/target/test-classes/AllotArmiesTest.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/my-app/target/test-classes/AssignTerritoryDetailsTest.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/my-app/target/test-classes/ContinentTest.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/my-app/target/test-classes/LoadMapTest.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/my-app/target/test-classes/OrderTest.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/my-app/target/test-classes/RemoveOrderTest.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/my-app/target/test-classes/RemovePlayerTest.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/my-app/target/test-classes/ValidateMapTest.class" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/my-app/target/test-classes/com/mycompany/app/AppTest.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/AllotArmies.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/Continent.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/Order.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/Player.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/StartUpPhase.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/hello.map" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/my-app/.idea/compiler.xml" beforeDir="false" afterPath="$PROJECT_DIR$/my-app/.idea/compiler.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/my-app/.idea/libraries/Maven__junit_junit_4_11.xml" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/my-app/.idea/libraries/Maven__org_hamcrest_hamcrest_core_1_3.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_hamcrest_hamcrest_core_1_3.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/my-app/.idea/libraries/Maven__org_jgrapht_jgrapht_core_1_3_1.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_jgrapht_jgrapht_core_1_3_1.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/my-app/.idea/libraries/Maven__org_jheaps_jheaps_0_10.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/libraries/Maven__org_jheaps_jheaps_0_10.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/my-app/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/my-app/.idea/misc.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/my-app/.idea/modules.xml" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/my-app/.idea/workspace.xml" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/my-app/my-app.iml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/Team6-Soen6441-v2-final.iml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/my-app/pom.xml" beforeDir="false" afterPath="$PROJECT_DIR$/my-app/pom.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/my-app/src/main/java/controller/Game.java" beforeDir="false" afterPath="$PROJECT_DIR$/my-app/src/main/java/controller/Game.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/my-app/src/main/java/controller/GameHelper.java" beforeDir="false" afterPath="$PROJECT_DIR$/my-app/src/main/java/controller/GameHelper.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/my-app/src/main/java/controller/GamePhaseManagement.java" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/my-app/src/main/java/model/AllotArmies.java" beforeDir="false" afterPath="$PROJECT_DIR$/my-app/src/main/java/model/AllotArmies.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/my-app/src/main/java/model/Continent.java" beforeDir="false" afterPath="$PROJECT_DIR$/my-app/src/main/java/model/Continent.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/my-app/src/main/java/model/GameMap.java" beforeDir="false" afterPath="$PROJECT_DIR$/my-app/src/main/java/model/GameMap.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/my-app/src/main/java/model/GameRunnerEngine.java" beforeDir="false" afterPath="$PROJECT_DIR$/my-app/src/main/java/model/GameRunnerEngine.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/my-app/src/main/java/model/Order.java" beforeDir="false" afterPath="$PROJECT_DIR$/my-app/src/main/java/model/Order.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/my-app/src/main/java/model/ValidateMap.java" beforeDir="false" afterPath="$PROJECT_DIR$/my-app/src/main/java/model/ValidateMap.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/my-app/src/main/java/view/App.java" beforeDir="false" afterPath="$PROJECT_DIR$/my-app/src/main/java/view/App.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/my-app/src/test/java/com/mycompany/app/AppTest.java" beforeDir="false" afterPath="$PROJECT_DIR$/my-app/src/test/java/com/mycompany/app/AppTest.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/my-app/target/classes/controller/Game.class" beforeDir="false" afterPath="$PROJECT_DIR$/my-app/target/classes/controller/Game.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/my-app/target/classes/controller/GameHelper.class" beforeDir="false" afterPath="$PROJECT_DIR$/my-app/target/classes/controller/GameHelper.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/my-app/target/classes/controller/GamePhaseManagement.class" beforeDir="false" />
+      <change beforePath="$PROJECT_DIR$/my-app/target/classes/model/AllotArmies.class" beforeDir="false" afterPath="$PROJECT_DIR$/my-app/target/classes/model/AllotArmies.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/my-app/target/classes/model/Continent.class" beforeDir="false" afterPath="$PROJECT_DIR$/my-app/target/classes/model/Continent.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/my-app/target/classes/model/GameMap.class" beforeDir="false" afterPath="$PROJECT_DIR$/my-app/target/classes/model/GameMap.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/my-app/target/classes/model/GameRunnerEngine.class" beforeDir="false" afterPath="$PROJECT_DIR$/my-app/target/classes/model/GameRunnerEngine.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/my-app/target/classes/model/Order.class" beforeDir="false" afterPath="$PROJECT_DIR$/my-app/target/classes/model/Order.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/my-app/target/classes/model/ValidateMap.class" beforeDir="false" afterPath="$PROJECT_DIR$/my-app/target/classes/model/ValidateMap.class" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/my-app/target/classes/view/App.class" beforeDir="false" afterPath="$PROJECT_DIR$/my-app/target/classes/view/App.class" afterDir="false" />
+    </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
@@ -32,12 +145,19 @@
   "keyToString": {
     "RunOnceActivity.OpenProjectViewOnStart": "true",
     "RunOnceActivity.ShowReadmeOnStart": "true",
-    "last_opened_file_path": "/Users/harsimran/IdeaProjects/Team6-Soen6441-version2",
+    "SHARE_PROJECT_CONFIGURATION_FILES": "true",
+    "last_opened_file_path": "/Users/harsimran/IdeaProjects/Team6-Soen6441-v2-final",
     "project.structure.last.edited": "Modules",
     "project.structure.proportion": "0.0",
     "project.structure.side.proportion": "0.0"
   }
 }]]></component>
+  <component name="RecentsManager">
+    <key name="CopyFile.RECENT_KEYS">
+      <recent name="$PROJECT_DIR$" />
+      <recent name="$PROJECT_DIR$/my-app" />
+    </key>
+  </component>
   <component name="RunManager" selected="Application.App">
     <configuration name="App" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
       <option name="MAIN_CLASS_NAME" value="view.App" />
@@ -88,7 +208,14 @@
       <option name="project" value="LOCAL" />
       <updated>1710373815472</updated>
     </task>
-    <option name="localTasksCounter" value="2" />
+    <task id="LOCAL-00002" summary="tested on my side, collaboration running fine">
+      <created>1710549569290</created>
+      <option name="number" value="00002" />
+      <option name="presentableId" value="LOCAL-00002" />
+      <option name="project" value="LOCAL" />
+      <updated>1710549569290</updated>
+    </task>
+    <option name="localTasksCounter" value="3" />
     <servers />
   </component>
   <component name="Vcs.Log.Tabs.Properties">
@@ -104,7 +231,8 @@
   </component>
   <component name="VcsManagerConfiguration">
     <MESSAGE value="i dont know commit" />
-    <option name="LAST_COMMIT_MESSAGE" value="i dont know commit" />
+    <MESSAGE value="tested on my side, collaboration running fine" />
+    <option name="LAST_COMMIT_MESSAGE" value="tested on my side, collaboration running fine" />
   </component>
   <component name="XDebuggerManager">
     <breakpoint-manager>
Index: my-app/src/test/java/com/mycompany/app/AppTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package com.mycompany.app;\n\nimport static org.junit.Assert.assertTrue;\n\nimport org.junit.Test;\n\n/**\n * Unit test for simple App.\n */\npublic class AppTest \n{\n    /**\n     * Rigorous Test :-)\n     */\n    @Test\n    public void shouldAnswerWithTrue()\n    {\n        assertTrue( true );\n    }\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/my-app/src/test/java/com/mycompany/app/AppTest.java b/my-app/src/test/java/com/mycompany/app/AppTest.java
--- a/my-app/src/test/java/com/mycompany/app/AppTest.java	(revision c69954fa9cef9a12d1a7db87280027b4939dce79)
+++ b/my-app/src/test/java/com/mycompany/app/AppTest.java	(date 1710454505000)
@@ -1,6 +1,6 @@
 package com.mycompany.app;
 
-import static org.junit.Assert.assertTrue;
+import static org.junit.Assert.*;
 
 import org.junit.Test;
 
Index: my-app/src/test/java/ContinentTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/my-app/src/test/java/ContinentTest.java b/my-app/src/test/java/ContinentTest.java
new file mode 100644
--- /dev/null	(date 1710454505000)
+++ b/my-app/src/test/java/ContinentTest.java	(date 1710454505000)
@@ -0,0 +1,17 @@
+
+import static org.junit.Assert.*;
+
+import org.junit.Test;
+
+import model.Continent;
+
+public class ContinentTest {
+
+    @Test
+    public void testContinent_StandardInput() {
+        Continent continent = new Continent("Europe", 5);
+        assertEquals("Europe", continent.d_ContinentId);
+        assertEquals(5, continent.d_ControlValue);
+        assertEquals(0, continent.d_Countries.size());
+    }
+}
\ No newline at end of file
Index: my-app/src/test/java/AllotArmiesTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/my-app/src/test/java/AllotArmiesTest.java b/my-app/src/test/java/AllotArmiesTest.java
new file mode 100644
--- /dev/null	(date 1710454505000)
+++ b/my-app/src/test/java/AllotArmiesTest.java	(date 1710454505000)
@@ -0,0 +1,17 @@
+
+import static org.junit.Assert.*;
+
+import org.junit.Test;
+
+import model.AllotArmies;
+import model.Player;
+
+public class AllotArmiesTest {
+
+    @Test
+    public void testAllotArmies_StandardInput() {
+        Player player = new Player("Parth");
+        AllotArmies.allotArmies(player);
+        assertEquals(6, player.getOwnedArmies());
+    }
+}
\ No newline at end of file
Index: my-app/src/test/java/AddOrderTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/my-app/src/test/java/AddOrderTest.java b/my-app/src/test/java/AddOrderTest.java
new file mode 100644
--- /dev/null	(date 1710454505000)
+++ b/my-app/src/test/java/AddOrderTest.java	(date 1710454505000)
@@ -0,0 +1,45 @@
+
+import static org.junit.Assert.*;
+
+import java.util.ArrayDeque;
+import java.util.Queue;
+
+import org.junit.Before;
+import org.junit.Test;
+
+import model.Order;
+import model.Player;
+
+/**
+ * Tests if addition of orders works
+ */
+public class AddOrderTest {
+    Order d_Order;
+    Queue<Order> d_OrderList;
+    Player d_Player;
+    String d_PlayerName;
+
+    /**
+     * Set up the context
+     */
+    @Before
+    public void before(){
+        d_PlayerName = "Parth";
+        d_Player = new Player(d_PlayerName);
+        d_Order = new Order(d_Player,"Canada",4);
+        d_OrderList = new ArrayDeque<>();
+    }
+
+    /**
+     * Test if tests are rightly identified or not
+     */
+    @Test
+    public void testAddOrder(){
+        //adds an order
+        d_OrderList.add(d_Order);
+        assertEquals(d_OrderList.peek(), d_Order);
+    }
+
+}
+
+
Index: my-app/src/test/java/AddPlayerTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/my-app/src/test/java/AddPlayerTest.java b/my-app/src/test/java/AddPlayerTest.java
new file mode 100644
--- /dev/null	(date 1710454505000)
+++ b/my-app/src/test/java/AddPlayerTest.java	(date 1710454505000)
@@ -0,0 +1,38 @@
+import model.GameMap;
+import model.Player;
+import model.StartUpPhase;
+import org.junit.Before;
+import org.junit.Test;
+
+import java.util.ArrayList;
+
+import static org.junit.jupiter.api.Assertions.*;
+
+public class AddPlayerTest {
+
+    StartUpPhase startUpPhase;
+    ArrayList<Player> players;
+    GameMap gameMap;
+
+    @Before
+    public void setUp() {
+        startUpPhase = new StartUpPhase();
+        players = new ArrayList<>();
+        gameMap = new GameMap("france.map");
+    }
+    @Test
+    public void testAddPlayer() {
+        /*  it test adding players within the limit*/
+
+        assertTrue(startUpPhase.addPlayer(players, "Hetul"));
+        assertTrue(startUpPhase.addPlayer(players, "Simaran"));
+        assertTrue(startUpPhase.addPlayer(players, "Mir"));
+        assertTrue(startUpPhase.addPlayer(players, "ABC"));
+        /*  it test Remove player for croos check*/
+        assertTrue(startUpPhase.removePlayer(players, "Hetul"));
+        assertTrue(startUpPhase.addPlayer(players, "Parth"));
+
+        assertEquals(4, players.size());
+    }
+
+}
Index: my-app/src/test/java/RemovePlayerTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/my-app/src/test/java/RemovePlayerTest.java b/my-app/src/test/java/RemovePlayerTest.java
new file mode 100644
--- /dev/null	(date 1710454505000)
+++ b/my-app/src/test/java/RemovePlayerTest.java	(date 1710454505000)
@@ -0,0 +1,38 @@
+import model.GameMap;
+import model.Player;
+import model.StartUpPhase;
+import org.junit.Before;
+import org.junit.Test;
+
+import java.util.ArrayList;
+
+import static org.junit.jupiter.api.Assertions.*;
+
+public class RemovePlayerTest {
+
+    StartUpPhase startUpPhase;
+    ArrayList<Player> players;
+    GameMap gameMap;
+
+    @Before
+    public void setUp() {
+        startUpPhase = new StartUpPhase();
+        players = new ArrayList<>();
+        gameMap = new GameMap("france.map");  // Assuming a map is provided for testing
+    }
+
+    @Test
+    public void testRemovePlayer() {
+        startUpPhase.addPlayer(players, "Hetul");
+        startUpPhase.addPlayer(players, "Simaran");
+        startUpPhase.addPlayer(players, "Mir");
+
+         /*  it test removing players */
+        assertTrue(startUpPhase.removePlayer(players, "Simaran"));
+        assertEquals(2, players.size());
+        /* it checks */
+        assertFalse(startUpPhase.removePlayer(players, "NonExistingPlayer"));
+        assertEquals(2, players.size());
+    }
+
+}
Index: my-app/src/test/java/RemoveOrderTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/my-app/src/test/java/RemoveOrderTest.java b/my-app/src/test/java/RemoveOrderTest.java
new file mode 100644
--- /dev/null	(date 1710454505000)
+++ b/my-app/src/test/java/RemoveOrderTest.java	(date 1710454505000)
@@ -0,0 +1,46 @@
+
+import static org.junit.Assert.*;
+
+import java.util.ArrayDeque;
+import java.util.Queue;
+
+import org.junit.Before;
+import org.junit.Test;
+
+import model.Order;
+import model.Player;
+
+/**
+ * Tests if addition of orders works
+ */
+public class RemoveOrderTest {
+    Order d_Order;
+    Queue<Order> d_OrderList;
+    Player d_Player;
+    String d_PlayerName;
+
+    /**
+     * Set up the context
+     */
+    @Before
+    public void before(){
+        d_PlayerName = "Mir";
+        d_Player = new Player(d_PlayerName);
+        d_Order = new Order(d_Player,"India",5);
+        d_OrderList = new ArrayDeque<>();
+        d_OrderList.add(d_Order);
+    }
+
+    /**
+     * Test if tests are rightly identified or not
+     */
+    @Test
+    public void testRemoveOrder(){
+        //removes order
+        d_OrderList.poll();
+        assertEquals(0,d_OrderList.size());
+    }
+
+}
+
+
Index: my-app/src/test/java/ValidateMapTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/my-app/src/test/java/ValidateMapTest.java b/my-app/src/test/java/ValidateMapTest.java
new file mode 100644
--- /dev/null	(date 1710454505000)
+++ b/my-app/src/test/java/ValidateMapTest.java	(date 1710454505000)
@@ -0,0 +1,44 @@
+import org.jgrapht.Graph;
+import static org.junit.jupiter.api.Assertions.assertTrue;
+import static org.junit.jupiter.api.Assertions.assertFalse;
+import model.GameMap;
+import model.ValidateMap;
+import model.TerritoryDetails;
+import static org.junit.jupiter.api.Assertions.*;
+import java.util.HashMap;
+import org.jgrapht.graph.DefaultDirectedGraph;
+import org.jgrapht.graph.DefaultEdge;
+import org.junit.jupiter.api.Test;
+
+import java.util.HashMap;
+
+import static org.junit.jupiter.api.Assertions.*;
+
+
+public class ValidateMapTest {
+
+    @Test
+    void testCreateSubGraph() {
+        GameMap gameMap = new GameMap();
+        /* it is check for subgraph*/
+        ValidateMap validator = new ValidateMap();
+        Graph<TerritoryDetails, DefaultEdge> fullGraph = validator.createGraph(gameMap);
+        Graph<TerritoryDetails, DefaultEdge> subGraph = new DefaultDirectedGraph<>(DefaultEdge.class);
+
+        TerritoryDetails vertex1 = new TerritoryDetails("Ain","Rhone-Alpes");
+        TerritoryDetails vertex2 = new TerritoryDetails("Aisne","Picardie");
+        TerritoryDetails vertex3 = new TerritoryDetails("Allier","Auvergne");
+
+        subGraph.addVertex(vertex1);
+        subGraph.addVertex(vertex2);
+        subGraph.addVertex(vertex3);
+
+        subGraph.addEdge(vertex1, vertex2);
+        subGraph.addEdge(vertex2, vertex3);
+
+        assertNotNull(subGraph);
+        assertFalse(subGraph.vertexSet().isEmpty());
+    }
+
+}
+
Index: my-app/.idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"MavenProjectsManager\">\n    <option name=\"originalFiles\">\n      <list>\n        <option value=\"$PROJECT_DIR$/pom.xml\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_19\" default=\"true\" project-jdk-name=\"19\" project-jdk-type=\"JavaSDK\" />\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/my-app/.idea/misc.xml b/my-app/.idea/misc.xml
--- a/my-app/.idea/misc.xml	(revision c69954fa9cef9a12d1a7db87280027b4939dce79)
+++ b/my-app/.idea/misc.xml	(date 1710454505000)
@@ -1,5 +1,6 @@
 <?xml version="1.0" encoding="UTF-8"?>
 <project version="4">
+  <component name="ExternalStorageConfigurationManager" enabled="true" />
   <component name="MavenProjectsManager">
     <option name="originalFiles">
       <list>
@@ -7,5 +8,5 @@
       </list>
     </option>
   </component>
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_19" default="true" project-jdk-name="19" project-jdk-type="JavaSDK" />
+  <component name="ProjectRootManager" version="2" project-jdk-name="17" project-jdk-type="JavaSDK" />
 </project>
\ No newline at end of file
Index: my-app/src/test/java/AssignTerritoryDetailsTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/my-app/src/test/java/AssignTerritoryDetailsTest.java b/my-app/src/test/java/AssignTerritoryDetailsTest.java
new file mode 100644
--- /dev/null	(date 1710454505000)
+++ b/my-app/src/test/java/AssignTerritoryDetailsTest.java	(date 1710454505000)
@@ -0,0 +1,53 @@
+import model.GameMap;
+import model.Player;
+import model.StartUpPhase;
+import model.TerritoryDetails;
+import org.junit.Before;
+import org.junit.Test;
+
+import java.util.ArrayList;
+import java.util.HashMap;
+
+import static org.junit.Assert.*;
+
+public class AssignTerritoryDetailsTest {
+
+    StartUpPhase startUpPhase;
+    ArrayList<Player> players;
+    GameMap gameMap;
+
+    @Before
+    public void setUp() {
+        startUpPhase = new StartUpPhase();
+        players = new ArrayList<>();
+        gameMap = new GameMap("france.map");
+    }
+
+    @Test
+    public void testAssignTerritories() {
+        /* it is add the player name*/
+        startUpPhase.addPlayer(players, "Hetul");
+        startUpPhase.addPlayer(players, "Simran");
+
+        gameMap.getTerritories().put("Ain", new TerritoryDetails("Ain","Rhone-Alpes"));
+        gameMap.getTerritories().put("Aisne", new TerritoryDetails("Aisne","Picardie"));
+
+        /* it is assigning territories*/
+
+        assertTrue(startUpPhase.assignTerritories(gameMap, players));
+
+        for (Player player : players) {
+            HashMap<String, TerritoryDetails> ownedTerritories = player.getOwnedTerritories();
+            assertNotNull(ownedTerritories);
+            assertTrue(ownedTerritories.size() > 0);
+
+            /*  it is just Printing territory names for each player*/
+
+            System.out.println("Player " + player.getPlayerName() + " territories:");
+            for (TerritoryDetails territory : ownedTerritories.values()) {
+                System.out.println("  Territory: " + territory.getTerritoryID());
+            }
+        }
+    }
+
+}
Index: my-app/.idea/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/my-app/.idea/.gitignore b/my-app/.idea/.gitignore
new file mode 100644
--- /dev/null	(date 1710454505000)
+++ b/my-app/.idea/.gitignore	(date 1710454505000)
@@ -0,0 +1,8 @@
+# Default ignored files
+/shelf/
+/workspace.xml
+# Editor-based HTTP Client requests
+/httpRequests/
+# Datasource local storage ignored files
+/dataSources/
+/dataSources.local.xml
Index: my-app/.idea/compiler.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"CompilerConfiguration\">\n    <annotationProcessing>\n      <profile name=\"Maven default annotation processors profile\" enabled=\"true\">\n        <sourceOutputDir name=\"target/generated-sources/annotations\" />\n        <sourceTestOutputDir name=\"target/generated-test-sources/test-annotations\" />\n        <outputRelativeToContentRoot value=\"true\" />\n        <module name=\"my-app\" />\n      </profile>\n    </annotationProcessing>\n    <bytecodeTargetLevel>\n      <module name=\"my-app\" target=\"1.8\" />\n    </bytecodeTargetLevel>\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/my-app/.idea/compiler.xml b/my-app/.idea/compiler.xml
--- a/my-app/.idea/compiler.xml	(revision c69954fa9cef9a12d1a7db87280027b4939dce79)
+++ b/my-app/.idea/compiler.xml	(date 1710454505000)
@@ -9,8 +9,5 @@
         <module name="my-app" />
       </profile>
     </annotationProcessing>
-    <bytecodeTargetLevel>
-      <module name="my-app" target="1.8" />
-    </bytecodeTargetLevel>
   </component>
 </project>
\ No newline at end of file
Index: my-app/.idea/uiDesigner.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/my-app/.idea/uiDesigner.xml b/my-app/.idea/uiDesigner.xml
new file mode 100644
--- /dev/null	(date 1710454505000)
+++ b/my-app/.idea/uiDesigner.xml	(date 1710454505000)
@@ -0,0 +1,124 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Palette2">
+    <group name="Swing">
+      <item class="com.intellij.uiDesigner.HSpacer" tooltip-text="Horizontal Spacer" icon="/com/intellij/uiDesigner/icons/hspacer.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="1" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="com.intellij.uiDesigner.VSpacer" tooltip-text="Vertical Spacer" icon="/com/intellij/uiDesigner/icons/vspacer.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="1" anchor="0" fill="2" />
+      </item>
+      <item class="javax.swing.JPanel" icon="/com/intellij/uiDesigner/icons/panel.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JScrollPane" icon="/com/intellij/uiDesigner/icons/scrollPane.svg" removable="false" auto-create-binding="false" can-attach-label="true">
+        <default-constraints vsize-policy="7" hsize-policy="7" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JButton" icon="/com/intellij/uiDesigner/icons/button.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="0" fill="1" />
+        <initial-values>
+          <property name="text" value="Button" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JRadioButton" icon="/com/intellij/uiDesigner/icons/radioButton.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="RadioButton" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JCheckBox" icon="/com/intellij/uiDesigner/icons/checkBox.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="CheckBox" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JLabel" icon="/com/intellij/uiDesigner/icons/label.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="Label" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JTextField" icon="/com/intellij/uiDesigner/icons/textField.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JPasswordField" icon="/com/intellij/uiDesigner/icons/passwordField.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JFormattedTextField" icon="/com/intellij/uiDesigner/icons/formattedTextField.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextArea" icon="/com/intellij/uiDesigner/icons/textArea.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextPane" icon="/com/intellij/uiDesigner/icons/textPane.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JEditorPane" icon="/com/intellij/uiDesigner/icons/editorPane.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JComboBox" icon="/com/intellij/uiDesigner/icons/comboBox.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="2" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JTable" icon="/com/intellij/uiDesigner/icons/table.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JList" icon="/com/intellij/uiDesigner/icons/list.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="2" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTree" icon="/com/intellij/uiDesigner/icons/tree.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTabbedPane" icon="/com/intellij/uiDesigner/icons/tabbedPane.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSplitPane" icon="/com/intellij/uiDesigner/icons/splitPane.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSpinner" icon="/com/intellij/uiDesigner/icons/spinner.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSlider" icon="/com/intellij/uiDesigner/icons/slider.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSeparator" icon="/com/intellij/uiDesigner/icons/separator.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JProgressBar" icon="/com/intellij/uiDesigner/icons/progressbar.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JToolBar" icon="/com/intellij/uiDesigner/icons/toolbar.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1">
+          <preferred-size width="-1" height="20" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JToolBar$Separator" icon="/com/intellij/uiDesigner/icons/toolbarSeparator.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JScrollBar" icon="/com/intellij/uiDesigner/icons/scrollbar.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="0" anchor="0" fill="2" />
+      </item>
+    </group>
+  </component>
+</project>
\ No newline at end of file
diff --git a/my-app/.idea/libraries/Maven__org_jgrapht_jgrapht_core_1_3_1.xml b/.idea/libraries/Maven__org_jgrapht_jgrapht_core_1_3_1.xml
rename from my-app/.idea/libraries/Maven__org_jgrapht_jgrapht_core_1_3_1.xml
rename to .idea/libraries/Maven__org_jgrapht_jgrapht_core_1_3_1.xml
diff --git a/my-app/.idea/libraries/Maven__org_jheaps_jheaps_0_10.xml b/.idea/libraries/Maven__org_jheaps_jheaps_0_10.xml
rename from my-app/.idea/libraries/Maven__org_jheaps_jheaps_0_10.xml
rename to .idea/libraries/Maven__org_jheaps_jheaps_0_10.xml
diff --git a/my-app/.idea/libraries/Maven__org_hamcrest_hamcrest_core_1_3.xml b/.idea/libraries/Maven__org_hamcrest_hamcrest_core_1_3.xml
rename from my-app/.idea/libraries/Maven__org_hamcrest_hamcrest_core_1_3.xml
rename to .idea/libraries/Maven__org_hamcrest_hamcrest_core_1_3.xml
diff --git a/my-app/src/main/resources/maps/xyz.map b/my-app/src/main/resources/maps/xyz.map
new file mode 100644
diff --git a/my-app/target/classes/maps/xyz.map b/my-app/target/classes/maps/xyz.map
new file mode 100644
